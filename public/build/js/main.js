(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))

},{"_process":2}],2:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],3:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

"use strict";

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  if (!(obj instanceof Object && !Array.isArray(obj))) {
    throw new Error('keyMirror(...): Argument must be an object.');
  }
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{}],4:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _ApiRequest=require('./ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var AccessToken=function(){function AccessToken(){_classCallCheck(this,AccessToken);}_createClass(AccessToken,null,[{key:'get',value:function get(verify){if(typeof verify==='undefined'){verify=false;}return new Promise(function(resolve,reject){if(AccessToken._accessToken){return resolve(AccessToken._accessToken);}var access_token=localStorage.getItem(_Constants.Config.Storage.ACCESS_TOKEN);if(access_token===null){AccessToken.clear();return reject(new Error({code:403,message:'Unauthorized'}));}AccessToken.set(access_token,true).then(resolve);});}},{key:'set',value:function set(access_token,dontUpdateStorage){AccessToken._accessToken=access_token;return new Promise(function(resolve,reject){if(!dontUpdateStorage){localStorage.setItem(_Constants.Config.Storage.ACCESS_TOKEN,access_token);}resolve(access_token);});}},{key:'clear',value:function clear(){AccessToken._accessToken=null;return localStorage.removeItem(_Constants.Config.Storage.ACCESS_TOKEN);}}]);return AccessToken;}();exports.default=AccessToken;

},{"../Utils/Constants":13,"./ApiRequest":5}],5:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiUtils=require('./ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('./AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _superagent=require('superagent');var _superagent2=_interopRequireDefault(_superagent);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var ApiRequest=function(){_createClass(ApiRequest,null,[{key:'updateNetworkIndicator',value:function updateNetworkIndicator(){var dir=arguments.length<=0||arguments[0]===undefined?'-':arguments[0];if(dir==='+'){ApiRequest.activeRequests++;}else {ApiRequest.activeRequests--;}if(ApiRequest.activeRequests<=0){ApiRequest.activeRequests=0;}else {}}},{key:'create',value:function create(method,endpoint){return new this(method,endpoint);}},{key:'createAnon',value:function createAnon(method,endpoint){var request=new this(method,endpoint);request.setAnonymous(true);return request;}},{key:'get',value:function get(endpoint){return new this('get',endpoint);}},{key:'post',value:function post(endpoint){return new this('post',endpoint);}},{key:'put',value:function put(endpoint){return new this('put',endpoint);}},{key:'delete',value:function _delete(endpoint){return new this('delete',endpoint);}}]);function ApiRequest(method,endpoint){_classCallCheck(this,ApiRequest);if(endpoint===undefined){endpoint=method;method='get';}else {method=method.toLowerCase();}if(endpoint.indexOf('?')!==-1){throw new Error('You must set query string data via the `query` function');}this.isAnonymous=false;this.handleErrors=true;this.ignoreNetworkError=false;this.url=_ApiUtils2.default.buildUrl(endpoint);this._setupRequest(method);}_createClass(ApiRequest,[{key:'setAnonymous',value:function setAnonymous(isAnonymous){this.isAnonymous=isAnonymous;return this;}},{key:'setHandleErrors',value:function setHandleErrors(handleErrors){this.handleErrors=handleErrors;return this;}},{key:'setIgnoreNetworkError',value:function setIgnoreNetworkError(ignoreNetworkError){this.ignoreNetworkError=ignoreNetworkError;return this;}},{key:'configure',value:function configure(callback){callback(this.request);return this;}},{key:'send',value:function send(callback,errCallback){var _this=this;if(this.isAnonymous){return this._sendIt(callback,errCallback);}_AccessToken2.default.get().then(function(token){_this.query({token:token});_this._sendIt(callback,errCallback);});}},{key:'data',value:function data(_data){this.requestBody=JSON.stringify(_data);return this;}},{key:'query',value:function query(data){this.queryData=Object.assign(this.queryData,data);return this;}},{key:'header',value:function header(_header,value){this.requestHeaders[_header]=value;return this;}},{key:'headers',value:function headers(_headers){this.requestHeaders=Object.assign(this.requestHeaders,_headers);return this;}},{key:'_setupRequest',value:function _setupRequest(method){this.requestMethod=!method?'get':method;this.requestHeaders={'Accept':'application/json','Content-Type':'application/json'};this.queryData={};this.requestBody={};this.request=null;}},{key:'_sendIt',value:function _sendIt(callback,errCallback){var _this2=this;ApiRequest.updateNetworkIndicator('+');this.request=_superagent2.default[this.requestMethod](this.url);if(!_Utils2.default.isEmpty(this.queryData)){this.request.query(this.queryData);}if(!_Utils2.default.isEmpty(this.requestHeaders)){this.request.set(this.requestHeaders);}this.request.send(this.requestBody).end(function(err,res){ApiRequest.updateNetworkIndicator();if(res.ok){callback(res.body);}else if(res.unauthorized){_AccessToken2.default.clear();_Actions2.default.noauth();}else {if(_this2.handleErrors){_ApiUtils2.default.handleError(res.body.error);}if(errCallback)errCallback(res.body.error);}});}}]);return ApiRequest;}();ApiRequest.activeRequests=0;exports.default=ApiRequest;

},{"../Utils/Actions":12,"../Utils/Utils":16,"./AccessToken":4,"./ApiUtils":6,"superagent":"superagent"}],6:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var DEFAULT_ERROR='There was a problem with your request';var ApiUtils=function(){function ApiUtils(){_classCallCheck(this,ApiUtils);}_createClass(ApiUtils,null,[{key:'handleError',value:function handleError(err){console.warn(err);_Utils2.default.showError(err.message||DEFAULT_ERROR);}},{key:'handleNetworkError',value:function handleNetworkError(err){console.warn(err);}},{key:'buildUrl',value:function buildUrl(endpoint){endpoint=_Utils2.default.trimChar(endpoint,'/');if(endpoint.indexOf(_Constants.Config.api_root)===-1){endpoint=_Constants.Config.api_root+endpoint;}return endpoint;}}]);return ApiUtils;}();exports.default=ApiUtils;

},{"../Utils/Constants":13,"../Utils/Utils":16}],7:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LoginForm=function(_React$Component){_inherits(LoginForm,_React$Component);function LoginForm(props){_classCallCheck(this,LoginForm);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(LoginForm).call(this,props));_this.state={};_this.onSubmit=_this.onSubmit.bind(_this);return _this;}_createClass(LoginForm,[{key:'render',value:function render(){return _react2.default.createElement('form',{className:'navbar-form navbar-right',role:'form',onSubmit:this.onSubmit},_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'username',type:'text',placeholder:'username',className:'form-control'})),_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'password',type:'password',placeholder:'password',className:'form-control'})),_react2.default.createElement('button',{type:'submit',className:'btn btn-default'},'Sign in'));}},{key:'onSubmit',value:function onSubmit(e){e.preventDefault();var data={username:this.refs.username.value,password:this.refs.password.value};_Actions2.default.login(data);}}]);return LoginForm;}(_react2.default.Component);LoginForm.propTypes={};LoginForm.defaultProps={};exports.default=LoginForm;var styles={formField:{margin:3}};

},{"../Api/ApiRequest":5,"../Utils/Actions":12,"react":"react"}],8:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _dropzone=require('dropzone');var _dropzone2=_interopRequireDefault(_dropzone);var _Constants=require('../Utils/Constants');var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _ApiUtils=require('../Api/ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SRDropzone=function(_React$Component){_inherits(SRDropzone,_React$Component);function SRDropzone(props){_classCallCheck(this,SRDropzone);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(SRDropzone).call(this,props));_this.dropzone=null;_this.state={};return _this;}_createClass(SRDropzone,[{key:'componentDidMount',value:function componentDidMount(){var _this2=this;_AccessToken2.default.get().then(function(token){var dzOptions={url:_ApiUtils2.default.buildUrl('/upload-file?token='+token),dictDefaultMessage:"<h3>Dragon Drop Images</h3><p> or Click to Upload</p>",init:function init(){this.on("success",function(file,response){console.log(file,response);});this.on("addedfile",function(file){var dzName=file.previewElement.querySelector('[data-dz-name]');dzName.innerHTML=_Constants.Config.uploads_dir+file.name;});}};_this2.dropzone=new _dropzone2.default(_this2.refs.dropzone,dzOptions);});}},{key:'render',value:function render(){return _react2.default.createElement('div',{ref:'dropzone',style:this.props.style,className:'dropzone'},this.props.children);}}]);return SRDropzone;}(_react2.default.Component);SRDropzone.propTypes={style:_react2.default.PropTypes.object,activeStyle:_react2.default.PropTypes.object,multiple:_react2.default.PropTypes.bool};SRDropzone.defaultProps={style:{},activeStyle:{},multiple:true};exports.default=SRDropzone;

},{"../Api/AccessToken":4,"../Api/ApiUtils":6,"../Utils/Constants":13,"../Utils/Utils":16,"dropzone":"dropzone","react":"react"}],9:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserMenu=function(_React$Component){_inherits(UserMenu,_React$Component);function UserMenu(props){_classCallCheck(this,UserMenu);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserMenu).call(this,props));_this.state={user:_this.props.user};return _this;}_createClass(UserMenu,[{key:'componentWillMount',value:function componentWillMount(){this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();}},{key:'render',value:function render(){return _react2.default.createElement('ul',{className:'nav navbar-nav navbar-right'},_react2.default.createElement('li',{className:'dropdown'},_react2.default.createElement('a',{href:'#',className:'dropdown-toggle','data-toggle':'dropdown',role:'button','aria-haspopup':'true','aria-expanded':'false'},this.state.user.username,_react2.default.createElement('span',{className:'caret'})),_react2.default.createElement('ul',{className:'dropdown-menu'},_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'/admin/page-editor'},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign','aria-hidden':'true',style:styles.icon}),'Add Page')),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'/admin/page-inventory'},_react2.default.createElement('span',{className:'glyphicon glyphicon-edit','aria-hidden':'true',style:styles.icon}),'Edit Something')),_react2.default.createElement('li',{role:'separator',className:'divider'}),_react2.default.createElement('li',{className:'dropdown-header'},'My Account'),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'#',onClick:this._onLogoutPress},_react2.default.createElement('span',{className:'glyphicon glyphicon-log-out','aria-hidden':'true',style:styles.icon}),'Sign Out')))));}},{key:'_onLogoutPress',value:function _onLogoutPress(e){e.preventDefault();_Actions2.default.logout();}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user});}}]);return UserMenu;}(_react2.default.Component);UserMenu.propTypes={user:_react2.default.PropTypes.object};UserMenu.defaultProps={user:{}};exports.default=UserMenu;var styles={icon:{paddingRight:'5px'}};

},{"../Stores/CurrentUser":11,"../Utils/Actions":12,"react":"react"}],10:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);var _LoginForm=require('./LoginForm');var _LoginForm2=_interopRequireDefault(_LoginForm);var _UserMenu=require('./UserMenu');var _UserMenu2=_interopRequireDefault(_UserMenu);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserNav=function(_React$Component){_inherits(UserNav,_React$Component);function UserNav(props){_classCallCheck(this,UserNav);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserNav).call(this,props));_this.state={loading:true,user:{}};return _this;}_createClass(UserNav,[{key:'componentWillMount',value:function componentWillMount(){var _this2=this;this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.stopAuthListen=_Actions2.default.noauth.listen(function(){return _this2.setState({loading:false});});this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();this.stopAuthListen();}},{key:'renderLoginForm',value:function renderLoginForm(){return _react2.default.createElement(_LoginForm2.default,null);}},{key:'renderUserMenu',value:function renderUserMenu(){return _react2.default.createElement(_UserMenu2.default,{user:this.state.user});}},{key:'render',value:function render(){if(this.state.loading){return null;}return _react2.default.createElement('div',{style:styles.container},this.state.user.id?this.renderUserMenu():this.renderLoginForm());}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user,loading:false});}}]);return UserNav;}(_react2.default.Component);UserNav.propTypes={};UserNav.defaultProps={};exports.default=UserNav;var styles={container:{height:'56px'},username:{margin:3,lineHeight:'44px',color:'white'}};

},{"../Stores/CurrentUser":11,"../Utils/Actions":12,"./LoginForm":7,"./UserMenu":9,"react":"react"}],11:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _Constants=require('../Utils/Constants');var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _ApiUtils=require('../Api/ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var defaultUser={id:null,username:null,session_id:null};var currentUser=Object.assign({},defaultUser);exports.default=_reflux2.default.createStore({listenables:[_Actions2.default],init:function init(){},get:function get(){return currentUser;},update:function update(userUpdates){currentUser=Object.assign({},userUpdates);this.trigger(currentUser);},onLogin:function onLogin(creds){_ApiRequest2.default.post('/account/login').data(creds).setAnonymous(true).send(function(res){_AccessToken2.default.set(res.data.session_id).then(function(){return _Actions2.default.login.completed(res);});},_Actions2.default.login.failed);},onLoginCompleted:function onLoginCompleted(response){var user=response.data;this.update(user);},onLogout:function onLogout(){_ApiRequest2.default.post('/account/logout').setHandleErrors(false).setIgnoreNetworkError(true).send(_Actions2.default.logout.completed,_Actions2.default.logout.failed);this.update(defaultUser);},onLogoutCompleted:function onLogoutCompleted(){_AccessToken2.default.clear();},onLogoutFailed:function onLogoutFailed(){_AccessToken2.default.clear();},onLoadUser:function onLoadUser(){_ApiRequest2.default.get('/account').send(_Actions2.default.loadUser.completed,_Actions2.default.loadUser.failed);},onLoadUserCompleted:function onLoadUserCompleted(response){this.update(response.data);}});

},{"../Api/AccessToken":4,"../Api/ApiRequest":5,"../Api/ApiUtils":6,"../Utils/Actions":12,"../Utils/Constants":13,"reflux":"reflux"}],12:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var Actions=_reflux2.default.createActions(["auth","unauth","noauth",{"login":{asyncResult:true}},{"logout":{asyncResult:true}},{"loadUser":{asyncResult:true}}]);Actions.auth.listen(function(){_AccessToken2.default.get(true).then(function(accessToken){return Actions.loadUser(accessToken);}).catch(function(){return Actions.noauth();});});exports.default=Actions;

},{"../Api/AccessToken":4,"../Api/ApiRequest":5,"reflux":"reflux"}],13:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var keyMirror=require('keyMirror');var HOST_NAME="clefoodblog.com";var ENV=window.location.hostname===HOST_NAME?'production':'dev';var isProd=true,apiVersion='v1',apiHost='http://'+HOST_NAME+'/api',siteRoot='http://'+HOST_NAME;switch(ENV){case 'dev':isProd=false;apiHost='http://dev.'+HOST_NAME+'/api';siteRoot='http://dev.'+HOST_NAME;break;}var Config=exports.Config={ENV:ENV,api_root:apiHost+'/',site_root:siteRoot+'/',uploads_dir:siteRoot+'/uploads/',Storage:keyMirror({ACCESS_TOKEN:null})};

},{"keyMirror":3}],14:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _jquery=require('jquery');var _jquery2=_interopRequireDefault(_jquery);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _UserNav=require('../Components/UserNav');var _UserNav2=_interopRequireDefault(_UserNav);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Initialize=function(){function Initialize(){_classCallCheck(this,Initialize);}_createClass(Initialize,null,[{key:'globals',value:function globals(){window.jQuery=_jquery2.default;}},{key:'bootstrap',value:function bootstrap(){require('bootstrap');}},{key:'onReady',value:function onReady(){var baButton=document.getElementById('btnComingSoon');if(baButton){baButton.onclick=function(){if(ga)ga('send','event','buttons','click','stay tuned');console.log('send','event','buttons','click','stay tuned');return false;};}_reactDom2.default.render(_react2.default.createElement(_UserNav2.default,null),document.getElementById('UserNav'));}},{key:'authUser',value:function authUser(){_Actions2.default.auth();}},{key:'onLoad',value:function onLoad(){Initialize.globals();Initialize.bootstrap();Initialize.onReady();Initialize.authUser();}}]);return Initialize;}();exports.default=Initialize;

},{"../Components/UserNav":10,"../Utils/Actions":12,"bootstrap":"bootstrap","jquery":"jquery","react":"react","react-dom":"react-dom"}],15:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _path=require('path');var _path2=_interopRequireDefault(_path);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _PageEditor=require('../Views/PageEditor');var _PageEditor2=_interopRequireDefault(_PageEditor);var _PageInventory=require('../Views/PageInventory');var _PageInventory2=_interopRequireDefault(_PageInventory);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Routes=function(){function Routes(){_classCallCheck(this,Routes);}_createClass(Routes,null,[{key:'current',value:function current(pathname){var basename=_path2.default.basename(pathname)||Routes.homeRoute;var camelName=basename.replace(/-([a-z])/g,function(g){return g[1].toUpperCase();});if(typeof Routes[camelName]==='function'){Routes[camelName]();}}},{key:'home',value:function home(){console.log('Home route');}},{key:'pageEditor',value:function pageEditor(){var pageId=_Utils2.default.getQueryParam('id')||null;if(pageId)pageId=parseInt(pageId);_reactDom2.default.render(_react2.default.createElement(_PageEditor2.default,{pageId:pageId}),document.getElementById('PageEditor'));}},{key:'pageInventory',value:function pageInventory(){_reactDom2.default.render(_react2.default.createElement(_PageInventory2.default,null),document.getElementById('PageInventory'));}}]);return Routes;}();Routes.homeRoute='home';exports.default=Routes;

},{"../Utils/Utils":16,"../Views/PageEditor":17,"../Views/PageInventory":18,"path":1,"react":"react","react-dom":"react-dom"}],16:[function(require,module,exports){
'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./Constants');var _humaneJs=require('humane-js');var _humaneJs2=_interopRequireDefault(_humaneJs);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Utils=function(){function Utils(){_classCallCheck(this,Utils);}_createClass(Utils,null,[{key:'getJSONP',value:function getJSONP(url,callback){var ref=window.document.getElementsByTagName('script')[0];var script=window.document.createElement('script');script.src=url+(url.indexOf('?')+1?'&':'?')+'callback='+callback;ref.parentNode.insertBefore(script,ref);script.onload=function(){this.remove();};}},{key:'quoteRegex',value:function quoteRegex(regex){return regex.replace(/([()[{*+.$^\\|?])/g,'\\$1');}},{key:'trimChar',value:function trimChar(str,chr){chr=Utils.quoteRegex(chr);return str.replace(new RegExp('^'+chr+'+|'+chr+'+$','g'),"");}},{key:'toQueryString',value:function toQueryString(obj,prefix){var str=[];for(var p in obj){if(obj.hasOwnProperty(p)){var k=prefix?prefix+"["+p+"]":p,v=obj[p];str.push((typeof v==='undefined'?'undefined':_typeof(v))=="object"?Utils.toQueryString(v,k):encodeURIComponent(k)+"="+encodeURIComponent(v));}}return str.join("&");}},{key:'getQueryParam',value:function getQueryParam(name,url){if(!url)url=window.location.href;name=name.replace(/[\[\]]/g,"\\$&");var regex=new RegExp("[?&]"+name+"(=([^&#]*)|&|#|$)"),results=regex.exec(url);if(!results)return null;if(!results[2])return '';return decodeURIComponent(results[2].replace(/\+/g," "));}},{key:'isEmpty',value:function isEmpty(obj){if(obj==null)return true;if(obj.length>0)return false;if(obj.length===0)return true;if(Object.getOwnPropertyNames(obj).length>0)return false;return true;}},{key:'cleanForUrl',value:function cleanForUrl(str){return str.replace(/(^\-+|[^a-zA-Z0-9\/_| -]+|\-+$)/g,'').toLowerCase().replace(/[\/_| -]+/g,'-');}}]);return Utils;}();Utils.showMessage=_humaneJs2.default.spawn({addnCls:'bg-info text-info',waitForMove:true});Utils.showSuccess=_humaneJs2.default.spawn({addnCls:'bg-success text-success',waitForMove:true});Utils.showError=_humaneJs2.default.spawn({addnCls:'bg-danger text-danger',timeout:5000,clickToClose:true,waitForMove:true});exports.default=Utils;

},{"./Constants":13,"humane-js":"humane-js"}],17:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _moment=require('moment');var _moment2=_interopRequireDefault(_moment);var _reactMediumEditor=require('react-medium-editor');var _reactMediumEditor2=_interopRequireDefault(_reactMediumEditor);var _reactBootstrapDatetimepicker=require('react-bootstrap-datetimepicker');var _reactBootstrapDatetimepicker2=_interopRequireDefault(_reactBootstrapDatetimepicker);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);var _SRDropzone=require('../Components/SRDropzone');var _SRDropzone2=_interopRequireDefault(_SRDropzone);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PageEditor=function(_React$Component){_inherits(PageEditor,_React$Component);function PageEditor(props){_classCallCheck(this,PageEditor);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(PageEditor).call(this,props));_this.postTimestamp=null;_this.hasCustomUri=false;_this.autosaveId=null;_this.state={authorized:true,publishing:false,processing:false,user:_this.props.user,page:{}};_this._savePage=_this._savePage.bind(_this);_this._onSubmitPage=_this._onSubmitPage.bind(_this);_this._onPublish=_this._onPublish.bind(_this);_this._onPostDateChange=_this._onPostDateChange.bind(_this);_this._onUpdatePageUri=_this._onUpdatePageUri.bind(_this);_this._onChangeUri=_this._onChangeUri.bind(_this);_this._onBlurUri=_this._onBlurUri.bind(_this);_this._onChangeTitle=_this._onChangeTitle.bind(_this);_this._onArticleChange=_this._onArticleChange.bind(_this);_this._onUserChange=_this._onUserChange.bind(_this);return _this;}_createClass(PageEditor,[{key:'componentWillMount',value:function componentWillMount(){this.stopUserSubscribe=_CurrentUser2.default.listen(this._onUserChange);var user=_CurrentUser2.default.get();this.setState({authorized:!!user.id,user:user});}},{key:'componentDidMount',value:function componentDidMount(){if(this.props.pageId){this._loadPage(this.props.pageId);}}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopUserSubscribe();}},{key:'renderProgressBar',value:function renderProgressBar(){var barClassName=this.state.publishing?'progress-bar-success':'progress-bar-info';return _react2.default.createElement('div',{className:'progress',style:{height:"auto"}},_react2.default.createElement('div',{className:"progress-bar "+barClassName+" progress-bar-striped active",role:'progressbar','aria-valuenow':'100','aria-valuemin':'0','aria-valuemax':'100',style:styles.progressBar},this.state.publishing?'Publishing...':'Saving...'));}},{key:'renderSubmitButton',value:function renderSubmitButton(){if(this.state.processing){return this.renderProgressBar();}return _react2.default.createElement('div',null,_react2.default.createElement('button',{type:'submit',className:'btn btn-lg btn-info',style:styles.button},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign'}),' Save Page'),_react2.default.createElement('button',{type:'button',className:'btn btn-lg btn-success',style:styles.button,onClick:this._onPublish},_react2.default.createElement('span',{className:'glyphicon glyphicon-ok-sign'}),' Publish Page'));}},{key:'render',value:function render(){var _this2=this;if(!this.state.authorized)return _react2.default.createElement('h4',null,'Must be logged in :(');var imageButton={name:'image',action:'image',aria:'image',tagNames:['img'],contentDefault:'<i class="glyphicon glyphicon-picture"></i>',contentFA:'<i class="fa fa-picture-o"></i>'};var editorOptions={placeholder:{text:"Article body..."},toolbar:{buttons:['bold','italic','anchor','h2','h3','quote','unorderedlist',imageButton]}};var categories=["Reviews","Recipes","How To's","Friday Food Fight","Where To Find..."];return _react2.default.createElement('form',{ref:'addNewPage',className:'',role:'form',onSubmit:function onSubmit(e){return _this2._onSubmitPage(e);}},_react2.default.createElement('div',{className:'jumbotron',style:styles.uploaderRow},_react2.default.createElement('div',{className:'container'},_react2.default.createElement(_SRDropzone2.default,{style:styles.previewImage,activeStyle:styles.dragActive,multiple:false}))),_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-12'},_react2.default.createElement('h1',null,'Page Editor'))),_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-4'},_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Data about data:'))),_react2.default.createElement('div',{className:'col-xs-8'},_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Spit your knowledge game:')))),_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-4'},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement(_reactBootstrapDatetimepicker2.default,{size:'lg',defaultText:this.state.page.post_date||'',inputProps:{placeholder:"Article Date/Time"},format:'x',inputFormat:'YYYY-MM-DD hh:mm A',onChange:this._onPostDateChange})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'pageUri',type:'text',className:'form-control input-lg',placeholder:'Custom-Page-Url',value:this.state.page.uri,onChange:this._onChangeUri,onBlur:this._onBlurUri})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('select',{ref:'pageCategory',className:'form-control input-lg',value:this.state.page.category,onChange:function onChange(e){return _this2._setStatePage({category:e.target.value});}},_react2.default.createElement('option',{value:''},'— Choose Category —'),categories.map(function(category,index){return _react2.default.createElement('option',{key:'category-'+category},category);}))),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'previewImage',className:'form-control input-lg',type:'text',placeholder:'Preview Image URL',value:this.state.page.preview_image,onChange:function onChange(e){return _this2._setStatePage({preview_image:e.target.value});}})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'metaTitle',className:'form-control input-lg',type:'text',placeholder:'Enter meta title',value:this.state.page.meta_title,onChange:function onChange(e){return _this2._setStatePage({meta_title:e.target.value});}})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('textarea',{ref:'metaDescription',className:'form-control input-lg',rows:'2',placeholder:'Enter meta description',value:this.state.page.meta_description,onChange:function onChange(e){return _this2._setStatePage({meta_description:e.target.value});}})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'metaKeywords',className:'form-control input-lg',type:'text',placeholder:'Enter meta keywords',value:this.state.page.meta_keywords,onChange:function onChange(e){return _this2._setStatePage({meta_keywords:e.target.value});}}))),_react2.default.createElement('div',{className:'col-xs-8'},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'pageTitle',className:'form-control input-lg',type:'text',placeholder:'Headline',value:this.state.page.title,onChange:this._onChangeTitle})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement(_reactMediumEditor2.default,{style:styles.editor,className:'form-control input-lg',text:this.state.page.article,onChange:this._onArticleChange,options:editorOptions})),this.renderSubmitButton(),_react2.default.createElement('input',{ref:'pageId',type:'hidden',name:'pageId',value:this.state.page.id}))));}},{key:'_loadPage',value:function _loadPage(pageId){var _this3=this;_ApiRequest2.default.get('/pages/'+pageId).send(function(res){var page=res.data;_this3.setState({page:page});});}},{key:'_onPostDateChange',value:function _onPostDateChange(datetime){this.postTimestamp=datetime;this._onUpdatePageUri();}},{key:'_getPostDateFormat',value:function _getPostDateFormat(){var format=arguments.length<=0||arguments[0]===undefined?"YYYY-MM-DD HH:mm:00":arguments[0];var dateFormat=_moment2.default.unix(this.postTimestamp/1000).format(format);if(dateFormat=='Invalid date'){return "";}return dateFormat;}},{key:'_getPageData',value:function _getPageData(){var publish=arguments.length<=0||arguments[0]===undefined?false:arguments[0];return {title:this.refs.pageTitle.value,article:this.state.page.article,uri:this.state.page.uri||this.refs.pageUri.value,category:this.refs.pageCategory.value,preview_image:this.refs.previewImage.value,meta_title:this.refs.metaTitle.value,meta_description:this.refs.metaDescription.value,meta_keywords:this.refs.metaKeywords.value,post_date:this.postTimestamp?this._getPostDateFormat():null,status:publish};}},{key:'_onPublish',value:function _onPublish(e){this._onSubmitPage(e,true);}},{key:'_onSubmitPage',value:function _onSubmitPage(e){var publish=arguments.length<=1||arguments[1]===undefined?false:arguments[1];if(!!e)e.preventDefault();if(this.state.processing)return;this._savePage(publish,true);}},{key:'_savePage',value:function _savePage(){var _this4=this;var publish=arguments.length<=0||arguments[0]===undefined?false:arguments[0];var explicitSave=arguments.length<=1||arguments[1]===undefined?false:arguments[1];explicitSave=explicitSave===true;if(explicitSave){this.setState({processing:true,publishing:publish});if(!!this.autosaveId){clearInterval(this.autosaveId);}}var endpoint=this.state.page.id?'/pages/'+this.state.page.id:'/pages';_ApiRequest2.default.post(endpoint).data(this._getPageData(publish)).send(function(res){if(!explicitSave){return;}var page=res.data;_Utils2.default.showSuccess(publish?'Page published!':'Page saved!');if(!_this4.state.page.id){var url=window.location.href+'?id='+page.id;history.pushState(null,document.querySelector("title").innerHTML,url);}_this4.setState({processing:false,page:page});});}},{key:'_clearForm',value:function _clearForm(){this.refs.addNewPage.reset();this.postTimestamp=null;this.hasCustomUri=false;this.setState({processing:false,page:{}});}},{key:'_getUriFromTitle',value:function _getUriFromTitle(){var headline=this.refs.pageTitle.value||'untitled',postDate=this.postTimestamp?this._getPostDateFormat("-YYYY-MM-DD"):"";return _Utils2.default.cleanForUrl(headline+postDate);}},{key:'_onBlurUri',value:function _onBlurUri(e){if(!e.target.value){this.hasCustomUri=false;this._onUpdatePageUri();}}},{key:'_onChangeUri',value:function _onChangeUri(e){this.hasCustomUri=true;this._setStatePage({uri:this.refs.pageUri.value});return true;}},{key:'_onChangeTitle',value:function _onChangeTitle(e){var page={title:this.refs.pageTitle.value};if(!this.hasCustomUri){page.uri=this._getUriFromTitle();}this._setStatePage(page);}},{key:'_onUpdatePageUri',value:function _onUpdatePageUri(){var setTitle=arguments.length<=0||arguments[0]===undefined?false:arguments[0];if(this.hasCustomUri)return;this._setStatePage({uri:this._getUriFromTitle()});}},{key:'_onArticleChange',value:function _onArticleChange(article,medium){this._setStatePage({article:article});}},{key:'_setStatePage',value:function _setStatePage(newPage){var state=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];this._startAutosave();var page=this.state.page;Object.assign(page,newPage);Object.assign(state,{page:page});this.setState(state);}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({authorized:!!user.id});}},{key:'_startAutosave',value:function _startAutosave(){if(!this.autosaveId){this.autosaveId=setInterval(this._savePage,5000);}}}]);return PageEditor;}(_react2.default.Component);PageEditor.propTypes={pageId:_react2.default.PropTypes.number};PageEditor.defaultProps={pageId:null};exports.default=PageEditor;var styles={button:{width:'48%',margin:'0 1%'},editor:{height:"auto",minHeight:"20em"},uploaderRow:{paddingLeft:"15px",paddingRight:"15px",paddingTop:"30px",paddingBottom:"30px"},previewImage:{color:"rgb(50,50,50)",borderWidth:0,fontWeight:"bold",fontSize:30,textAlign:"center",minHeight:"auto",background:"transparent"},dragActive:{borderColor:'rgb(120,120,120)'},progressBar:{fontSize:"18px",padding:"10px 0",width:"100%"}};

},{"../Api/ApiRequest":5,"../Components/SRDropzone":8,"../Stores/CurrentUser":11,"../Utils/Utils":16,"moment":"moment","react":"react","react-bootstrap-datetimepicker":"react-bootstrap-datetimepicker","react-medium-editor":"react-medium-editor"}],18:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PageInventory=function(_React$Component){_inherits(PageInventory,_React$Component);function PageInventory(props){_classCallCheck(this,PageInventory);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(PageInventory).call(this,props));_this.state={loading:true,authorized:true,user:_this.props.user,pages:[]};_this._onUserChange=_this._onUserChange.bind(_this);return _this;}_createClass(PageInventory,[{key:'componentWillMount',value:function componentWillMount(){this.stopUserSubscribe=_CurrentUser2.default.listen(this._onUserChange);this._loadPages();var user=_CurrentUser2.default.get();this.setState({authorized:!!user.id,user:user});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopUserSubscribe();}},{key:'renderRow',value:function renderRow(page,index){return _react2.default.createElement('tr',{key:'page-'+index},_react2.default.createElement('td',null,_react2.default.createElement('a',{href:"/admin/page-editor?id="+page.id},page.id)),_react2.default.createElement('td',null,_react2.default.createElement('a',{href:"/admin/page-editor?id="+page.id},page.title)),_react2.default.createElement('td',null,page.status?'Published':''));}},{key:'render',value:function render(){if(this.state.loading)return _react2.default.createElement('h4',null,'Loading...');if(!this.state.authorized)return _react2.default.createElement('h4',null,'Must be logged in :(');if(this.state.pages.length===0){return _react2.default.createElement('h4',null,'No pages available :(');}return _react2.default.createElement('table',{className:'table table-striped table-hover'},_react2.default.createElement('tbody',null,_react2.default.createElement('tr',null,_react2.default.createElement('th',null,'ID'),_react2.default.createElement('th',null,'Title'),_react2.default.createElement('th',null,'Status')),this.state.pages.map(this.renderRow.bind(this))));}},{key:'_loadPages',value:function _loadPages(){var _this2=this;_ApiRequest2.default.get('/pages').send(function(res){_this2.setState({loading:false,pages:res.data});},function(){return _this2.setState({loading:false});});}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({authorized:!!user.id});}}]);return PageInventory;}(_react2.default.Component);PageInventory.propTypes={};PageInventory.defaultProps={};exports.default=PageInventory;var styles={container:{}};

},{"../Api/ApiRequest":5,"../Stores/CurrentUser":11,"../Utils/Utils":16,"react":"react"}],19:[function(require,module,exports){
'use strict';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Initialize=require('./Utils/Initialize');var _Initialize2=_interopRequireDefault(_Initialize);var _Routes=require('./Utils/Routes');var _Routes2=_interopRequireDefault(_Routes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_Initialize2.default.onLoad();_Routes2.default.current(window.location.pathname);

},{"./Utils/Initialize":14,"./Utils/Routes":15,"react":"react","react-dom":"react-dom"}]},{},[19])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
