(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))

},{"_process":2}],2:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],3:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

"use strict";

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  if (!(obj instanceof Object && !Array.isArray(obj))) {
    throw new Error('keyMirror(...): Argument must be an object.');
  }
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{}],4:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _ApiRequest=require('./ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var AccessToken=function(){function AccessToken(){_classCallCheck(this,AccessToken);}_createClass(AccessToken,null,[{key:'get',value:function get(verify){if(typeof verify==='undefined'){verify=false;}return new Promise(function(resolve,reject){if(AccessToken._accessToken){return resolve(AccessToken._accessToken);}var access_token=localStorage.getItem(_Constants.Config.Storage.ACCESS_TOKEN);if(access_token===null){AccessToken.clear();return reject(new Error({code:403,message:'Unauthorized'}));}AccessToken.set(access_token,true).then(resolve);});}},{key:'set',value:function set(access_token,dontUpdateStorage){AccessToken._accessToken=access_token;return new Promise(function(resolve,reject){if(!dontUpdateStorage){localStorage.setItem(_Constants.Config.Storage.ACCESS_TOKEN,access_token);}resolve(access_token);});}},{key:'clear',value:function clear(){AccessToken._accessToken=null;return localStorage.removeItem(_Constants.Config.Storage.ACCESS_TOKEN);}}]);return AccessToken;}();exports.default=AccessToken;

},{"../Utils/Constants":13,"./ApiRequest":5}],5:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiUtils=require('./ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('./AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _superagent=require('superagent');var _superagent2=_interopRequireDefault(_superagent);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var ApiRequest=function(){_createClass(ApiRequest,null,[{key:'updateNetworkIndicator',value:function updateNetworkIndicator(){var dir=arguments.length<=0||arguments[0]===undefined?'-':arguments[0];if(dir==='+'){ApiRequest.activeRequests++;}else {ApiRequest.activeRequests--;}if(ApiRequest.activeRequests<=0){ApiRequest.activeRequests=0;}else {}}},{key:'create',value:function create(method,endpoint){return new this(method,endpoint);}},{key:'createAnon',value:function createAnon(method,endpoint){var request=new this(method,endpoint);request.setAnonymous(true);return request;}},{key:'get',value:function get(endpoint){return new this('get',endpoint);}},{key:'post',value:function post(endpoint){return new this('post',endpoint);}},{key:'put',value:function put(endpoint){return new this('put',endpoint);}},{key:'delete',value:function _delete(endpoint){return new this('delete',endpoint);}}]);function ApiRequest(method,endpoint){_classCallCheck(this,ApiRequest);if(endpoint===undefined){endpoint=method;method='get';}else {method=method.toLowerCase();}if(endpoint.indexOf('?')!==-1){throw new Error('You must set query string data via the `query` function');}this.isAnonymous=false;this.handleErrors=true;this.ignoreNetworkError=false;this.url=_ApiUtils2.default.buildUrl(endpoint);this._setupRequest(method);}_createClass(ApiRequest,[{key:'setAnonymous',value:function setAnonymous(isAnonymous){this.isAnonymous=isAnonymous;return this;}},{key:'setHandleErrors',value:function setHandleErrors(handleErrors){this.handleErrors=handleErrors;return this;}},{key:'setIgnoreNetworkError',value:function setIgnoreNetworkError(ignoreNetworkError){this.ignoreNetworkError=ignoreNetworkError;return this;}},{key:'configure',value:function configure(callback){callback(this.request);return this;}},{key:'send',value:function send(callback,errCallback){var _this=this;if(this.isAnonymous){return this._sendIt(callback,errCallback);}_AccessToken2.default.get().then(function(token){_this.query({token:token});_this._sendIt(callback,errCallback);});}},{key:'data',value:function data(_data){this.requestBody=JSON.stringify(_data);return this;}},{key:'query',value:function query(data){this.queryData=Object.assign(this.queryData,data);return this;}},{key:'header',value:function header(_header,value){this.requestHeaders[_header]=value;return this;}},{key:'headers',value:function headers(_headers){this.requestHeaders=Object.assign(this.requestHeaders,_headers);return this;}},{key:'_setupRequest',value:function _setupRequest(method){this.requestMethod=!method?'get':method;this.requestHeaders={'Accept':'application/json','Content-Type':'application/json'};this.queryData={};this.requestBody={};this.request=null;}},{key:'_sendIt',value:function _sendIt(callback,errCallback){var _this2=this;ApiRequest.updateNetworkIndicator('+');this.request=_superagent2.default[this.requestMethod](this.url);if(!_Utils2.default.isEmpty(this.queryData)){this.request.query(this.queryData);}if(!_Utils2.default.isEmpty(this.requestHeaders)){this.request.set(this.requestHeaders);}this.request.send(this.requestBody).end(function(err,res){ApiRequest.updateNetworkIndicator();if(res.ok){callback(res.body);}else if(res.unauthorized){_AccessToken2.default.clear();_Actions2.default.noauth();}else {if(_this2.handleErrors){_ApiUtils2.default.handleError(res.body.error);}if(errCallback)errCallback(res.body.error);}});}}]);return ApiRequest;}();ApiRequest.activeRequests=0;exports.default=ApiRequest;

},{"../Utils/Actions":12,"../Utils/Utils":16,"./AccessToken":4,"./ApiUtils":6,"superagent":"superagent"}],6:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var DEFAULT_ERROR='There was a problem with your request';var ApiUtils=function(){function ApiUtils(){_classCallCheck(this,ApiUtils);}_createClass(ApiUtils,null,[{key:'handleError',value:function handleError(err){console.warn(err);_Utils2.default.alertError(err.message||DEFAULT_ERROR);}},{key:'handleNetworkError',value:function handleNetworkError(err){console.warn(err);}},{key:'buildUrl',value:function buildUrl(endpoint){endpoint=_Utils2.default.trimChar(endpoint,'/');if(endpoint.indexOf(_Constants.Config.api_root)===-1){endpoint=_Constants.Config.api_root+endpoint;}return endpoint;}}]);return ApiUtils;}();exports.default=ApiUtils;

},{"../Utils/Constants":13,"../Utils/Utils":16}],7:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _moment=require('moment');var _moment2=_interopRequireDefault(_moment);var _reactBootstrapDatetimepicker=require('react-bootstrap-datetimepicker');var _reactBootstrapDatetimepicker2=_interopRequireDefault(_reactBootstrapDatetimepicker);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var AddPageForm=function(_React$Component){_inherits(AddPageForm,_React$Component);function AddPageForm(props){_classCallCheck(this,AddPageForm);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AddPageForm).call(this,props));_this.postTimestamp=null;_this.hasCustomUri=false;_this.state={authorized:true,processing:false,user:_this.props.user,page:{}};_this._onSubmitPage=_this._onSubmitPage.bind(_this);_this._onPostDateChange=_this._onPostDateChange.bind(_this);_this._onUpdatePageUri=_this._onUpdatePageUri.bind(_this);_this._onChangeUri=_this._onChangeUri.bind(_this);_this._onBlurUri=_this._onBlurUri.bind(_this);_this._onUserChange=_this._onUserChange.bind(_this);return _this;}_createClass(AddPageForm,[{key:'componentWillMount',value:function componentWillMount(){this.stopUserSubscribe=_CurrentUser2.default.listen(this._onUserChange);var user=_CurrentUser2.default.get();this.setState({authorized:!!user.id,user:user});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopUserSubscribe();}},{key:'renderProgressBar',value:function renderProgressBar(){return _react2.default.createElement('div',{className:'progress',style:{height:"auto"}},_react2.default.createElement('div',{className:'progress-bar progress-bar-info progress-bar-striped active',role:'progressbar','aria-valuenow':'100','aria-valuemin':'0','aria-valuemax':'100',style:styles.progressBar},'Saving...'));}},{key:'renderSubmitButton',value:function renderSubmitButton(){if(this.state.processing){return this.renderProgressBar();}return _react2.default.createElement('button',{type:'submit',className:'btn btn-lg btn-info',style:styles.button},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign'}),' Add Page');}},{key:'render',value:function render(){if(!this.state.authorized)return _react2.default.createElement('h4',null,'Must be logged in :(');var placeholderCopy="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi iaculis est lectus, posuere scelerisque massa rhoncus in. Vestibulum facilisis purus non velit porttitor, non imperdiet erat condimentum.";return _react2.default.createElement('form',{id:'addNewPage',className:'',role:'form',onSubmit:this._onSubmitPage},_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-12'},_react2.default.createElement('h1',null,'Add New Page'))),_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-4'},_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Data about data:'))),_react2.default.createElement('div',{className:'col-xs-8'},_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Spit your knowledge game:')))),_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-4'},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement(_reactBootstrapDatetimepicker2.default,{size:'lg',defaultText:'',inputProps:{placeholder:"Article Date/Time"},format:'x',inputFormat:'YYYY-MM-DD hh:mm A',onChange:this._onPostDateChange})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'pageUri',type:'text',className:'form-control input-lg',placeholder:'Custom-Page-Url',value:this.state.page.uri,onChange:this._onChangeUri,onBlur:this._onBlurUri})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('select',{ref:'pageCategory',className:'form-control input-lg'},_react2.default.createElement('option',{value:''},'— Choose Category —'),_react2.default.createElement('option',null,'Reviews'),_react2.default.createElement('option',null,'Recipes'),_react2.default.createElement('option',null,'How To\'s'),_react2.default.createElement('option',null,'Friday Food Fight'),_react2.default.createElement('option',null,'Where To Find...'))),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('div',{style:styles.previewImage},'Dragon Drop Image Area')),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'metaTitle',className:'form-control input-lg',type:'text',placeholder:'Enter meta title'})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('textarea',{ref:'metaDescription',className:'form-control input-lg',rows:'2',placeholder:'Enter meta description'})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'metaKeywords',className:'form-control input-lg',type:'text',placeholder:'Enter meta keywords'}))),_react2.default.createElement('div',{className:'col-xs-8'},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'pageTitle',className:'form-control input-lg',type:'text',placeholder:'Headline',onChange:this._onUpdatePageUri})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('textarea',{ref:'pageArticle',className:'form-control input-lg',rows:'10',placeholder:placeholderCopy})),this.renderSubmitButton())));}},{key:'_onPostDateChange',value:function _onPostDateChange(datetime){this.postTimestamp=datetime;this._onUpdatePageUri();}},{key:'_getPostDateFormat',value:function _getPostDateFormat(){var format=arguments.length<=0||arguments[0]===undefined?"YYYY-MM-DD HH:mm:00":arguments[0];return _moment2.default.unix(this.postTimestamp/1000).format(format);}},{key:'_getPageData',value:function _getPageData(){return {title:this.refs.pageTitle.value,article:this.refs.pageArticle.value,uri:this.state.page.uri||this.refs.pageUri.value,category:this.refs.pageCategory.value,meta_title:this.refs.metaTitle.value,meta_description:this.refs.metaDescription.value,meta_keywords:this.refs.metaKeywords.value,post_date:this.postTimestamp?this._getPostDateFormat():null};}},{key:'_onSubmitPage',value:function _onSubmitPage(e){var _this2=this;e.preventDefault();if(this.state.processing)return;this.setState({processing:true});_ApiRequest2.default.post('/page').data(this._getPageData()).send(function(page){console.log('page:',page);_this2._clearForm();});}},{key:'_clearForm',value:function _clearForm(){document.getElementById("addNewPage").reset();this.setState({processing:false});}},{key:'_getUriFromTitle',value:function _getUriFromTitle(){var headline=this.refs.pageTitle.value,postDate=this.postTimestamp?this._getPostDateFormat("-YYYY-MM-DD"):"";return _Utils2.default.cleanForUrl(headline+postDate);}},{key:'_onBlurUri',value:function _onBlurUri(e){if(!e.target.value){this.hasCustomUri=false;this._onUpdatePageUri();}}},{key:'_onChangeUri',value:function _onChangeUri(e){this.hasCustomUri=true;var page=this.state.page;page.uri=this.refs.pageUri.value;this.setState({page:page});return true;}},{key:'_onUpdatePageUri',value:function _onUpdatePageUri(){if(this.hasCustomUri)return;var page=this.state.page;page.uri=this._getUriFromTitle();this.setState({page:page});}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({authorized:!!user.id});}}]);return AddPageForm;}(_react2.default.Component);AddPageForm.propTypes={};AddPageForm.defaultProps={};exports.default=AddPageForm;var styles={button:{width:'100%'},previewImage:{color:"rgb(150,150,150)",borderWidth:2,borderColor:"rgba(150,150,150,.8)",borderStyle:"dashed",fontWeight:"bold",textAlign:"center",padding:"40px 0"},progressBar:{fontSize:"18px",padding:"10px 0",width:"100%"}};

},{"../Api/ApiRequest":5,"../Stores/CurrentUser":11,"../Utils/Utils":16,"moment":"moment","react":"react","react-bootstrap-datetimepicker":"react-bootstrap-datetimepicker"}],8:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LoginForm=function(_React$Component){_inherits(LoginForm,_React$Component);function LoginForm(props){_classCallCheck(this,LoginForm);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(LoginForm).call(this,props));_this.state={};_this.onSubmit=_this.onSubmit.bind(_this);return _this;}_createClass(LoginForm,[{key:'render',value:function render(){return _react2.default.createElement('form',{className:'navbar-form navbar-right',role:'form',onSubmit:this.onSubmit},_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'username',type:'text',placeholder:'username',className:'form-control'})),_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'password',type:'password',placeholder:'password',className:'form-control'})),_react2.default.createElement('button',{type:'submit',className:'btn btn-default'},'Sign in'));}},{key:'onSubmit',value:function onSubmit(e){e.preventDefault();var data={username:this.refs.username.value,password:this.refs.password.value};_Actions2.default.login(data);}}]);return LoginForm;}(_react2.default.Component);LoginForm.propTypes={};LoginForm.defaultProps={};exports.default=LoginForm;var styles={formField:{margin:3}};

},{"../Api/ApiRequest":5,"../Utils/Actions":12,"react":"react"}],9:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserMenu=function(_React$Component){_inherits(UserMenu,_React$Component);function UserMenu(props){_classCallCheck(this,UserMenu);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserMenu).call(this,props));_this.state={user:_this.props.user};return _this;}_createClass(UserMenu,[{key:'componentWillMount',value:function componentWillMount(){this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();}},{key:'render',value:function render(){return _react2.default.createElement('ul',{className:'nav navbar-nav navbar-right'},_react2.default.createElement('li',{className:'dropdown'},_react2.default.createElement('a',{href:'#',className:'dropdown-toggle','data-toggle':'dropdown',role:'button','aria-haspopup':'true','aria-expanded':'false'},this.state.user.username,_react2.default.createElement('span',{className:'caret'})),_react2.default.createElement('ul',{className:'dropdown-menu'},_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'/add-page'},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign','aria-hidden':'true',style:styles.icon}),'Add Page')),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'#',onClick:this._onEditPress},_react2.default.createElement('span',{className:'glyphicon glyphicon-edit','aria-hidden':'true',style:styles.icon}),'Edit Something')),_react2.default.createElement('li',{role:'separator',className:'divider'}),_react2.default.createElement('li',{className:'dropdown-header'},'My Account'),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'#',onClick:this._onLogoutPress},_react2.default.createElement('span',{className:'glyphicon glyphicon-log-out','aria-hidden':'true',style:styles.icon}),'Sign Out')))));}},{key:'_onEditPress',value:function _onEditPress(e){e.preventDefault();console.log("_onEditPress");}},{key:'_onLogoutPress',value:function _onLogoutPress(e){e.preventDefault();_Actions2.default.logout();}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user});}}]);return UserMenu;}(_react2.default.Component);UserMenu.propTypes={user:_react2.default.PropTypes.object};UserMenu.defaultProps={user:{}};exports.default=UserMenu;var styles={icon:{paddingRight:'5px'}};

},{"../Stores/CurrentUser":11,"../Utils/Actions":12,"react":"react"}],10:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);var _LoginForm=require('./LoginForm');var _LoginForm2=_interopRequireDefault(_LoginForm);var _UserMenu=require('./UserMenu');var _UserMenu2=_interopRequireDefault(_UserMenu);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserNav=function(_React$Component){_inherits(UserNav,_React$Component);function UserNav(props){_classCallCheck(this,UserNav);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserNav).call(this,props));_this.state={loading:true,user:{}};return _this;}_createClass(UserNav,[{key:'componentWillMount',value:function componentWillMount(){var _this2=this;this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.stopAuthListen=_Actions2.default.noauth.listen(function(){return _this2.setState({loading:false});});this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();this.stopAuthListen();}},{key:'renderLoginForm',value:function renderLoginForm(){return _react2.default.createElement(_LoginForm2.default,null);}},{key:'renderUserMenu',value:function renderUserMenu(){return _react2.default.createElement(_UserMenu2.default,{user:this.state.user});}},{key:'render',value:function render(){if(this.state.loading){return null;}return _react2.default.createElement('div',{style:styles.container},this.state.user.id?this.renderUserMenu():this.renderLoginForm());}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user,loading:false});}}]);return UserNav;}(_react2.default.Component);UserNav.propTypes={};UserNav.defaultProps={};exports.default=UserNav;var styles={container:{height:'56px'},username:{margin:3,lineHeight:'44px',color:'white'}};

},{"../Stores/CurrentUser":11,"../Utils/Actions":12,"./LoginForm":8,"./UserMenu":9,"react":"react"}],11:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _Constants=require('../Utils/Constants');var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _ApiUtils=require('../Api/ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var defaultUser={id:null,username:null,session_id:null};var currentUser=Object.assign({},defaultUser);exports.default=_reflux2.default.createStore({listenables:[_Actions2.default],init:function init(){},get:function get(){return currentUser;},update:function update(userUpdates){currentUser=Object.assign({},userUpdates);this.trigger(currentUser);},onLogin:function onLogin(creds){_ApiRequest2.default.post('/account/login').data(creds).setAnonymous(true).send(function(res){_AccessToken2.default.set(res.data.session_id).then(function(){return _Actions2.default.login.completed(res);});},_Actions2.default.login.failed);},onLoginCompleted:function onLoginCompleted(response){var user=response.data;this.update(user);},onLogout:function onLogout(){_ApiRequest2.default.post('/account/logout').setHandleErrors(false).setIgnoreNetworkError(true).send(_Actions2.default.logout.completed,_Actions2.default.logout.failed);this.update(defaultUser);},onLogoutCompleted:function onLogoutCompleted(){_AccessToken2.default.clear();},onLogoutFailed:function onLogoutFailed(){_AccessToken2.default.clear();},onLoadUser:function onLoadUser(){_ApiRequest2.default.get('/account').send(_Actions2.default.loadUser.completed,_Actions2.default.loadUser.failed);},onLoadUserCompleted:function onLoadUserCompleted(response){this.update(response.data);}});

},{"../Api/AccessToken":4,"../Api/ApiRequest":5,"../Api/ApiUtils":6,"../Utils/Actions":12,"../Utils/Constants":13,"reflux":"reflux"}],12:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var Actions=_reflux2.default.createActions(["auth","unauth","noauth",{"login":{asyncResult:true}},{"logout":{asyncResult:true}},{"loadUser":{asyncResult:true}}]);Actions.auth.listen(function(){_AccessToken2.default.get(true).then(function(accessToken){return Actions.loadUser(accessToken);}).catch(function(){return Actions.noauth();});});exports.default=Actions;

},{"../Api/AccessToken":4,"../Api/ApiRequest":5,"reflux":"reflux"}],13:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var keyMirror=require('keyMirror');var HOST_NAME="clefoodblog.com";var ENV=window.location.hostname===HOST_NAME?'production':'dev';var isProd=true,apiVersion='v1',apiHost='http://'+HOST_NAME+'/api',siteRoot='http://'+HOST_NAME;switch(ENV){case 'dev':isProd=false;apiHost='http://dev.'+HOST_NAME+'/api';siteRoot='http://dev.'+HOST_NAME;break;}var Config=exports.Config={ENV:ENV,api_root:apiHost+'/',site_root:siteRoot+'/',Storage:keyMirror({ACCESS_TOKEN:null})};

},{"keyMirror":3}],14:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _jquery=require('jquery');var _jquery2=_interopRequireDefault(_jquery);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _UserNav=require('../Components/UserNav');var _UserNav2=_interopRequireDefault(_UserNav);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Initialize=function(){function Initialize(){_classCallCheck(this,Initialize);}_createClass(Initialize,null,[{key:'globals',value:function globals(){window.jQuery=_jquery2.default;}},{key:'bootstrap',value:function bootstrap(){require('bootstrap');}},{key:'onReady',value:function onReady(){var baButton=document.getElementById('btnComingSoon');if(baButton){baButton.onclick=function(){if(ga)ga('send','event','buttons','click','stay tuned');console.log('send','event','buttons','click','stay tuned');return false;};}_reactDom2.default.render(_react2.default.createElement(_UserNav2.default,null),document.getElementById('UserNav'));}},{key:'authUser',value:function authUser(){_Actions2.default.auth();}},{key:'onLoad',value:function onLoad(){Initialize.globals();Initialize.bootstrap();Initialize.onReady();Initialize.authUser();}}]);return Initialize;}();exports.default=Initialize;

},{"../Components/UserNav":10,"../Utils/Actions":12,"bootstrap":"bootstrap","jquery":"jquery","react":"react","react-dom":"react-dom"}],15:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _path=require('path');var _path2=_interopRequireDefault(_path);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _AddPageForm=require('../Components/AddPageForm');var _AddPageForm2=_interopRequireDefault(_AddPageForm);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Routes=function(){function Routes(){_classCallCheck(this,Routes);}_createClass(Routes,null,[{key:'current',value:function current(pathname){var basename=_path2.default.basename(pathname)||Routes.homeRoute;var camelName=basename.replace(/-([a-z])/g,function(g){return g[1].toUpperCase();});if(typeof Routes[camelName]==='function'){Routes[camelName]();}}},{key:'home',value:function home(){console.log('Home route');}},{key:'addPage',value:function addPage(){_reactDom2.default.render(_react2.default.createElement(_AddPageForm2.default,null),document.getElementById('AddPageForm'));}}]);return Routes;}();Routes.homeRoute='home';exports.default=Routes;

},{"../Components/AddPageForm":7,"../Utils/Utils":16,"path":1,"react":"react","react-dom":"react-dom"}],16:[function(require,module,exports){
'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./Constants');function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Utils=function(){function Utils(){_classCallCheck(this,Utils);}_createClass(Utils,null,[{key:'alertError',value:function alertError(message){alert(message);}},{key:'getJSONP',value:function getJSONP(url,callback){var ref=window.document.getElementsByTagName('script')[0];var script=window.document.createElement('script');script.src=url+(url.indexOf('?')+1?'&':'?')+'callback='+callback;ref.parentNode.insertBefore(script,ref);script.onload=function(){this.remove();};}},{key:'quoteRegex',value:function quoteRegex(regex){return regex.replace(/([()[{*+.$^\\|?])/g,'\\$1');}},{key:'trimChar',value:function trimChar(str,chr){chr=Utils.quoteRegex(chr);return str.replace(new RegExp('^'+chr+'+|'+chr+'+$','g'),"");}},{key:'toQueryString',value:function toQueryString(obj,prefix){var str=[];for(var p in obj){if(obj.hasOwnProperty(p)){var k=prefix?prefix+"["+p+"]":p,v=obj[p];str.push((typeof v==='undefined'?'undefined':_typeof(v))=="object"?Utils.toQueryString(v,k):encodeURIComponent(k)+"="+encodeURIComponent(v));}}return str.join("&");}},{key:'isEmpty',value:function isEmpty(obj){if(obj==null)return true;if(obj.length>0)return false;if(obj.length===0)return true;if(Object.getOwnPropertyNames(obj).length>0)return false;return true;}},{key:'cleanForUrl',value:function cleanForUrl(str){return str.replace(/(^\-+|[^a-zA-Z0-9\/_| -]+|\-+$)/g,'').toLowerCase().replace(/[\/_| -]+/g,'-');}}]);return Utils;}();exports.default=Utils;

},{"./Constants":13}],17:[function(require,module,exports){
'use strict';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Initialize=require('./Utils/Initialize');var _Initialize2=_interopRequireDefault(_Initialize);var _Routes=require('./Utils/Routes');var _Routes2=_interopRequireDefault(_Routes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_Initialize2.default.onLoad();_Routes2.default.current(window.location.pathname);

},{"./Utils/Initialize":14,"./Utils/Routes":15,"react":"react","react-dom":"react-dom"}]},{},[17])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvcGF0aC1icm93c2VyaWZ5L2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9rZXlNaXJyb3IvaW5kZXguanMiLCJyZXNvdXJjZXMvanMvQXBpL0FjY2Vzc1Rva2VuLmpzIiwicmVzb3VyY2VzL2pzL0FwaS9BcGlSZXF1ZXN0LmpzIiwicmVzb3VyY2VzL2pzL0FwaS9BcGlVdGlscy5qcyIsInJlc291cmNlcy9qcy9Db21wb25lbnRzL0FkZFBhZ2VGb3JtLmpzIiwicmVzb3VyY2VzL2pzL0NvbXBvbmVudHMvTG9naW5Gb3JtLmpzIiwicmVzb3VyY2VzL2pzL0NvbXBvbmVudHMvVXNlck1lbnUuanMiLCJyZXNvdXJjZXMvanMvQ29tcG9uZW50cy9Vc2VyTmF2LmpzIiwicmVzb3VyY2VzL2pzL1N0b3Jlcy9DdXJyZW50VXNlci5qcyIsInJlc291cmNlcy9qcy9VdGlscy9BY3Rpb25zLmpzIiwicmVzb3VyY2VzL2pzL1V0aWxzL0NvbnN0YW50cy5qcyIsInJlc291cmNlcy9qcy9VdGlscy9Jbml0aWFsaXplLmpzIiwicmVzb3VyY2VzL2pzL1V0aWxzL1JvdXRlcy5qcyIsInJlc291cmNlcy9qcy9VdGlscy9VdGlscy5qcyIsInJlc291cmNlcy9qcy9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QUFKLENBQVMsR0FBVCxDQUFQLENBVGdDLHlDQWlCbkIsSUFBSyxDQUNsQixHQUFJLEtBQU8sSUFBUCxDQUFhLE9BQU8sSUFBUCxDQUFqQixHQUNJLElBQUksTUFBSixDQUFhLENBQWIsQ0FBZ0IsT0FBTyxLQUFQLENBQXBCLEdBQ0ksSUFBSSxNQUFKLEdBQWUsQ0FBZixDQUFrQixPQUFPLElBQVAsQ0FBdEIsR0FDSSxPQUFPLG1CQUFQLENBQTJCLEdBQTNCLEVBQWdDLE1BQWhDLENBQXlDLENBQXpDLENBQTRDLE9BQU8sS0FBUCxDQUFoRCxPQUNPLElBQVAsQ0FMa0IsaURBY0QsSUFBSyxDQUN0QixPQUFPLElBQUksT0FBSixDQUFZLGtDQUFaLENBQWdELEVBQWhELEVBQ0ksV0FESixHQUVJLE9BRkosQ0FFWSxZQUZaLENBRTBCLEdBRjFCLENBQVAsQ0FEc0IsWUF2Rkw7OztpYkNLckIscUJBQVcsTUFBWCxHQUdBLGlCQUFPLE9BQVAsQ0FBZSxPQUFPLFFBQVAsQ0FBZ0IsUUFBaEIsQ0FBZiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gcmVzb2x2ZXMgLiBhbmQgLi4gZWxlbWVudHMgaW4gYSBwYXRoIGFycmF5IHdpdGggZGlyZWN0b3J5IG5hbWVzIHRoZXJlXG4vLyBtdXN0IGJlIG5vIHNsYXNoZXMsIGVtcHR5IGVsZW1lbnRzLCBvciBkZXZpY2UgbmFtZXMgKGM6XFwpIGluIHRoZSBhcnJheVxuLy8gKHNvIGFsc28gbm8gbGVhZGluZyBhbmQgdHJhaWxpbmcgc2xhc2hlcyAtIGl0IGRvZXMgbm90IGRpc3Rpbmd1aXNoXG4vLyByZWxhdGl2ZSBhbmQgYWJzb2x1dGUgcGF0aHMpXG5mdW5jdGlvbiBub3JtYWxpemVBcnJheShwYXJ0cywgYWxsb3dBYm92ZVJvb3QpIHtcbiAgLy8gaWYgdGhlIHBhdGggdHJpZXMgdG8gZ28gYWJvdmUgdGhlIHJvb3QsIGB1cGAgZW5kcyB1cCA+IDBcbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IHBhcnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIGxhc3QgPSBwYXJ0c1tpXTtcbiAgICBpZiAobGFzdCA9PT0gJy4nKSB7XG4gICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7XG4gICAgfSBlbHNlIGlmIChsYXN0ID09PSAnLi4nKSB7XG4gICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHBhcnRzLnNwbGljZShpLCAxKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgLy8gaWYgdGhlIHBhdGggaXMgYWxsb3dlZCB0byBnbyBhYm92ZSB0aGUgcm9vdCwgcmVzdG9yZSBsZWFkaW5nIC4uc1xuICBpZiAoYWxsb3dBYm92ZVJvb3QpIHtcbiAgICBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICAgIHBhcnRzLnVuc2hpZnQoJy4uJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzO1xufVxuXG4vLyBTcGxpdCBhIGZpbGVuYW1lIGludG8gW3Jvb3QsIGRpciwgYmFzZW5hbWUsIGV4dF0sIHVuaXggdmVyc2lvblxuLy8gJ3Jvb3QnIGlzIGp1c3QgYSBzbGFzaCwgb3Igbm90aGluZy5cbnZhciBzcGxpdFBhdGhSZSA9XG4gICAgL14oXFwvP3wpKFtcXHNcXFNdKj8pKCg/OlxcLnsxLDJ9fFteXFwvXSs/fCkoXFwuW14uXFwvXSp8KSkoPzpbXFwvXSopJC87XG52YXIgc3BsaXRQYXRoID0gZnVuY3Rpb24oZmlsZW5hbWUpIHtcbiAgcmV0dXJuIHNwbGl0UGF0aFJlLmV4ZWMoZmlsZW5hbWUpLnNsaWNlKDEpO1xufTtcblxuLy8gcGF0aC5yZXNvbHZlKFtmcm9tIC4uLl0sIHRvKVxuLy8gcG9zaXggdmVyc2lvblxuZXhwb3J0cy5yZXNvbHZlID0gZnVuY3Rpb24oKSB7XG4gIHZhciByZXNvbHZlZFBhdGggPSAnJyxcbiAgICAgIHJlc29sdmVkQWJzb2x1dGUgPSBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gYXJndW1lbnRzLmxlbmd0aCAtIDE7IGkgPj0gLTEgJiYgIXJlc29sdmVkQWJzb2x1dGU7IGktLSkge1xuICAgIHZhciBwYXRoID0gKGkgPj0gMCkgPyBhcmd1bWVudHNbaV0gOiBwcm9jZXNzLmN3ZCgpO1xuXG4gICAgLy8gU2tpcCBlbXB0eSBhbmQgaW52YWxpZCBlbnRyaWVzXG4gICAgaWYgKHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnRzIHRvIHBhdGgucmVzb2x2ZSBtdXN0IGJlIHN0cmluZ3MnKTtcbiAgICB9IGVsc2UgaWYgKCFwYXRoKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICByZXNvbHZlZFBhdGggPSBwYXRoICsgJy8nICsgcmVzb2x2ZWRQYXRoO1xuICAgIHJlc29sdmVkQWJzb2x1dGUgPSBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nO1xuICB9XG5cbiAgLy8gQXQgdGhpcyBwb2ludCB0aGUgcGF0aCBzaG91bGQgYmUgcmVzb2x2ZWQgdG8gYSBmdWxsIGFic29sdXRlIHBhdGgsIGJ1dFxuICAvLyBoYW5kbGUgcmVsYXRpdmUgcGF0aHMgdG8gYmUgc2FmZSAobWlnaHQgaGFwcGVuIHdoZW4gcHJvY2Vzcy5jd2QoKSBmYWlscylcblxuICAvLyBOb3JtYWxpemUgdGhlIHBhdGhcbiAgcmVzb2x2ZWRQYXRoID0gbm9ybWFsaXplQXJyYXkoZmlsdGVyKHJlc29sdmVkUGF0aC5zcGxpdCgnLycpLCBmdW5jdGlvbihwKSB7XG4gICAgcmV0dXJuICEhcDtcbiAgfSksICFyZXNvbHZlZEFic29sdXRlKS5qb2luKCcvJyk7XG5cbiAgcmV0dXJuICgocmVzb2x2ZWRBYnNvbHV0ZSA/ICcvJyA6ICcnKSArIHJlc29sdmVkUGF0aCkgfHwgJy4nO1xufTtcblxuLy8gcGF0aC5ub3JtYWxpemUocGF0aClcbi8vIHBvc2l4IHZlcnNpb25cbmV4cG9ydHMubm9ybWFsaXplID0gZnVuY3Rpb24ocGF0aCkge1xuICB2YXIgaXNBYnNvbHV0ZSA9IGV4cG9ydHMuaXNBYnNvbHV0ZShwYXRoKSxcbiAgICAgIHRyYWlsaW5nU2xhc2ggPSBzdWJzdHIocGF0aCwgLTEpID09PSAnLyc7XG5cbiAgLy8gTm9ybWFsaXplIHRoZSBwYXRoXG4gIHBhdGggPSBub3JtYWxpemVBcnJheShmaWx0ZXIocGF0aC5zcGxpdCgnLycpLCBmdW5jdGlvbihwKSB7XG4gICAgcmV0dXJuICEhcDtcbiAgfSksICFpc0Fic29sdXRlKS5qb2luKCcvJyk7XG5cbiAgaWYgKCFwYXRoICYmICFpc0Fic29sdXRlKSB7XG4gICAgcGF0aCA9ICcuJztcbiAgfVxuICBpZiAocGF0aCAmJiB0cmFpbGluZ1NsYXNoKSB7XG4gICAgcGF0aCArPSAnLyc7XG4gIH1cblxuICByZXR1cm4gKGlzQWJzb2x1dGUgPyAnLycgOiAnJykgKyBwYXRoO1xufTtcblxuLy8gcG9zaXggdmVyc2lvblxuZXhwb3J0cy5pc0Fic29sdXRlID0gZnVuY3Rpb24ocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJztcbn07XG5cbi8vIHBvc2l4IHZlcnNpb25cbmV4cG9ydHMuam9pbiA9IGZ1bmN0aW9uKCkge1xuICB2YXIgcGF0aHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDApO1xuICByZXR1cm4gZXhwb3J0cy5ub3JtYWxpemUoZmlsdGVyKHBhdGhzLCBmdW5jdGlvbihwLCBpbmRleCkge1xuICAgIGlmICh0eXBlb2YgcCAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50cyB0byBwYXRoLmpvaW4gbXVzdCBiZSBzdHJpbmdzJyk7XG4gICAgfVxuICAgIHJldHVybiBwO1xuICB9KS5qb2luKCcvJykpO1xufTtcblxuXG4vLyBwYXRoLnJlbGF0aXZlKGZyb20sIHRvKVxuLy8gcG9zaXggdmVyc2lvblxuZXhwb3J0cy5yZWxhdGl2ZSA9IGZ1bmN0aW9uKGZyb20sIHRvKSB7XG4gIGZyb20gPSBleHBvcnRzLnJlc29sdmUoZnJvbSkuc3Vic3RyKDEpO1xuICB0byA9IGV4cG9ydHMucmVzb2x2ZSh0bykuc3Vic3RyKDEpO1xuXG4gIGZ1bmN0aW9uIHRyaW0oYXJyKSB7XG4gICAgdmFyIHN0YXJ0ID0gMDtcbiAgICBmb3IgKDsgc3RhcnQgPCBhcnIubGVuZ3RoOyBzdGFydCsrKSB7XG4gICAgICBpZiAoYXJyW3N0YXJ0XSAhPT0gJycpIGJyZWFrO1xuICAgIH1cblxuICAgIHZhciBlbmQgPSBhcnIubGVuZ3RoIC0gMTtcbiAgICBmb3IgKDsgZW5kID49IDA7IGVuZC0tKSB7XG4gICAgICBpZiAoYXJyW2VuZF0gIT09ICcnKSBicmVhaztcbiAgICB9XG5cbiAgICBpZiAoc3RhcnQgPiBlbmQpIHJldHVybiBbXTtcbiAgICByZXR1cm4gYXJyLnNsaWNlKHN0YXJ0LCBlbmQgLSBzdGFydCArIDEpO1xuICB9XG5cbiAgdmFyIGZyb21QYXJ0cyA9IHRyaW0oZnJvbS5zcGxpdCgnLycpKTtcbiAgdmFyIHRvUGFydHMgPSB0cmltKHRvLnNwbGl0KCcvJykpO1xuXG4gIHZhciBsZW5ndGggPSBNYXRoLm1pbihmcm9tUGFydHMubGVuZ3RoLCB0b1BhcnRzLmxlbmd0aCk7XG4gIHZhciBzYW1lUGFydHNMZW5ndGggPSBsZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZnJvbVBhcnRzW2ldICE9PSB0b1BhcnRzW2ldKSB7XG4gICAgICBzYW1lUGFydHNMZW5ndGggPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgdmFyIG91dHB1dFBhcnRzID0gW107XG4gIGZvciAodmFyIGkgPSBzYW1lUGFydHNMZW5ndGg7IGkgPCBmcm9tUGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICBvdXRwdXRQYXJ0cy5wdXNoKCcuLicpO1xuICB9XG5cbiAgb3V0cHV0UGFydHMgPSBvdXRwdXRQYXJ0cy5jb25jYXQodG9QYXJ0cy5zbGljZShzYW1lUGFydHNMZW5ndGgpKTtcblxuICByZXR1cm4gb3V0cHV0UGFydHMuam9pbignLycpO1xufTtcblxuZXhwb3J0cy5zZXAgPSAnLyc7XG5leHBvcnRzLmRlbGltaXRlciA9ICc6JztcblxuZXhwb3J0cy5kaXJuYW1lID0gZnVuY3Rpb24ocGF0aCkge1xuICB2YXIgcmVzdWx0ID0gc3BsaXRQYXRoKHBhdGgpLFxuICAgICAgcm9vdCA9IHJlc3VsdFswXSxcbiAgICAgIGRpciA9IHJlc3VsdFsxXTtcblxuICBpZiAoIXJvb3QgJiYgIWRpcikge1xuICAgIC8vIE5vIGRpcm5hbWUgd2hhdHNvZXZlclxuICAgIHJldHVybiAnLic7XG4gIH1cblxuICBpZiAoZGlyKSB7XG4gICAgLy8gSXQgaGFzIGEgZGlybmFtZSwgc3RyaXAgdHJhaWxpbmcgc2xhc2hcbiAgICBkaXIgPSBkaXIuc3Vic3RyKDAsIGRpci5sZW5ndGggLSAxKTtcbiAgfVxuXG4gIHJldHVybiByb290ICsgZGlyO1xufTtcblxuXG5leHBvcnRzLmJhc2VuYW1lID0gZnVuY3Rpb24ocGF0aCwgZXh0KSB7XG4gIHZhciBmID0gc3BsaXRQYXRoKHBhdGgpWzJdO1xuICAvLyBUT0RPOiBtYWtlIHRoaXMgY29tcGFyaXNvbiBjYXNlLWluc2Vuc2l0aXZlIG9uIHdpbmRvd3M/XG4gIGlmIChleHQgJiYgZi5zdWJzdHIoLTEgKiBleHQubGVuZ3RoKSA9PT0gZXh0KSB7XG4gICAgZiA9IGYuc3Vic3RyKDAsIGYubGVuZ3RoIC0gZXh0Lmxlbmd0aCk7XG4gIH1cbiAgcmV0dXJuIGY7XG59O1xuXG5cbmV4cG9ydHMuZXh0bmFtZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgcmV0dXJuIHNwbGl0UGF0aChwYXRoKVszXTtcbn07XG5cbmZ1bmN0aW9uIGZpbHRlciAoeHMsIGYpIHtcbiAgICBpZiAoeHMuZmlsdGVyKSByZXR1cm4geHMuZmlsdGVyKGYpO1xuICAgIHZhciByZXMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChmKHhzW2ldLCBpLCB4cykpIHJlcy5wdXNoKHhzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cblxuLy8gU3RyaW5nLnByb3RvdHlwZS5zdWJzdHIgLSBuZWdhdGl2ZSBpbmRleCBkb24ndCB3b3JrIGluIElFOFxudmFyIHN1YnN0ciA9ICdhYicuc3Vic3RyKC0xKSA9PT0gJ2InXG4gICAgPyBmdW5jdGlvbiAoc3RyLCBzdGFydCwgbGVuKSB7IHJldHVybiBzdHIuc3Vic3RyKHN0YXJ0LCBsZW4pIH1cbiAgICA6IGZ1bmN0aW9uIChzdHIsIHN0YXJ0LCBsZW4pIHtcbiAgICAgICAgaWYgKHN0YXJ0IDwgMCkgc3RhcnQgPSBzdHIubGVuZ3RoICsgc3RhcnQ7XG4gICAgICAgIHJldHVybiBzdHIuc3Vic3RyKHN0YXJ0LCBsZW4pO1xuICAgIH1cbjtcbiIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxuXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBzZXRUaW1lb3V0KGRyYWluUXVldWUsIDApO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE0IEZhY2Vib29rLCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvbnN0cnVjdHMgYW4gZW51bWVyYXRpb24gd2l0aCBrZXlzIGVxdWFsIHRvIHRoZWlyIHZhbHVlLlxuICpcbiAqIEZvciBleGFtcGxlOlxuICpcbiAqICAgdmFyIENPTE9SUyA9IGtleU1pcnJvcih7Ymx1ZTogbnVsbCwgcmVkOiBudWxsfSk7XG4gKiAgIHZhciBteUNvbG9yID0gQ09MT1JTLmJsdWU7XG4gKiAgIHZhciBpc0NvbG9yVmFsaWQgPSAhIUNPTE9SU1tteUNvbG9yXTtcbiAqXG4gKiBUaGUgbGFzdCBsaW5lIGNvdWxkIG5vdCBiZSBwZXJmb3JtZWQgaWYgdGhlIHZhbHVlcyBvZiB0aGUgZ2VuZXJhdGVkIGVudW0gd2VyZVxuICogbm90IGVxdWFsIHRvIHRoZWlyIGtleXMuXG4gKlxuICogICBJbnB1dDogIHtrZXkxOiB2YWwxLCBrZXkyOiB2YWwyfVxuICogICBPdXRwdXQ6IHtrZXkxOiBrZXkxLCBrZXkyOiBrZXkyfVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqL1xudmFyIGtleU1pcnJvciA9IGZ1bmN0aW9uKG9iaikge1xuICB2YXIgcmV0ID0ge307XG4gIHZhciBrZXk7XG4gIGlmICghKG9iaiBpbnN0YW5jZW9mIE9iamVjdCAmJiAhQXJyYXkuaXNBcnJheShvYmopKSkge1xuICAgIHRocm93IG5ldyBFcnJvcigna2V5TWlycm9yKC4uLik6IEFyZ3VtZW50IG11c3QgYmUgYW4gb2JqZWN0LicpO1xuICB9XG4gIGZvciAoa2V5IGluIG9iaikge1xuICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICByZXRba2V5XSA9IGtleTtcbiAgfVxuICByZXR1cm4gcmV0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBrZXlNaXJyb3I7XG4iLCJpbXBvcnQgQXBpUmVxdWVzdCBmcm9tICcuL0FwaVJlcXVlc3QnO1xuaW1wb3J0IHtDb25maWd9IGZyb20gJy4uL1V0aWxzL0NvbnN0YW50cyc7XG5cbi8qKlxuICogQXBwbGljYXRpb24td2lkZSBhY2Nlc3NfdG9rZW4gc3RvcmFnZS9yZXRyaWV2YWxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWNjZXNzVG9rZW4ge1xuICAvKipcbiAgICogR2V0IHRoZSBBY2Nlc3NUb2tlbiBhbmQgbG9jYWxseSBjYWNoZSBpdCB0byBhdm9pZCB1bmVjY2Vzc2FyeSBmZXRjaGVzLlxuICAgKiBAcmV0dXJucyBQcm9taXNlXG4gICAqL1xuICBzdGF0aWMgZ2V0KHZlcmlmeSkge1xuICAgIGlmICh0eXBlb2YgdmVyaWZ5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmVyaWZ5ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmIChBY2Nlc3NUb2tlbi5fYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUoQWNjZXNzVG9rZW4uX2FjY2Vzc1Rva2VuKTtcbiAgICAgIH1cblxuICAgICAgbGV0IGFjY2Vzc190b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKENvbmZpZy5TdG9yYWdlLkFDQ0VTU19UT0tFTik7XG5cbiAgICAgIGlmIChhY2Nlc3NfdG9rZW4gPT09IG51bGwpIHtcbiAgICAgICAgQWNjZXNzVG9rZW4uY2xlYXIoKTtcbiAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgRXJyb3Ioe2NvZGU6IDQwMywgbWVzc2FnZTogJ1VuYXV0aG9yaXplZCd9KSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGlmICh2ZXJpZnkpIHtcbiAgICAgIC8vICAgQXBpUmVxdWVzdC5wb3N0KCcvc2Vzc2lvbi92ZXJpZnknKVxuICAgICAgLy8gICAgIC5zZXRIYW5kbGVFcnJvcnMoZmFsc2UpXG4gICAgICAvLyAgICAgLnNldElnbm9yZU5ldHdvcmtFcnJvcih0cnVlKVxuICAgICAgLy8gICAgIC5zZW5kKCgpID0+IHtcbiAgICAgIC8vICAgICAgIEFjY2Vzc1Rva2VuLnNldChhY2Nlc3NfdG9rZW4sIHRydWUpLnRoZW4ocmVzb2x2ZSk7XG4gICAgICAvLyAgICAgfSwgKGVycikgPT4ge1xuICAgICAgLy8gICAgICAgY29uc29sZS5sb2coJ1Rva2VuIFZlcmlmaWNhdGlvbiBFcnJvcjogJywgZXJyKTtcbiAgICAgIC8vICAgICAgIEFjY2Vzc1Rva2VuLmNsZWFyKCk7XG4gICAgICAvLyAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIC8vICAgICB9KTtcbiAgICAgIC8vIH1cblxuICAgICAgQWNjZXNzVG9rZW4uc2V0KGFjY2Vzc190b2tlbiwgdHJ1ZSkudGhlbihyZXNvbHZlKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGFjY2Vzc190b2tlbiBpbiB0aGUgbG9jYWwgY2FjaGUsIGFuZCAoYnkgZGVmYXVsdCkgaW4gbG9jYWxTdG9yYWdlLlxuICAgKiBAcGFyYW0gYWNjZXNzX3Rva2VuXG4gICAqIEBwYXJhbSBkb250VXBkYXRlU3RvcmFnZVxuICAgKi9cbiAgc3RhdGljIHNldChhY2Nlc3NfdG9rZW4sIGRvbnRVcGRhdGVTdG9yYWdlKSB7XG4gICAgQWNjZXNzVG9rZW4uX2FjY2Vzc1Rva2VuID0gYWNjZXNzX3Rva2VuO1xuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmICghIGRvbnRVcGRhdGVTdG9yYWdlKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKENvbmZpZy5TdG9yYWdlLkFDQ0VTU19UT0tFTiwgYWNjZXNzX3Rva2VuKTtcbiAgICAgIH1cblxuICAgICAgcmVzb2x2ZShhY2Nlc3NfdG9rZW4pO1xuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogQ2xlYXJzIHRoZSBhY2Nlc3NfdG9rZW4gZnJvbSBsb2NhbCBjYWNoZSBhbmQgbG9jYWxTdG9yYWdlXG4gICAqIEByZXR1cm5zIHsqfVxuICAgKi9cbiAgc3RhdGljIGNsZWFyKCkge1xuICAgIEFjY2Vzc1Rva2VuLl9hY2Nlc3NUb2tlbiA9IG51bGw7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKENvbmZpZy5TdG9yYWdlLkFDQ0VTU19UT0tFTik7XG4gIH1cbn0iLCJpbXBvcnQgVXRpbHMgZnJvbSAnLi4vVXRpbHMvVXRpbHMnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQgQXBpVXRpbHMgZnJvbSAnLi9BcGlVdGlscyc7XG5pbXBvcnQgQWNjZXNzVG9rZW4gZnJvbSAnLi9BY2Nlc3NUb2tlbic7XG5pbXBvcnQgUmVxdWVzdCBmcm9tICdzdXBlcmFnZW50JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpUmVxdWVzdCB7XG5cbiAgc3RhdGljIGFjdGl2ZVJlcXVlc3RzID0gMDtcblxuICBzdGF0aWMgdXBkYXRlTmV0d29ya0luZGljYXRvcihkaXIgPSAnLScpIHtcbiAgICBpZiAoZGlyID09PSAnKycpIHtcbiAgICAgIEFwaVJlcXVlc3QuYWN0aXZlUmVxdWVzdHMrKztcbiAgICB9IGVsc2Uge1xuICAgICAgQXBpUmVxdWVzdC5hY3RpdmVSZXF1ZXN0cy0tO1xuICAgIH1cblxuICAgIGlmIChBcGlSZXF1ZXN0LmFjdGl2ZVJlcXVlc3RzIDw9IDApIHtcbiAgICAgIEFwaVJlcXVlc3QuYWN0aXZlUmVxdWVzdHMgPSAwO1xuICAgICAgLy8gaGlkZSBuZXR3b3JrIGFjdGl2aXR5IGluZGljYXRvclxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBzaG93IG5ldHdvcmsgYWN0aXZpdHkgaW5kaWNhdG9yXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhbiBBUEkgUmVxdWVzdCBPYmplY3RcbiAgICogQHBhcmFtIG1ldGhvZCB7c3RyaW5nfSBnZXR8cG9zdHxwdXR8ZGVsfGhlYWR8b3B0aW9ucyAob3B0aW9uYWwsIGRlZmF1bHQ6IGdldClcbiAgICogQHBhcmFtIGVuZHBvaW50IHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgY3JlYXRlKG1ldGhvZCwgZW5kcG9pbnQpIHtcbiAgICByZXR1cm4gbmV3IHRoaXMobWV0aG9kLCBlbmRwb2ludCk7XG4gIH1cblxuICBzdGF0aWMgY3JlYXRlQW5vbihtZXRob2QsIGVuZHBvaW50KSB7XG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgdGhpcyhtZXRob2QsIGVuZHBvaW50KTtcbiAgICByZXF1ZXN0LnNldEFub255bW91cyh0cnVlKTtcblxuICAgIHJldHVybiByZXF1ZXN0O1xuICB9XG5cbiAgc3RhdGljIGdldChlbmRwb2ludCkge1xuICAgIHJldHVybiBuZXcgdGhpcygnZ2V0JywgZW5kcG9pbnQpO1xuICB9XG5cbiAgc3RhdGljIHBvc3QoZW5kcG9pbnQpIHtcbiAgICByZXR1cm4gbmV3IHRoaXMoJ3Bvc3QnLCBlbmRwb2ludCk7XG4gIH1cblxuICBzdGF0aWMgcHV0KGVuZHBvaW50KSB7XG4gICAgcmV0dXJuIG5ldyB0aGlzKCdwdXQnLCBlbmRwb2ludCk7XG4gIH1cblxuICBzdGF0aWMgZGVsZXRlKGVuZHBvaW50KSB7XG4gICAgcmV0dXJuIG5ldyB0aGlzKCdkZWxldGUnLCBlbmRwb2ludCk7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihtZXRob2QsIGVuZHBvaW50KSB7XG4gICAgaWYgKGVuZHBvaW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVuZHBvaW50ID0gbWV0aG9kO1xuICAgICAgbWV0aG9kID0gJ2dldCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1ldGhvZCA9IG1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIGlmIChlbmRwb2ludC5pbmRleE9mKCc/JykgIT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtdXN0IHNldCBxdWVyeSBzdHJpbmcgZGF0YSB2aWEgdGhlIGBxdWVyeWAgZnVuY3Rpb24nKTtcbiAgICB9XG5cbiAgICB0aGlzLmlzQW5vbnltb3VzID0gZmFsc2U7XG4gICAgdGhpcy5oYW5kbGVFcnJvcnMgPSB0cnVlO1xuICAgIHRoaXMuaWdub3JlTmV0d29ya0Vycm9yID0gZmFsc2U7XG4gICAgdGhpcy51cmwgPSBBcGlVdGlscy5idWlsZFVybChlbmRwb2ludCk7XG4gICAgdGhpcy5fc2V0dXBSZXF1ZXN0KG1ldGhvZCk7XG4gIH1cblxuICBzZXRBbm9ueW1vdXMoaXNBbm9ueW1vdXMpIHtcbiAgICB0aGlzLmlzQW5vbnltb3VzID0gaXNBbm9ueW1vdXM7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHNldEhhbmRsZUVycm9ycyhoYW5kbGVFcnJvcnMpIHtcbiAgICB0aGlzLmhhbmRsZUVycm9ycyA9IGhhbmRsZUVycm9ycztcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgc2V0SWdub3JlTmV0d29ya0Vycm9yKGlnbm9yZU5ldHdvcmtFcnJvcikge1xuICAgIHRoaXMuaWdub3JlTmV0d29ya0Vycm9yID0gaWdub3JlTmV0d29ya0Vycm9yO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBjb25maWd1cmUoY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayh0aGlzLnJlcXVlc3QpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzZW5kKGNhbGxiYWNrLCBlcnJDYWxsYmFjaykge1xuICAgIGlmICh0aGlzLmlzQW5vbnltb3VzKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2VuZEl0KGNhbGxiYWNrLCBlcnJDYWxsYmFjayk7XG4gICAgfVxuXG4gICAgLy8gU2VuZCB3aXRoIHByb3BlciBhdXRoZW50aWNhdGlvbjpcbiAgICBBY2Nlc3NUb2tlbi5nZXQoKVxuICAgICAgLnRoZW4odG9rZW4gPT4ge1xuICAgICAgICB0aGlzLnF1ZXJ5KHt0b2tlbn0pO1xuICAgICAgICB0aGlzLl9zZW5kSXQoY2FsbGJhY2ssIGVyckNhbGxiYWNrKTtcbiAgICAgIH0pXG4gICAgICAvLyAuY2F0Y2goKCkgPT4gQWN0aW9ucy5sb2dvdXQoKSk7XG4gIH1cblxuICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgKiBIZWxwZXIvV3JhcHBlciBGdW5jdGlvbnMgKlxuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICBkYXRhKGRhdGEpIHtcbiAgICB0aGlzLnJlcXVlc3RCb2R5ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHF1ZXJ5KGRhdGEpIHtcbiAgICB0aGlzLnF1ZXJ5RGF0YSA9IE9iamVjdC5hc3NpZ24odGhpcy5xdWVyeURhdGEsIGRhdGEpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBoZWFkZXIoaGVhZGVyLCB2YWx1ZSkge1xuICAgIHRoaXMucmVxdWVzdEhlYWRlcnNbaGVhZGVyXSA9IHZhbHVlO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBoZWFkZXJzKGhlYWRlcnMpIHtcbiAgICB0aGlzLnJlcXVlc3RIZWFkZXJzID0gT2JqZWN0LmFzc2lnbih0aGlzLnJlcXVlc3RIZWFkZXJzLCBoZWFkZXJzKVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBfc2V0dXBSZXF1ZXN0KG1ldGhvZCkge1xuICAgIHRoaXMucmVxdWVzdE1ldGhvZCA9ICghIG1ldGhvZCkgPyAnZ2V0JyA6IG1ldGhvZDtcbiAgICB0aGlzLnJlcXVlc3RIZWFkZXJzID0ge1xuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgfTtcblxuICAgIHRoaXMucXVlcnlEYXRhID0ge307XG4gICAgdGhpcy5yZXF1ZXN0Qm9keSA9IHt9O1xuICAgIHRoaXMucmVxdWVzdCA9IG51bGw7XG4gIH1cblxuICBfc2VuZEl0KGNhbGxiYWNrLCBlcnJDYWxsYmFjaykge1xuICAgIEFwaVJlcXVlc3QudXBkYXRlTmV0d29ya0luZGljYXRvcignKycpO1xuXG4gICAgdGhpcy5yZXF1ZXN0ID0gUmVxdWVzdFt0aGlzLnJlcXVlc3RNZXRob2RdKHRoaXMudXJsKTtcblxuICAgIGlmICghIFV0aWxzLmlzRW1wdHkodGhpcy5xdWVyeURhdGEpKSB7XG4gICAgICB0aGlzLnJlcXVlc3QucXVlcnkodGhpcy5xdWVyeURhdGEpO1xuICAgIH1cblxuICAgIGlmICghIFV0aWxzLmlzRW1wdHkodGhpcy5yZXF1ZXN0SGVhZGVycykpIHtcbiAgICAgIHRoaXMucmVxdWVzdC5zZXQodGhpcy5yZXF1ZXN0SGVhZGVycyk7XG4gICAgfVxuXG4gICAgdGhpcy5yZXF1ZXN0XG4gICAgICAuc2VuZCh0aGlzLnJlcXVlc3RCb2R5KVxuICAgICAgLy8ud2l0aENyZWRlbnRpYWxzKClcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIEFwaVJlcXVlc3QudXBkYXRlTmV0d29ya0luZGljYXRvcigpO1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgLy8gSSBrbm93IHdoZW4gdGhhdCBob3QgbGluZSBibGluZzpcbiAgICAgICAgICBjYWxsYmFjayhyZXMuYm9keSk7XG4gICAgICAgIH0gZWxzZSBpZiAocmVzLnVuYXV0aG9yaXplZCkge1xuICAgICAgICAgIC8vIFVuYXV0aG9yaXplZCByZXF1ZXN0OlxuICAgICAgICAgIEFjY2Vzc1Rva2VuLmNsZWFyKCk7XG4gICAgICAgICAgQWN0aW9ucy5ub2F1dGgoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3QgT0s6XG4gICAgICAgICAgaWYgKHRoaXMuaGFuZGxlRXJyb3JzKSB7XG4gICAgICAgICAgICBBcGlVdGlscy5oYW5kbGVFcnJvcihyZXMuYm9keS5lcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIENhbGwgdGhlIGVycm9yIGNhbGxiYWNrIHNvIHZpZXdzIGNhbiByZXNwb25kOlxuICAgICAgICAgIGlmIChlcnJDYWxsYmFjaykgZXJyQ2FsbGJhY2socmVzLmJvZHkuZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxufSIsImltcG9ydCBVdGlscyBmcm9tICcuLi9VdGlscy9VdGlscyc7XG5pbXBvcnQge0NvbmZpZ30gZnJvbSAnLi4vVXRpbHMvQ29uc3RhbnRzJztcblxuY29uc3QgREVGQVVMVF9FUlJPUiA9ICdUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggeW91ciByZXF1ZXN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpVXRpbHMge1xuXG4gIHN0YXRpYyBoYW5kbGVFcnJvcihlcnIpIHtcbiAgICBjb25zb2xlLndhcm4oZXJyKTtcbiAgICBVdGlscy5hbGVydEVycm9yKGVyci5tZXNzYWdlIHx8IERFRkFVTFRfRVJST1IpO1xuICB9XG5cbiAgc3RhdGljIGhhbmRsZU5ldHdvcmtFcnJvcihlcnIpIHtcbiAgICBjb25zb2xlLndhcm4oZXJyKTtcbiAgICAvLyBzaG93IG9mZmxpbmUgbW9kZVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSBlbmRwb2ludFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgc3RhdGljIGJ1aWxkVXJsKGVuZHBvaW50KSB7XG4gICAgICBlbmRwb2ludCA9IFV0aWxzLnRyaW1DaGFyKGVuZHBvaW50LCAnLycpO1xuXG4gICAgICBpZiAoZW5kcG9pbnQuaW5kZXhPZihDb25maWcuYXBpX3Jvb3QpID09PSAtMSkge1xuICAgICAgICAgIGVuZHBvaW50ID0gQ29uZmlnLmFwaV9yb290ICsgZW5kcG9pbnQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBlbmRwb2ludDtcbiAgfVxuXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCBEYXRlVGltZUlucHV0IGZyb20gJ3JlYWN0LWJvb3RzdHJhcC1kYXRldGltZXBpY2tlcic7XG5cbmltcG9ydCBVdGlscyBmcm9tICcuLi9VdGlscy9VdGlscyc7XG5pbXBvcnQgQXBpUmVxdWVzdCBmcm9tICcuLi9BcGkvQXBpUmVxdWVzdCc7XG5pbXBvcnQgQ3VycmVudFVzZXIgZnJvbSAnLi4vU3RvcmVzL0N1cnJlbnRVc2VyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWRkUGFnZUZvcm0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge307XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7fTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMucG9zdFRpbWVzdGFtcCA9IG51bGw7XG4gICAgdGhpcy5oYXNDdXN0b21VcmkgPSBmYWxzZTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBhdXRob3JpemVkOiB0cnVlLFxuICAgICAgcHJvY2Vzc2luZzogZmFsc2UsXG4gICAgICB1c2VyOiB0aGlzLnByb3BzLnVzZXIsXG4gICAgICBwYWdlOiB7fSxcbiAgICB9O1xuXG4gICAgdGhpcy5fb25TdWJtaXRQYWdlID0gdGhpcy5fb25TdWJtaXRQYWdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fb25Qb3N0RGF0ZUNoYW5nZSA9IHRoaXMuX29uUG9zdERhdGVDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vblVwZGF0ZVBhZ2VVcmkgPSB0aGlzLl9vblVwZGF0ZVBhZ2VVcmkuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vbkNoYW5nZVVyaSA9IHRoaXMuX29uQ2hhbmdlVXJpLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fb25CbHVyVXJpID0gdGhpcy5fb25CbHVyVXJpLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fb25Vc2VyQ2hhbmdlID0gdGhpcy5fb25Vc2VyQ2hhbmdlLmJpbmQodGhpcyk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdGhpcy5zdG9wVXNlclN1YnNjcmliZSA9IEN1cnJlbnRVc2VyLmxpc3Rlbih0aGlzLl9vblVzZXJDaGFuZ2UpO1xuXG4gICAgbGV0IHVzZXIgPSBDdXJyZW50VXNlci5nZXQoKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGF1dGhvcml6ZWQ6ICEhIHVzZXIuaWQsXG4gICAgICB1c2VyLFxuICAgIH0pO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5zdG9wVXNlclN1YnNjcmliZSgpO1xuICB9XG5cbiAgcmVuZGVyUHJvZ3Jlc3NCYXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3NcIiBzdHlsZT17e2hlaWdodDogXCJhdXRvXCJ9fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1iYXIgcHJvZ3Jlc3MtYmFyLWluZm8gcHJvZ3Jlc3MtYmFyLXN0cmlwZWQgYWN0aXZlXCIgcm9sZT1cInByb2dyZXNzYmFyXCIgYXJpYS12YWx1ZW5vdz1cIjEwMFwiIGFyaWEtdmFsdWVtaW49XCIwXCIgYXJpYS12YWx1ZW1heD1cIjEwMFwiIHN0eWxlPXtzdHlsZXMucHJvZ3Jlc3NCYXJ9PlxuICAgICAgICAgIFNhdmluZy4uLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICByZW5kZXJTdWJtaXRCdXR0b24oKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUucHJvY2Vzc2luZykge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyUHJvZ3Jlc3NCYXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1sZyBidG4taW5mb1wiIHN0eWxlPXtzdHlsZXMuYnV0dG9ufT5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1wbHVzLXNpZ25cIj48L3NwYW4+XG4gICAgICAgIHsnIEFkZCBQYWdlJ31cbiAgICAgIDwvYnV0dG9uPlxuICAgICk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgaWYgKCEgdGhpcy5zdGF0ZS5hdXRob3JpemVkKSByZXR1cm4gPGg0Pk11c3QgYmUgbG9nZ2VkIGluIDooPC9oND47XG5cbiAgICBsZXQgcGxhY2Vob2xkZXJDb3B5ID0gXCJMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBNb3JiaSBpYWN1bGlzIGVzdCBsZWN0dXMsIHBvc3VlcmUgc2NlbGVyaXNxdWUgbWFzc2EgcmhvbmN1cyBpbi4gVmVzdGlidWx1bSBmYWNpbGlzaXMgcHVydXMgbm9uIHZlbGl0IHBvcnR0aXRvciwgbm9uIGltcGVyZGlldCBlcmF0IGNvbmRpbWVudHVtLlwiO1xuXG4gICAgLy8gYWRkIC5oYXMtc3VjY2VzcyBvciAuaGFzLWVycm9yXG4gICAgLy8gLmdseXBoaWNvbi1vayBvciAuZ2x5cGhpY29uLXJlbW92ZVxuICAgIHJldHVybiAoXG4gICAgICA8Zm9ybSBpZD1cImFkZE5ld1BhZ2VcIiBjbGFzc05hbWU9XCJcIiByb2xlPVwiZm9ybVwiIG9uU3VibWl0PXt0aGlzLl9vblN1Ym1pdFBhZ2V9PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTEyXCI+XG4gICAgICAgICAgICA8aDE+QWRkIE5ldyBQYWdlPC9oMT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtNFwiPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibGVhZFwiPjxlbT5EYXRhIGFib3V0IGRhdGE6PC9lbT48L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtOFwiPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibGVhZFwiPjxlbT5TcGl0IHlvdXIga25vd2xlZGdlIGdhbWU6PC9lbT48L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8RGF0ZVRpbWVJbnB1dFxuICAgICAgICAgICAgICAgIHNpemU9eydsZyd9XG4gICAgICAgICAgICAgICAgZGVmYXVsdFRleHQ9eycnfVxuICAgICAgICAgICAgICAgIGlucHV0UHJvcHM9e3twbGFjZWhvbGRlcjogXCJBcnRpY2xlIERhdGUvVGltZVwifX1cbiAgICAgICAgICAgICAgICBmb3JtYXQ9eyd4J31cbiAgICAgICAgICAgICAgICBpbnB1dEZvcm1hdD17J1lZWVktTU0tREQgaGg6bW0gQSd9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuX29uUG9zdERhdGVDaGFuZ2V9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8aW5wdXQgcmVmPVwicGFnZVVyaVwiXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJDdXN0b20tUGFnZS1VcmxcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS5wYWdlLnVyaX1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuX29uQ2hhbmdlVXJpfVxuICAgICAgICAgICAgICAgICAgICBvbkJsdXI9e3RoaXMuX29uQmx1clVyaX0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICAgIDxzZWxlY3QgcmVmPVwicGFnZUNhdGVnb3J5XCIgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCI+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlwiPuKAlCBDaG9vc2UgQ2F0ZWdvcnkg4oCUPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbj5SZXZpZXdzPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbj5SZWNpcGVzPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbj5Ib3cgVG8nczwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDxvcHRpb24+RnJpZGF5IEZvb2QgRmlnaHQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uPldoZXJlIFRvIEZpbmQuLi48L29wdGlvbj5cbiAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMucHJldmlld0ltYWdlfT5EcmFnb24gRHJvcCBJbWFnZSBBcmVhPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8aW5wdXQgcmVmPVwibWV0YVRpdGxlXCIgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIG1ldGEgdGl0bGVcIiAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgPHRleHRhcmVhIHJlZj1cIm1ldGFEZXNjcmlwdGlvblwiIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbCBpbnB1dC1sZ1wiIHJvd3M9XCIyXCIgcGxhY2Vob2xkZXI9XCJFbnRlciBtZXRhIGRlc2NyaXB0aW9uXCI+PC90ZXh0YXJlYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICAgIDxpbnB1dCByZWY9XCJtZXRhS2V5d29yZHNcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2wgaW5wdXQtbGdcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgbWV0YSBrZXl3b3Jkc1wiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC14cy04XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXQgcmVmPVwicGFnZVRpdGxlXCIgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkhlYWRsaW5lXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLl9vblVwZGF0ZVBhZ2VVcml9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8dGV4dGFyZWEgcmVmPVwicGFnZUFydGljbGVcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2wgaW5wdXQtbGdcIiByb3dzPVwiMTBcIiBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJDb3B5fT48L3RleHRhcmVhPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dGhpcy5yZW5kZXJTdWJtaXRCdXR0b24oKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG4gICAgKTtcbiAgfVxuXG4gIF9vblBvc3REYXRlQ2hhbmdlKGRhdGV0aW1lKSB7XG4gICAgdGhpcy5wb3N0VGltZXN0YW1wID0gZGF0ZXRpbWU7XG4gICAgdGhpcy5fb25VcGRhdGVQYWdlVXJpKCk7XG4gIH1cblxuICBfZ2V0UG9zdERhdGVGb3JtYXQoZm9ybWF0ID0gXCJZWVlZLU1NLUREIEhIOm1tOjAwXCIpIHtcbiAgICByZXR1cm4gbW9tZW50LnVuaXgodGhpcy5wb3N0VGltZXN0YW1wIC8gMTAwMCkuZm9ybWF0KGZvcm1hdCk7XG4gIH1cblxuICBfZ2V0UGFnZURhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRpdGxlOiB0aGlzLnJlZnMucGFnZVRpdGxlLnZhbHVlLFxuICAgICAgYXJ0aWNsZTogdGhpcy5yZWZzLnBhZ2VBcnRpY2xlLnZhbHVlLFxuICAgICAgdXJpOiB0aGlzLnN0YXRlLnBhZ2UudXJpIHx8IHRoaXMucmVmcy5wYWdlVXJpLnZhbHVlLFxuICAgICAgY2F0ZWdvcnk6IHRoaXMucmVmcy5wYWdlQ2F0ZWdvcnkudmFsdWUsXG4gICAgICBtZXRhX3RpdGxlOiB0aGlzLnJlZnMubWV0YVRpdGxlLnZhbHVlLFxuICAgICAgbWV0YV9kZXNjcmlwdGlvbjogdGhpcy5yZWZzLm1ldGFEZXNjcmlwdGlvbi52YWx1ZSxcbiAgICAgIG1ldGFfa2V5d29yZHM6IHRoaXMucmVmcy5tZXRhS2V5d29yZHMudmFsdWUsXG4gICAgICBwb3N0X2RhdGU6IHRoaXMucG9zdFRpbWVzdGFtcCA/IHRoaXMuX2dldFBvc3REYXRlRm9ybWF0KCkgOiBudWxsLFxuICAgIH07XG4gIH1cblxuICBfb25TdWJtaXRQYWdlKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKHRoaXMuc3RhdGUucHJvY2Vzc2luZykgcmV0dXJuO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7cHJvY2Vzc2luZzogdHJ1ZX0pO1xuICAgIEFwaVJlcXVlc3QucG9zdCgnL3BhZ2UnKVxuICAgICAgLmRhdGEodGhpcy5fZ2V0UGFnZURhdGEoKSlcbiAgICAgIC5zZW5kKHBhZ2UgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygncGFnZTonLCBwYWdlKTtcbiAgICAgICAgdGhpcy5fY2xlYXJGb3JtKCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIF9jbGVhckZvcm0oKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGROZXdQYWdlXCIpLnJlc2V0KCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7cHJvY2Vzc2luZzogZmFsc2V9KTtcbiAgfVxuXG4gIF9nZXRVcmlGcm9tVGl0bGUoKSB7XG4gICAgbGV0IGhlYWRsaW5lID0gdGhpcy5yZWZzLnBhZ2VUaXRsZS52YWx1ZSxcbiAgICAgICAgcG9zdERhdGUgPSB0aGlzLnBvc3RUaW1lc3RhbXAgPyB0aGlzLl9nZXRQb3N0RGF0ZUZvcm1hdChcIi1ZWVlZLU1NLUREXCIpIDogXCJcIjtcbiAgICByZXR1cm4gVXRpbHMuY2xlYW5Gb3JVcmwoaGVhZGxpbmUrcG9zdERhdGUpO1xuICB9XG5cbiAgX29uQmx1clVyaShlKSB7XG4gICAgaWYgKCEgZS50YXJnZXQudmFsdWUpIHtcbiAgICAgIHRoaXMuaGFzQ3VzdG9tVXJpID0gZmFsc2U7XG4gICAgICB0aGlzLl9vblVwZGF0ZVBhZ2VVcmkoKTtcbiAgICB9XG4gIH1cblxuICBfb25DaGFuZ2VVcmkoZSkge1xuICAgIHRoaXMuaGFzQ3VzdG9tVXJpID0gdHJ1ZTtcblxuICAgIGxldCBwYWdlID0gdGhpcy5zdGF0ZS5wYWdlO1xuICAgIHBhZ2UudXJpID0gdGhpcy5yZWZzLnBhZ2VVcmkudmFsdWU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7cGFnZX0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgX29uVXBkYXRlUGFnZVVyaSgpIHtcbiAgICBpZiAodGhpcy5oYXNDdXN0b21VcmkpIHJldHVybjtcblxuICAgIGxldCBwYWdlID0gdGhpcy5zdGF0ZS5wYWdlO1xuICAgIHBhZ2UudXJpID0gdGhpcy5fZ2V0VXJpRnJvbVRpdGxlKCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7cGFnZX0pO1xuICB9XG5cbiAgX29uVXNlckNoYW5nZSh1c2VyKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7YXV0aG9yaXplZDogISEgdXNlci5pZH0pO1xuICB9XG59XG5cblxudmFyIHN0eWxlcyA9IHtcbiAgYnV0dG9uOiB7XG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgfSxcbiAgcHJldmlld0ltYWdlOiB7XG4gICAgY29sb3I6IFwicmdiKDE1MCwxNTAsMTUwKVwiLFxuICAgIGJvcmRlcldpZHRoOiAyLFxuICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMTUwLDE1MCwxNTAsLjgpXCIsXG4gICAgYm9yZGVyU3R5bGU6IFwiZGFzaGVkXCIsXG4gICAgZm9udFdlaWdodDogXCJib2xkXCIsXG4gICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgIHBhZGRpbmc6IFwiNDBweCAwXCIsXG4gIH0sXG4gIHByb2dyZXNzQmFyOiB7XG4gICAgZm9udFNpemU6IFwiMThweFwiLFxuICAgIHBhZGRpbmc6IFwiMTBweCAwXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICB9LFxufTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQgQXBpUmVxdWVzdCBmcm9tICcuLi9BcGkvQXBpUmVxdWVzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2luRm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7fTtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHt9O1xuXG4gICAgdGhpcy5vblN1Ym1pdCA9IHRoaXMub25TdWJtaXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGZvcm0gY2xhc3NOYW1lPVwibmF2YmFyLWZvcm0gbmF2YmFyLXJpZ2h0XCIgcm9sZT1cImZvcm1cIiBvblN1Ym1pdD17dGhpcy5vblN1Ym1pdH0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiIHN0eWxlPXtzdHlsZXMuZm9ybUZpZWxkfT5cbiAgICAgICAgICA8aW5wdXQgcmVmPVwidXNlcm5hbWVcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwidXNlcm5hbWVcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwXCIgc3R5bGU9e3N0eWxlcy5mb3JtRmllbGR9PlxuICAgICAgICAgIDxpbnB1dCByZWY9XCJwYXNzd29yZFwiIHR5cGU9XCJwYXNzd29yZFwiIHBsYWNlaG9sZGVyPVwicGFzc3dvcmRcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1kZWZhdWx0XCI+U2lnbiBpbjwvYnV0dG9uPlxuICAgICAgPC9mb3JtPlxuICAgICk7XG4gIH1cblxuICBvblN1Ym1pdChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgdXNlcm5hbWU6IHRoaXMucmVmcy51c2VybmFtZS52YWx1ZSxcbiAgICAgIHBhc3N3b3JkOiB0aGlzLnJlZnMucGFzc3dvcmQudmFsdWUsXG4gICAgfTtcblxuICAgIEFjdGlvbnMubG9naW4oZGF0YSk7XG4gIH1cbn1cblxudmFyIHN0eWxlcyA9IHtcbiAgZm9ybUZpZWxkOiB7XG4gICAgbWFyZ2luOiAzLFxuICB9LFxufTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQgQ3VycmVudFVzZXIgZnJvbSAnLi4vU3RvcmVzL0N1cnJlbnRVc2VyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlck1lbnUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHVzZXI6IFJlYWN0LlByb3BUeXBlcy5vYmplY3QsXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICB1c2VyOiB7fSxcbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB1c2VyOiB0aGlzLnByb3BzLnVzZXIsXG4gICAgfTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB0aGlzLnN0b3BMaXN0ZW5pbmcgPSBDdXJyZW50VXNlci5saXN0ZW4odGhpcy5fb25Vc2VyQ2hhbmdlLmJpbmQodGhpcykpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7dXNlcjogQ3VycmVudFVzZXIuZ2V0KCl9KTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMuc3RvcExpc3RlbmluZygpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8dWwgY2xhc3NOYW1lPVwibmF2IG5hdmJhci1uYXYgbmF2YmFyLXJpZ2h0XCI+XG4gICAgICAgIDxsaSBjbGFzc05hbWU9XCJkcm9wZG93blwiPlxuICAgICAgICAgIDxhIGhyZWY9XCIjXCIgY2xhc3NOYW1lPVwiZHJvcGRvd24tdG9nZ2xlXCIgZGF0YS10b2dnbGU9XCJkcm9wZG93blwiIHJvbGU9XCJidXR0b25cIiBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPlxuICAgICAgICAgICAge3RoaXMuc3RhdGUudXNlci51c2VybmFtZX1cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNhcmV0XCI+PC9zcGFuPlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwiZHJvcGRvd24tbWVudVwiPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2FkZC1wYWdlXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1wbHVzLXNpZ25cIiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT17c3R5bGVzLmljb259Pjwvc3Bhbj5cbiAgICAgICAgICAgICAgICBBZGQgUGFnZVxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPjxhIGhyZWY9XCIjXCIgb25DbGljaz17dGhpcy5fb25FZGl0UHJlc3N9PlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJnbHlwaGljb24gZ2x5cGhpY29uLWVkaXRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT17c3R5bGVzLmljb259Pjwvc3Bhbj5cbiAgICAgICAgICAgICAgRWRpdCBTb21ldGhpbmdcbiAgICAgICAgICAgIDwvYT48L2xpPlxuICAgICAgICAgICAgPGxpIHJvbGU9XCJzZXBhcmF0b3JcIiBjbGFzc05hbWU9XCJkaXZpZGVyXCI+PC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJkcm9wZG93bi1oZWFkZXJcIj5NeSBBY2NvdW50PC9saT5cbiAgICAgICAgICAgIDxsaT48YSBocmVmPVwiI1wiIG9uQ2xpY2s9e3RoaXMuX29uTG9nb3V0UHJlc3N9PlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJnbHlwaGljb24gZ2x5cGhpY29uLWxvZy1vdXRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT17c3R5bGVzLmljb259Pjwvc3Bhbj5cbiAgICAgICAgICAgICAgU2lnbiBPdXRcbiAgICAgICAgICAgIDwvYT48L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgICk7XG4gIH1cblxuICBfb25FZGl0UHJlc3MoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zb2xlLmxvZyhcIl9vbkVkaXRQcmVzc1wiKTtcbiAgfVxuXG4gIF9vbkxvZ291dFByZXNzKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgQWN0aW9ucy5sb2dvdXQoKTtcbiAgfVxuXG4gIF9vblVzZXJDaGFuZ2UodXNlcikge1xuICAgIHRoaXMuc2V0U3RhdGUoe3VzZXJ9KTtcbiAgfVxufVxuXG52YXIgc3R5bGVzID0ge1xuICBpY29uOiB7XG4gICAgcGFkZGluZ1JpZ2h0OiAnNXB4JyxcbiAgfSxcbn07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBBY3Rpb25zIGZyb20gJy4uL1V0aWxzL0FjdGlvbnMnO1xuaW1wb3J0IEN1cnJlbnRVc2VyIGZyb20gJy4uL1N0b3Jlcy9DdXJyZW50VXNlcic7XG5pbXBvcnQgTG9naW5Gb3JtIGZyb20gJy4vTG9naW5Gb3JtJztcbmltcG9ydCBVc2VyTWVudSBmcm9tICcuL1VzZXJNZW51JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlck5hdiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7fTtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICB1c2VyOiB7fSxcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHRoaXMuc3RvcExpc3RlbmluZyA9IEN1cnJlbnRVc2VyLmxpc3Rlbih0aGlzLl9vblVzZXJDaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgdGhpcy5zdG9wQXV0aExpc3RlbiA9IEFjdGlvbnMubm9hdXRoLmxpc3RlbigoKSA9PiB0aGlzLnNldFN0YXRlKHtsb2FkaW5nOiBmYWxzZX0pKTtcblxuICAgIHRoaXMuc2V0U3RhdGUoe3VzZXI6IEN1cnJlbnRVc2VyLmdldCgpfSk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnN0b3BMaXN0ZW5pbmcoKTtcbiAgICB0aGlzLnN0b3BBdXRoTGlzdGVuKCk7XG4gIH1cblxuICByZW5kZXJMb2dpbkZvcm0oKSB7XG4gICAgcmV0dXJuIDxMb2dpbkZvcm0gLz47XG4gIH1cblxuICByZW5kZXJVc2VyTWVudSgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFVzZXJNZW51IHVzZXI9e3RoaXMuc3RhdGUudXNlcn0gLz5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLmxvYWRpbmcpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAge3RoaXMuc3RhdGUudXNlci5pZCA/IHRoaXMucmVuZGVyVXNlck1lbnUoKSA6IHRoaXMucmVuZGVyTG9naW5Gb3JtKCl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgX29uVXNlckNoYW5nZSh1c2VyKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7dXNlciwgbG9hZGluZzogZmFsc2V9KTtcbiAgfVxuXG59XG5cbnZhciBzdHlsZXMgPSB7XG4gIGNvbnRhaW5lcjoge1xuICAgIGhlaWdodDogJzU2cHgnLFxuICB9LFxuICB1c2VybmFtZToge1xuICAgIG1hcmdpbjogMyxcbiAgICBsaW5lSGVpZ2h0OiAnNDRweCcsXG4gICAgY29sb3I6ICd3aGl0ZScsXG4gIH0sXG59OyIsImltcG9ydCBSZWZsdXggZnJvbSAncmVmbHV4JztcblxuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQge0NvbmZpZ30gZnJvbSAnLi4vVXRpbHMvQ29uc3RhbnRzJztcbmltcG9ydCBBcGlSZXF1ZXN0IGZyb20gJy4uL0FwaS9BcGlSZXF1ZXN0JztcbmltcG9ydCBBcGlVdGlscyBmcm9tICcuLi9BcGkvQXBpVXRpbHMnO1xuaW1wb3J0IEFjY2Vzc1Rva2VuIGZyb20gJy4uL0FwaS9BY2Nlc3NUb2tlbic7XG5cbmNvbnN0IGRlZmF1bHRVc2VyID0ge1xuICBpZDogbnVsbCxcbiAgdXNlcm5hbWU6IG51bGwsXG4gIHNlc3Npb25faWQ6IG51bGwsXG59O1xuXG4vLyBjb3B5IGRlZmF1bHRVc2VyIHRvIGN1cnJlbnRVc2VyXG5sZXQgY3VycmVudFVzZXIgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0VXNlcik7XG5cbmV4cG9ydCBkZWZhdWx0IFJlZmx1eC5jcmVhdGVTdG9yZSh7XG4gIC8vIHRoaXMgd2lsbCBzZXQgdXAgbGlzdGVuZXJzIHRvIGFsbCBwdWJsaXNoZXJzIGluIEFjdGlvbnMsIHVzaW5nIG9uS2V5bmFtZSAob3Iga2V5bmFtZSkgYXMgY2FsbGJhY2tzXG4gIGxpc3RlbmFibGVzOiBbQWN0aW9uc10sXG5cbiAgLy8gSW5pdGlhbCBzZXR1cFxuICBpbml0KCkge1xuICAgIC8vIG5vIG9wXG4gIH0sXG5cbiAgZ2V0KCkge1xuICAgIHJldHVybiBjdXJyZW50VXNlcjtcbiAgfSxcblxuICB1cGRhdGUodXNlclVwZGF0ZXMpIHtcbiAgICBjdXJyZW50VXNlciA9IE9iamVjdC5hc3NpZ24oe30sIHVzZXJVcGRhdGVzKTtcbiAgICB0aGlzLnRyaWdnZXIoY3VycmVudFVzZXIpO1xuICB9LFxuXG4gIC8vIFVzZXIgTG9naW46XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgb25Mb2dpbihjcmVkcykge1xuICAgIEFwaVJlcXVlc3QucG9zdCgnL2FjY291bnQvbG9naW4nKVxuICAgICAgLmRhdGEoY3JlZHMpXG4gICAgICAuc2V0QW5vbnltb3VzKHRydWUpXG4gICAgICAuc2VuZChyZXMgPT4ge1xuICAgICAgICBBY2Nlc3NUb2tlbi5zZXQocmVzLmRhdGEuc2Vzc2lvbl9pZClcbiAgICAgICAgICAudGhlbigoKSA9PiBBY3Rpb25zLmxvZ2luLmNvbXBsZXRlZChyZXMpKTtcbiAgICAgIH0sIEFjdGlvbnMubG9naW4uZmFpbGVkKTtcbiAgfSxcbiAgb25Mb2dpbkNvbXBsZXRlZChyZXNwb25zZSkge1xuICAgIGxldCB1c2VyID0gcmVzcG9uc2UuZGF0YTtcbiAgICB0aGlzLnVwZGF0ZSh1c2VyKTtcbiAgfSxcblxuICAvLyBVc2VyIExvZ291dDpcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBvbkxvZ291dCgpIHtcbiAgICBBcGlSZXF1ZXN0LnBvc3QoJy9hY2NvdW50L2xvZ291dCcpXG4gICAgICAuc2V0SGFuZGxlRXJyb3JzKGZhbHNlKVxuICAgICAgLnNldElnbm9yZU5ldHdvcmtFcnJvcih0cnVlKVxuICAgICAgLnNlbmQoQWN0aW9ucy5sb2dvdXQuY29tcGxldGVkLCBBY3Rpb25zLmxvZ291dC5mYWlsZWQpO1xuXG4gICAgLy8gcmVzZXQgY3VycmVudFVzZXIgdG8gZGVmYXVsdFxuICAgIHRoaXMudXBkYXRlKGRlZmF1bHRVc2VyKTtcbiAgfSxcbiAgb25Mb2dvdXRDb21wbGV0ZWQoKSB7XG4gICAgQWNjZXNzVG9rZW4uY2xlYXIoKTtcbiAgfSxcbiAgb25Mb2dvdXRGYWlsZWQoKSB7XG4gICAgQWNjZXNzVG9rZW4uY2xlYXIoKTtcbiAgfSxcblxuICAvLyBMb2FkIFVzZXI6XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgb25Mb2FkVXNlcigpIHtcbiAgICBBcGlSZXF1ZXN0LmdldCgnL2FjY291bnQnKVxuICAgICAgLnNlbmQoQWN0aW9ucy5sb2FkVXNlci5jb21wbGV0ZWQsIEFjdGlvbnMubG9hZFVzZXIuZmFpbGVkKTtcbiAgfSxcbiAgb25Mb2FkVXNlckNvbXBsZXRlZChyZXNwb25zZSkge1xuICAgIHRoaXMudXBkYXRlKHJlc3BvbnNlLmRhdGEpO1xuICB9LFxufSk7IiwiaW1wb3J0IFJlZmx1eCBmcm9tICdyZWZsdXgnO1xuaW1wb3J0IEFjY2Vzc1Rva2VuIGZyb20gJy4uL0FwaS9BY2Nlc3NUb2tlbic7XG5pbXBvcnQgQXBpUmVxdWVzdCBmcm9tICcuLi9BcGkvQXBpUmVxdWVzdCc7XG5cbi8vIEVhY2ggYWN0aW9uIGlzIGxpa2UgYW4gZXZlbnQgY2hhbm5lbCBmb3Igb25lIHNwZWNpZmljIGV2ZW50LiBBY3Rpb25zIGFyZSBjYWxsZWQgYnkgY29tcG9uZW50cy5cbi8vIFRoZSBzdG9yZSBpcyBsaXN0ZW5pbmcgdG8gYWxsIGFjdGlvbnMsIGFuZCB0aGUgY29tcG9uZW50cyBpbiB0dXJuIGFyZSBsaXN0ZW5pbmcgdG8gdGhlIHN0b3JlLlxuLy8gVGh1cyB0aGUgZmxvdyBpczogVXNlciBpbnRlcmFjdGlvbiAtPiBjb21wb25lbnQgY2FsbHMgYWN0aW9uIC0+IHN0b3JlIHJlYWN0cyBhbmQgdHJpZ2dlcnMgLT4gY29tcG9uZW50cyB1cGRhdGVcblxudmFyIEFjdGlvbnMgPSBSZWZsdXguY3JlYXRlQWN0aW9ucyhbXG4gIC8vIHVzZXIgYWN0aW9uc1xuICBcImF1dGhcIixcbiAgXCJ1bmF1dGhcIixcbiAgXCJub2F1dGhcIixcbiAge1wibG9naW5cIjoge2FzeW5jUmVzdWx0OiB0cnVlfX0sXG4gIHtcImxvZ291dFwiOiB7YXN5bmNSZXN1bHQ6IHRydWV9fSxcbiAge1wibG9hZFVzZXJcIjoge2FzeW5jUmVzdWx0OiB0cnVlfX0sXG5dKTtcblxuLyogVXNlciBBY3Rpb25zXG4gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5BY3Rpb25zLmF1dGgubGlzdGVuKCgpID0+IHtcbiAgQWNjZXNzVG9rZW4uZ2V0KHRydWUpXG4gICAgLnRoZW4oYWNjZXNzVG9rZW4gPT4gQWN0aW9ucy5sb2FkVXNlcihhY2Nlc3NUb2tlbikpXG4gICAgLmNhdGNoKCgpID0+IEFjdGlvbnMubm9hdXRoKCkpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEFjdGlvbnM7IiwidmFyIGtleU1pcnJvciA9IHJlcXVpcmUoJ2tleU1pcnJvcicpO1xuXG5jb25zdCBIT1NUX05BTUUgPSBcImNsZWZvb2RibG9nLmNvbVwiO1xuY29uc3QgRU5WID0gKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gSE9TVF9OQU1FKSA/ICdwcm9kdWN0aW9uJyA6ICdkZXYnO1xuXG52YXIgaXNQcm9kICAgICA9IHRydWUsXG4gICAgYXBpVmVyc2lvbiA9ICd2MScsXG4gICAgYXBpSG9zdCAgICA9ICdodHRwOi8vJytIT1NUX05BTUUrJy9hcGknLFxuICAgIHNpdGVSb290ICAgPSAnaHR0cDovLycrSE9TVF9OQU1FO1xuXG5zd2l0Y2ggKEVOVikge1xuICAgIGNhc2UgJ2Rldic6XG4gICAgICAgIGlzUHJvZCAgID0gZmFsc2U7XG4gICAgICAgIGFwaUhvc3QgID0gJ2h0dHA6Ly9kZXYuJytIT1NUX05BTUUrJy9hcGknO1xuICAgICAgICBzaXRlUm9vdCA9ICdodHRwOi8vZGV2LicrSE9TVF9OQU1FO1xuICAgICAgICBicmVhaztcbn1cblxuZXhwb3J0IHZhciBDb25maWcgPSB7XG4gIEVOVjogRU5WLFxuICBhcGlfcm9vdDogYXBpSG9zdCsnLycsXG4gIHNpdGVfcm9vdDogc2l0ZVJvb3QrJy8nLFxuXG4gIFN0b3JhZ2U6IGtleU1pcnJvcih7XG4gICAgQUNDRVNTX1RPS0VOOiBudWxsLFxuICB9KSxcbn07XG4iLCJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQgVXNlck5hdiBmcm9tICcuLi9Db21wb25lbnRzL1VzZXJOYXYnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbml0aWFsaXplIHtcblxuICBzdGF0aWMgZ2xvYmFscygpIHtcbiAgICAvLyBFeHBvc2UgZ2xvYmFscyBsaWtlIGpRdWVyeVxuICAgIHdpbmRvdy5qUXVlcnkgPSAkO1xuICB9XG5cbiAgc3RhdGljIGJvb3RzdHJhcCgpIHtcbiAgICByZXF1aXJlKCdib290c3RyYXAnKTtcbiAgfVxuXG4gIHN0YXRpYyBvblJlYWR5KCkge1xuICAgIC8vIENsaWNrIG9uIGJpZyBidXR0b246XG4gICAgbGV0IGJhQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bkNvbWluZ1Nvb24nKTtcbiAgICBpZiAoYmFCdXR0b24pIHtcbiAgICAgIGJhQnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbigpe1xuICAgICAgICBpZiAoZ2EpIGdhKCdzZW5kJywgJ2V2ZW50JywgJ2J1dHRvbnMnLCAnY2xpY2snLCAnc3RheSB0dW5lZCcpO1xuICAgICAgICBjb25zb2xlLmxvZygnc2VuZCcsICdldmVudCcsICdidXR0b25zJywgJ2NsaWNrJywgJ3N0YXkgdHVuZWQnKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBTaG93IHRoYXQgdXNlciBuYXY6XG4gICAgUmVhY3RET00ucmVuZGVyKFxuICAgICAgPFVzZXJOYXYgLz4sXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnVXNlck5hdicpXG4gICAgKTtcbiAgfVxuXG4gIHN0YXRpYyBhdXRoVXNlcigpIHtcbiAgICBBY3Rpb25zLmF1dGgoKTtcbiAgfVxuXG4gIHN0YXRpYyBvbkxvYWQoKSB7XG4gICAgSW5pdGlhbGl6ZS5nbG9iYWxzKCk7XG4gICAgSW5pdGlhbGl6ZS5ib290c3RyYXAoKTtcbiAgICBJbml0aWFsaXplLm9uUmVhZHkoKTtcbiAgICBJbml0aWFsaXplLmF1dGhVc2VyKCk7XG4gIH1cbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IFV0aWxzIGZyb20gJy4uL1V0aWxzL1V0aWxzJztcbmltcG9ydCBBZGRQYWdlRm9ybSBmcm9tICcuLi9Db21wb25lbnRzL0FkZFBhZ2VGb3JtJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm91dGVzIHtcblxuICBzdGF0aWMgaG9tZVJvdXRlID0gJ2hvbWUnO1xuXG4gIHN0YXRpYyBjdXJyZW50KHBhdGhuYW1lKSB7XG4gICAgdmFyIGJhc2VuYW1lID0gcGF0aC5iYXNlbmFtZShwYXRobmFtZSkgfHwgUm91dGVzLmhvbWVSb3V0ZTtcbiAgICB2YXIgY2FtZWxOYW1lID0gYmFzZW5hbWUucmVwbGFjZSgvLShbYS16XSkvZywgZnVuY3Rpb24gKGcpIHsgcmV0dXJuIGdbMV0udG9VcHBlckNhc2UoKTsgfSk7XG4gICAgaWYgKHR5cGVvZiBSb3V0ZXNbY2FtZWxOYW1lXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgUm91dGVzW2NhbWVsTmFtZV0oKTtcbiAgICB9XG4gIH1cblxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQ3VzdG9tIFJvdXRlczpcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgc3RhdGljIGhvbWUoKSB7XG4gICAgY29uc29sZS5sb2coJ0hvbWUgcm91dGUnKTtcbiAgfVxuXG4gIHN0YXRpYyBhZGRQYWdlKCkge1xuICAgIFJlYWN0RE9NLnJlbmRlcihcbiAgICAgIDxBZGRQYWdlRm9ybSAvPixcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdBZGRQYWdlRm9ybScpXG4gICAgKTtcbiAgfVxuXG59XG4iLCJpbXBvcnQgeyBDb25maWcsIH0gZnJvbSAnLi9Db25zdGFudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVdGlscyB7XG5cbiAgc3RhdGljIGFsZXJ0RXJyb3IobWVzc2FnZSkge1xuICAgIGFsZXJ0KG1lc3NhZ2UpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBKU09OIGRhdGEgZnJvbSBhbm90aGVyIHNlcnZlci4gU3VwcG9ydGVkIGJhY2sgdG8gSUU2LlxuICAgKiBjcmVkaXQ6IGh0dHA6Ly9nb21ha2V0aGluZ3MuY29tL2RpdGNoaW5nLWpxdWVyeVxuICAgKiBAcGFyYW0gdXJsXG4gICAqIEBwYXJhbSBjYWxsYmFja1xuICAgKi9cbiAgc3RhdGljIGdldEpTT05QKHVybCwgY2FsbGJhY2spIHtcblxuICAgIC8vIENyZWF0ZSBzY3JpcHQgd2l0aCB1cmwgYW5kIGNhbGxiYWNrIChpZiBzcGVjaWZpZWQpXG4gICAgdmFyIHJlZiA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggJ3NjcmlwdCcgKVsgMCBdO1xuICAgIHZhciBzY3JpcHQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggJ3NjcmlwdCcgKTtcbiAgICBzY3JpcHQuc3JjID0gdXJsICsgKHVybC5pbmRleE9mKCAnPycgKSArIDEgPyAnJicgOiAnPycpICsgJ2NhbGxiYWNrPScgKyBjYWxsYmFjaztcblxuICAgIC8vIEluc2VydCBzY3JpcHQgdGFnIGludG8gdGhlIERPTSAoYXBwZW5kIHRvIDxoZWFkPilcbiAgICByZWYucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIHNjcmlwdCwgcmVmICk7XG5cbiAgICAvLyBBZnRlciB0aGUgc2NyaXB0IGlzIGxvYWRlZCAoYW5kIGV4ZWN1dGVkKSwgcmVtb3ZlIGl0XG4gICAgc2NyaXB0Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgfTtcblxuICB9XG5cbiAgLyoqXG4gICAqIFF1b3RlcyB0aGUgZ2l2ZW4gc3RyaW5nIHNvIGl0IGNhbiBzYWZlbHkgYmUgdXNlZCBpbiBhIFJlZ3VsYXIgRXhwcmVzc2lvbi5cbiAgICogQHBhcmFtIHJlZ2V4XG4gICAqIEByZXR1cm5zIHsqfHN0cmluZ3x2b2lkfFhNTH1cbiAgICovXG4gIHN0YXRpYyBxdW90ZVJlZ2V4KHJlZ2V4KSB7XG4gICAgICByZXR1cm4gcmVnZXgucmVwbGFjZSgvKFsoKVt7KisuJF5cXFxcfD9dKS9nLCAnXFxcXCQxJyk7XG4gIH1cblxuICAvKipcbiAgICogVHJpbSB0aGUgZ2l2ZW4gY2hhcmFjdGVyIGZyb20gYm90aCBlbmRzIG9mIHRoZSBnaXZlbiBzdHJpbmcuXG4gICAqIEBwYXJhbSBzdHJcbiAgICogQHBhcmFtIGNoclxuICAgKiBAcmV0dXJucyB7KnxzdHJpbmd8dm9pZHxYTUx9XG4gICAqL1xuICBzdGF0aWMgdHJpbUNoYXIoc3RyLCBjaHIpIHtcbiAgICAgIGNociA9IFV0aWxzLnF1b3RlUmVnZXgoY2hyKTtcbiAgICAgIHJldHVybiBzdHIucmVwbGFjZShuZXcgUmVnRXhwKCdeJyArIGNociArICcrfCcgKyBjaHIgKyAnKyQnLCAnZycpLCBcIlwiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0IGFuIG9iamVjdCB0byBhIHF1ZXJ5IHN0cmluZy5cbiAgICogY3JlZGl0OiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNzE0ODk5XG4gICAqIEBwYXJhbSBvYmpcbiAgICogQHBhcmFtIHByZWZpeFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgc3RhdGljIHRvUXVlcnlTdHJpbmcob2JqLCBwcmVmaXgpIHtcbiAgICB2YXIgc3RyID0gW107XG4gICAgZm9yICh2YXIgcCBpbiBvYmopIHtcbiAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkocCkpIHtcbiAgICAgICAgdmFyIGsgPSBwcmVmaXggPyBwcmVmaXggKyBcIltcIiArIHAgKyBcIl1cIiA6IHAsIHYgPSBvYmpbcF07XG4gICAgICAgIHN0ci5wdXNoKHR5cGVvZiB2ID09IFwib2JqZWN0XCIgP1xuICAgICAgICAgIFV0aWxzLnRvUXVlcnlTdHJpbmcodiwgaykgOiBlbmNvZGVVUklDb21wb25lbnQoaykgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCh2KSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzdHIuam9pbihcIiZcIik7XG4gIH1cblxuICAvKipcbiAgICogSXMgb2JqZWN0IGVtcHR5P1xuICAgKiBAcGFyYW0gIG9ialxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgc3RhdGljIGlzRW1wdHkob2JqKSB7XG4gICAgaWYgKG9iaiA9PSBudWxsKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAob2JqLmxlbmd0aCA+IDApIHJldHVybiBmYWxzZTtcbiAgICBpZiAob2JqLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHRydWU7XG4gICAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikubGVuZ3RoID4gMCkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIENsZWFuIHN0cmluZyBmb3IgdXNlIGluIFVSTFxuICAgKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICAgKiBAcmV0dXJuIHtzdHJpbmd9IHVyaVxuICAgKiBDcmVkaXQ6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE0OTYyMzY5LzU3ODAzODVcbiAgICovXG4gIHN0YXRpYyBjbGVhbkZvclVybChzdHIpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoLyheXFwtK3xbXmEtekEtWjAtOVxcL198IC1dK3xcXC0rJCkvZywgJycpXG4gICAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgIC5yZXBsYWNlKC9bXFwvX3wgLV0rL2csICctJyk7XG4gIH1cbn1cbiIsIi8vIG1haW4uanNcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBJbml0aWFsaXplIGZyb20gJy4vVXRpbHMvSW5pdGlhbGl6ZSc7XG5pbXBvcnQgUm91dGVzIGZyb20gJy4vVXRpbHMvUm91dGVzJztcblxuLy8gUnVuIHRoYXQgaW5pdDpcbkluaXRpYWxpemUub25Mb2FkKCk7XG5cbi8vIEluaXRpYWxpemUgY3VycmVudCByb3V0ZVxuUm91dGVzLmN1cnJlbnQod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKTsiXX0=
