(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))

},{"_process":2}],2:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],3:[function(require,module,exports){
/**
 * humane.js
 * Humanized Messages for Notifications
 * @author Marc Harter (@wavded)
 * @example
 *   humane.log('hello world');
 * @license MIT
 * See more usage examples at: http://wavded.github.com/humane-js/
 */

;!function (name, context, definition) {
   if (typeof module !== 'undefined') module.exports = definition(name, context)
   else if (typeof define === 'function' && typeof define.amd  === 'object') define(definition)
   else context[name] = definition(name, context)
}('humane', this, function (name, context) {
   var win = window
   var doc = document

   var ENV = {
      on: function (el, type, cb) {
         'addEventListener' in win ? el.addEventListener(type,cb,false) : el.attachEvent('on'+type,cb)
      },
      off: function (el, type, cb) {
         'removeEventListener' in win ? el.removeEventListener(type,cb,false) : el.detachEvent('on'+type,cb)
      },
      bind: function (fn, ctx) {
         return function () { fn.apply(ctx,arguments) }
      },
      isArray: Array.isArray || function (obj) { return Object.prototype.toString.call(obj) === '[object Array]' },
      config: function (preferred, fallback) {
         return preferred != null ? preferred : fallback
      },
      transSupport: false,
      useFilter: /msie [678]/i.test(navigator.userAgent), // sniff, sniff
      _checkTransition: function () {
         var el = doc.createElement('div')
         var vendors = { webkit: 'webkit', Moz: '', O: 'o', ms: 'MS' }

         for (var vendor in vendors)
            if (vendor + 'Transition' in el.style) {
               this.vendorPrefix = vendors[vendor]
               this.transSupport = true
            }
      }
   }
   ENV._checkTransition()

   var Humane = function (o) {
      o || (o = {})
      this.queue = []
      this.baseCls = o.baseCls || 'humane'
      this.addnCls = o.addnCls || ''
      this.timeout = 'timeout' in o ? o.timeout : 2500
      this.waitForMove = o.waitForMove || false
      this.clickToClose = o.clickToClose || false
      this.timeoutAfterMove = o.timeoutAfterMove || false
      this.container = o.container

      try { this._setupEl() } // attempt to setup elements
      catch (e) {
        ENV.on(win,'load',ENV.bind(this._setupEl, this)) // dom wasn't ready, wait till ready
      }
   }

   Humane.prototype = {
      constructor: Humane,
      _setupEl: function () {
         var el = doc.createElement('div')
         el.style.display = 'none'
         if (!this.container){
           if(doc.body) this.container = doc.body;
           else throw 'document.body is null'
         }
         this.container.appendChild(el)
         this.el = el
         this.removeEvent = ENV.bind(function(){
            var timeoutAfterMove = ENV.config(this.currentMsg.timeoutAfterMove,this.timeoutAfterMove)
            if (!timeoutAfterMove){
               this.remove()
            } else {
               setTimeout(ENV.bind(this.remove,this),timeoutAfterMove)
            }
         },this)

         this.transEvent = ENV.bind(this._afterAnimation,this)
         this._run()
      },
      _afterTimeout: function () {
         if (!ENV.config(this.currentMsg.waitForMove,this.waitForMove)) this.remove()

         else if (!this.removeEventsSet) {
            ENV.on(doc.body,'mousemove',this.removeEvent)
            ENV.on(doc.body,'click',this.removeEvent)
            ENV.on(doc.body,'keypress',this.removeEvent)
            ENV.on(doc.body,'touchstart',this.removeEvent)
            this.removeEventsSet = true
         }
      },
      _run: function () {
         if (this._animating || !this.queue.length || !this.el) return

         this._animating = true
         if (this.currentTimer) {
            clearTimeout(this.currentTimer)
            this.currentTimer = null
         }

         var msg = this.queue.shift()
         var clickToClose = ENV.config(msg.clickToClose,this.clickToClose)

         if (clickToClose) {
            ENV.on(this.el,'click',this.removeEvent)
            ENV.on(this.el,'touchstart',this.removeEvent)
         }

         var timeout = ENV.config(msg.timeout,this.timeout)

         if (timeout > 0)
            this.currentTimer = setTimeout(ENV.bind(this._afterTimeout,this), timeout)

         if (ENV.isArray(msg.html)) msg.html = '<ul><li>'+msg.html.join('<li>')+'</ul>'

         this.el.innerHTML = msg.html
         this.currentMsg = msg
         this.el.className = this.baseCls
         if (ENV.transSupport) {
            this.el.style.display = 'block'
            setTimeout(ENV.bind(this._showMsg,this),50)
         } else {
            this._showMsg()
         }

      },
      _setOpacity: function (opacity) {
         if (ENV.useFilter){
            try{
               this.el.filters.item('DXImageTransform.Microsoft.Alpha').Opacity = opacity*100
            } catch(err){}
         } else {
            this.el.style.opacity = String(opacity)
         }
      },
      _showMsg: function () {
         var addnCls = ENV.config(this.currentMsg.addnCls,this.addnCls)
         if (ENV.transSupport) {
            this.el.className = this.baseCls+' '+addnCls+' '+this.baseCls+'-animate'
         }
         else {
            var opacity = 0
            this.el.className = this.baseCls+' '+addnCls+' '+this.baseCls+'-js-animate'
            this._setOpacity(0) // reset value so hover states work
            this.el.style.display = 'block'

            var self = this
            var interval = setInterval(function(){
               if (opacity < 1) {
                  opacity += 0.1
                  if (opacity > 1) opacity = 1
                  self._setOpacity(opacity)
               }
               else clearInterval(interval)
            }, 30)
         }
      },
      _hideMsg: function () {
         var addnCls = ENV.config(this.currentMsg.addnCls,this.addnCls)
         if (ENV.transSupport) {
            this.el.className = this.baseCls+' '+addnCls
            ENV.on(this.el,ENV.vendorPrefix ? ENV.vendorPrefix+'TransitionEnd' : 'transitionend',this.transEvent)
         }
         else {
            var opacity = 1
            var self = this
            var interval = setInterval(function(){
               if(opacity > 0) {
                  opacity -= 0.1
                  if (opacity < 0) opacity = 0
                  self._setOpacity(opacity);
               }
               else {
                  self.el.className = self.baseCls+' '+addnCls
                  clearInterval(interval)
                  self._afterAnimation()
               }
            }, 30)
         }
      },
      _afterAnimation: function () {
         if (ENV.transSupport) ENV.off(this.el,ENV.vendorPrefix ? ENV.vendorPrefix+'TransitionEnd' : 'transitionend',this.transEvent)

         if (this.currentMsg.cb) this.currentMsg.cb()
         this.el.style.display = 'none'

         this._animating = false
         this._run()
      },
      remove: function (e) {
         var cb = typeof e == 'function' ? e : null

         ENV.off(doc.body,'mousemove',this.removeEvent)
         ENV.off(doc.body,'click',this.removeEvent)
         ENV.off(doc.body,'keypress',this.removeEvent)
         ENV.off(doc.body,'touchstart',this.removeEvent)
         ENV.off(this.el,'click',this.removeEvent)
         ENV.off(this.el,'touchstart',this.removeEvent)
         this.removeEventsSet = false

         if (cb && this.currentMsg) this.currentMsg.cb = cb
         if (this._animating) this._hideMsg()
         else if (cb) cb()
      },
      log: function (html, o, cb, defaults) {
         var msg = {}
         if (defaults)
           for (var opt in defaults)
               msg[opt] = defaults[opt]

         if (typeof o == 'function') cb = o
         else if (o)
            for (var opt in o) msg[opt] = o[opt]

         msg.html = html
         if (cb) msg.cb = cb
         this.queue.push(msg)
         this._run()
         return this
      },
      spawn: function (defaults) {
         var self = this
         return function (html, o, cb) {
            self.log.call(self,html,o,cb,defaults)
            return self
         }
      },
      create: function (o) { return new Humane(o) }
   }
   return new Humane()
});

},{}],4:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

"use strict";

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  if (!(obj instanceof Object && !Array.isArray(obj))) {
    throw new Error('keyMirror(...): Argument must be an object.');
  }
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{}],5:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _ApiRequest=require('./ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var AccessToken=function(){function AccessToken(){_classCallCheck(this,AccessToken);}_createClass(AccessToken,null,[{key:'get',value:function get(verify){if(typeof verify==='undefined'){verify=false;}return new Promise(function(resolve,reject){if(AccessToken._accessToken){return resolve(AccessToken._accessToken);}var access_token=localStorage.getItem(_Constants.Config.Storage.ACCESS_TOKEN);if(access_token===null){AccessToken.clear();return reject(new Error({code:403,message:'Unauthorized'}));}AccessToken.set(access_token,true).then(resolve);});}},{key:'set',value:function set(access_token,dontUpdateStorage){AccessToken._accessToken=access_token;return new Promise(function(resolve,reject){if(!dontUpdateStorage){localStorage.setItem(_Constants.Config.Storage.ACCESS_TOKEN,access_token);}resolve(access_token);});}},{key:'clear',value:function clear(){AccessToken._accessToken=null;return localStorage.removeItem(_Constants.Config.Storage.ACCESS_TOKEN);}}]);return AccessToken;}();exports.default=AccessToken;

},{"../Utils/Constants":14,"./ApiRequest":6}],6:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiUtils=require('./ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('./AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _superagent=require('superagent');var _superagent2=_interopRequireDefault(_superagent);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var ApiRequest=function(){_createClass(ApiRequest,null,[{key:'updateNetworkIndicator',value:function updateNetworkIndicator(){var dir=arguments.length<=0||arguments[0]===undefined?'-':arguments[0];if(dir==='+'){ApiRequest.activeRequests++;}else {ApiRequest.activeRequests--;}if(ApiRequest.activeRequests<=0){ApiRequest.activeRequests=0;}else {}}},{key:'create',value:function create(method,endpoint){return new this(method,endpoint);}},{key:'createAnon',value:function createAnon(method,endpoint){var request=new this(method,endpoint);request.setAnonymous(true);return request;}},{key:'get',value:function get(endpoint){return new this('get',endpoint);}},{key:'post',value:function post(endpoint){return new this('post',endpoint);}},{key:'put',value:function put(endpoint){return new this('put',endpoint);}},{key:'delete',value:function _delete(endpoint){return new this('delete',endpoint);}}]);function ApiRequest(method,endpoint){_classCallCheck(this,ApiRequest);if(endpoint===undefined){endpoint=method;method='get';}else {method=method.toLowerCase();}if(endpoint.indexOf('?')!==-1){throw new Error('You must set query string data via the `query` function');}this.isAnonymous=false;this.handleErrors=true;this.ignoreNetworkError=false;this.url=_ApiUtils2.default.buildUrl(endpoint);this._setupRequest(method);}_createClass(ApiRequest,[{key:'setAnonymous',value:function setAnonymous(isAnonymous){this.isAnonymous=isAnonymous;return this;}},{key:'setHandleErrors',value:function setHandleErrors(handleErrors){this.handleErrors=handleErrors;return this;}},{key:'setIgnoreNetworkError',value:function setIgnoreNetworkError(ignoreNetworkError){this.ignoreNetworkError=ignoreNetworkError;return this;}},{key:'configure',value:function configure(callback){callback(this.request);return this;}},{key:'send',value:function send(callback,errCallback){var _this=this;if(this.isAnonymous){return this._sendIt(callback,errCallback);}_AccessToken2.default.get().then(function(token){_this.query({token:token});_this._sendIt(callback,errCallback);});}},{key:'data',value:function data(_data){this.requestBody=JSON.stringify(_data);return this;}},{key:'query',value:function query(data){this.queryData=Object.assign(this.queryData,data);return this;}},{key:'header',value:function header(_header,value){this.requestHeaders[_header]=value;return this;}},{key:'headers',value:function headers(_headers){this.requestHeaders=Object.assign(this.requestHeaders,_headers);return this;}},{key:'_setupRequest',value:function _setupRequest(method){this.requestMethod=!method?'get':method;this.requestHeaders={'Accept':'application/json','Content-Type':'application/json'};this.queryData={};this.requestBody={};this.request=null;}},{key:'_sendIt',value:function _sendIt(callback,errCallback){var _this2=this;ApiRequest.updateNetworkIndicator('+');this.request=_superagent2.default[this.requestMethod](this.url);if(!_Utils2.default.isEmpty(this.queryData)){this.request.query(this.queryData);}if(!_Utils2.default.isEmpty(this.requestHeaders)){this.request.set(this.requestHeaders);}this.request.send(this.requestBody).end(function(err,res){ApiRequest.updateNetworkIndicator();if(res.ok){callback(res.body);}else if(res.unauthorized){_AccessToken2.default.clear();_Actions2.default.noauth();}else {if(_this2.handleErrors){_ApiUtils2.default.handleError(res.body.error);}if(errCallback)errCallback(res.body.error);}});}}]);return ApiRequest;}();ApiRequest.activeRequests=0;exports.default=ApiRequest;

},{"../Utils/Actions":13,"../Utils/Utils":17,"./AccessToken":5,"./ApiUtils":7,"superagent":"superagent"}],7:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var DEFAULT_ERROR='There was a problem with your request';var ApiUtils=function(){function ApiUtils(){_classCallCheck(this,ApiUtils);}_createClass(ApiUtils,null,[{key:'handleError',value:function handleError(err){console.warn(err);_Utils2.default.showError(err.message||DEFAULT_ERROR);}},{key:'handleNetworkError',value:function handleNetworkError(err){console.warn(err);}},{key:'buildUrl',value:function buildUrl(endpoint){endpoint=_Utils2.default.trimChar(endpoint,'/');if(endpoint.indexOf(_Constants.Config.api_root)===-1){endpoint=_Constants.Config.api_root+endpoint;}return endpoint;}}]);return ApiUtils;}();exports.default=ApiUtils;

},{"../Utils/Constants":14,"../Utils/Utils":17}],8:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LoginForm=function(_React$Component){_inherits(LoginForm,_React$Component);function LoginForm(props){_classCallCheck(this,LoginForm);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(LoginForm).call(this,props));_this.state={};_this.onSubmit=_this.onSubmit.bind(_this);return _this;}_createClass(LoginForm,[{key:'render',value:function render(){return _react2.default.createElement('form',{className:'navbar-form navbar-right',role:'form',onSubmit:this.onSubmit},_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'username',type:'text',placeholder:'username',className:'form-control'})),_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'password',type:'password',placeholder:'password',className:'form-control'})),_react2.default.createElement('button',{type:'submit',className:'btn btn-default'},'Sign in'));}},{key:'onSubmit',value:function onSubmit(e){e.preventDefault();var data={username:this.refs.username.value,password:this.refs.password.value};_Actions2.default.login(data);}}]);return LoginForm;}(_react2.default.Component);LoginForm.propTypes={};LoginForm.defaultProps={};exports.default=LoginForm;var styles={formField:{margin:3}};

},{"../Api/ApiRequest":6,"../Utils/Actions":13,"react":"react"}],9:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _dropzone=require('dropzone');var _dropzone2=_interopRequireDefault(_dropzone);var _Constants=require('../Utils/Constants');var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _ApiUtils=require('../Api/ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SRDropzone=function(_React$Component){_inherits(SRDropzone,_React$Component);function SRDropzone(props){_classCallCheck(this,SRDropzone);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(SRDropzone).call(this,props));_this.dropzone=null;_this.state={};return _this;}_createClass(SRDropzone,[{key:'componentDidMount',value:function componentDidMount(){var _this2=this;_AccessToken2.default.get().then(function(token){var dzOptions={url:_ApiUtils2.default.buildUrl('/upload-file?token='+token),dictDefaultMessage:"Dragon Drop Images or Click to Upload",init:function init(){this.on("success",function(file,response){console.log(file,response);});this.on("addedfile",function(file){var dzName=file.previewElement.querySelector('[data-dz-name]');dzName.innerHTML=_Constants.Config.uploads_dir+file.name;});}};_this2.dropzone=new _dropzone2.default(_this2.refs.dropzone,dzOptions);});}},{key:'render',value:function render(){return _react2.default.createElement('div',{ref:'dropzone',style:this.props.style,className:'dropzone'},this.props.children);}}]);return SRDropzone;}(_react2.default.Component);SRDropzone.propTypes={style:_react2.default.PropTypes.object,activeStyle:_react2.default.PropTypes.object,multiple:_react2.default.PropTypes.bool};SRDropzone.defaultProps={style:{},activeStyle:{},multiple:true};exports.default=SRDropzone;

},{"../Api/AccessToken":5,"../Api/ApiUtils":7,"../Utils/Constants":14,"../Utils/Utils":17,"dropzone":"dropzone","react":"react"}],10:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserMenu=function(_React$Component){_inherits(UserMenu,_React$Component);function UserMenu(props){_classCallCheck(this,UserMenu);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserMenu).call(this,props));_this.state={user:_this.props.user};return _this;}_createClass(UserMenu,[{key:'componentWillMount',value:function componentWillMount(){this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();}},{key:'render',value:function render(){return _react2.default.createElement('ul',{className:'nav navbar-nav navbar-right'},_react2.default.createElement('li',{className:'dropdown'},_react2.default.createElement('a',{href:'#',className:'dropdown-toggle','data-toggle':'dropdown',role:'button','aria-haspopup':'true','aria-expanded':'false'},this.state.user.username,_react2.default.createElement('span',{className:'caret'})),_react2.default.createElement('ul',{className:'dropdown-menu'},_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'/admin/page-editor'},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign','aria-hidden':'true',style:styles.icon}),'Add Page')),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'/admin/page-inventory'},_react2.default.createElement('span',{className:'glyphicon glyphicon-edit','aria-hidden':'true',style:styles.icon}),'Edit Something')),_react2.default.createElement('li',{role:'separator',className:'divider'}),_react2.default.createElement('li',{className:'dropdown-header'},'My Account'),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'#',onClick:this._onLogoutPress},_react2.default.createElement('span',{className:'glyphicon glyphicon-log-out','aria-hidden':'true',style:styles.icon}),'Sign Out')))));}},{key:'_onLogoutPress',value:function _onLogoutPress(e){e.preventDefault();_Actions2.default.logout();}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user});}}]);return UserMenu;}(_react2.default.Component);UserMenu.propTypes={user:_react2.default.PropTypes.object};UserMenu.defaultProps={user:{}};exports.default=UserMenu;var styles={icon:{paddingRight:'5px'}};

},{"../Stores/CurrentUser":12,"../Utils/Actions":13,"react":"react"}],11:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);var _LoginForm=require('./LoginForm');var _LoginForm2=_interopRequireDefault(_LoginForm);var _UserMenu=require('./UserMenu');var _UserMenu2=_interopRequireDefault(_UserMenu);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserNav=function(_React$Component){_inherits(UserNav,_React$Component);function UserNav(props){_classCallCheck(this,UserNav);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserNav).call(this,props));_this.state={loading:true,user:{}};return _this;}_createClass(UserNav,[{key:'componentWillMount',value:function componentWillMount(){var _this2=this;this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.stopAuthListen=_Actions2.default.noauth.listen(function(){return _this2.setState({loading:false});});this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();this.stopAuthListen();}},{key:'renderLoginForm',value:function renderLoginForm(){return _react2.default.createElement(_LoginForm2.default,null);}},{key:'renderUserMenu',value:function renderUserMenu(){return _react2.default.createElement(_UserMenu2.default,{user:this.state.user});}},{key:'render',value:function render(){if(this.state.loading){return null;}return _react2.default.createElement('div',{style:styles.container},this.state.user.id?this.renderUserMenu():this.renderLoginForm());}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user,loading:false});}}]);return UserNav;}(_react2.default.Component);UserNav.propTypes={};UserNav.defaultProps={};exports.default=UserNav;var styles={container:{height:'56px'},username:{margin:3,lineHeight:'44px',color:'white'}};

},{"../Stores/CurrentUser":12,"../Utils/Actions":13,"./LoginForm":8,"./UserMenu":10,"react":"react"}],12:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _Constants=require('../Utils/Constants');var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _ApiUtils=require('../Api/ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var defaultUser={id:null,username:null,session_id:null};var currentUser=Object.assign({},defaultUser);exports.default=_reflux2.default.createStore({listenables:[_Actions2.default],init:function init(){},get:function get(){return currentUser;},update:function update(userUpdates){currentUser=Object.assign({},userUpdates);this.trigger(currentUser);},onLogin:function onLogin(creds){_ApiRequest2.default.post('/account/login').data(creds).setAnonymous(true).send(function(res){_AccessToken2.default.set(res.data.session_id).then(function(){return _Actions2.default.login.completed(res);});},_Actions2.default.login.failed);},onLoginCompleted:function onLoginCompleted(response){var user=response.data;this.update(user);},onLogout:function onLogout(){_ApiRequest2.default.post('/account/logout').setHandleErrors(false).setIgnoreNetworkError(true).send(_Actions2.default.logout.completed,_Actions2.default.logout.failed);this.update(defaultUser);},onLogoutCompleted:function onLogoutCompleted(){_AccessToken2.default.clear();},onLogoutFailed:function onLogoutFailed(){_AccessToken2.default.clear();},onLoadUser:function onLoadUser(){_ApiRequest2.default.get('/account').send(_Actions2.default.loadUser.completed,_Actions2.default.loadUser.failed);},onLoadUserCompleted:function onLoadUserCompleted(response){this.update(response.data);}});

},{"../Api/AccessToken":5,"../Api/ApiRequest":6,"../Api/ApiUtils":7,"../Utils/Actions":13,"../Utils/Constants":14,"reflux":"reflux"}],13:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var Actions=_reflux2.default.createActions(["auth","unauth","noauth",{"login":{asyncResult:true}},{"logout":{asyncResult:true}},{"loadUser":{asyncResult:true}}]);Actions.auth.listen(function(){_AccessToken2.default.get(true).then(function(accessToken){return Actions.loadUser(accessToken);}).catch(function(){return Actions.noauth();});});exports.default=Actions;

},{"../Api/AccessToken":5,"../Api/ApiRequest":6,"reflux":"reflux"}],14:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var keyMirror=require('keyMirror');var HOST_NAME="clefoodblog.com";var ENV=window.location.hostname===HOST_NAME?'production':'dev';var isProd=true,apiVersion='v1',apiHost='http://'+HOST_NAME+'/api',siteRoot='http://'+HOST_NAME;switch(ENV){case 'dev':isProd=false;apiHost='http://dev.'+HOST_NAME+'/api';siteRoot='http://dev.'+HOST_NAME;break;}var Config=exports.Config={ENV:ENV,api_root:apiHost+'/',site_root:siteRoot+'/',uploads_dir:siteRoot+'/uploads/',Storage:keyMirror({ACCESS_TOKEN:null})};

},{"keyMirror":4}],15:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _jquery=require('jquery');var _jquery2=_interopRequireDefault(_jquery);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _UserNav=require('../Components/UserNav');var _UserNav2=_interopRequireDefault(_UserNav);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Initialize=function(){function Initialize(){_classCallCheck(this,Initialize);}_createClass(Initialize,null,[{key:'globals',value:function globals(){window.jQuery=_jquery2.default;}},{key:'bootstrap',value:function bootstrap(){require('bootstrap');}},{key:'onReady',value:function onReady(){var baButton=document.getElementById('btnComingSoon');if(baButton){baButton.onclick=function(){if(ga)ga('send','event','buttons','click','stay tuned');console.log('send','event','buttons','click','stay tuned');return false;};}_reactDom2.default.render(_react2.default.createElement(_UserNav2.default,null),document.getElementById('UserNav'));}},{key:'authUser',value:function authUser(){_Actions2.default.auth();}},{key:'onLoad',value:function onLoad(){Initialize.globals();Initialize.bootstrap();Initialize.onReady();Initialize.authUser();}}]);return Initialize;}();exports.default=Initialize;

},{"../Components/UserNav":11,"../Utils/Actions":13,"bootstrap":"bootstrap","jquery":"jquery","react":"react","react-dom":"react-dom"}],16:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _path=require('path');var _path2=_interopRequireDefault(_path);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _PageEditor=require('../Views/PageEditor');var _PageEditor2=_interopRequireDefault(_PageEditor);var _PageInventory=require('../Views/PageInventory');var _PageInventory2=_interopRequireDefault(_PageInventory);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Routes=function(){function Routes(){_classCallCheck(this,Routes);}_createClass(Routes,null,[{key:'current',value:function current(pathname){var basename=_path2.default.basename(pathname)||Routes.homeRoute;var camelName=basename.replace(/-([a-z])/g,function(g){return g[1].toUpperCase();});if(typeof Routes[camelName]==='function'){Routes[camelName]();}}},{key:'home',value:function home(){console.log('Home route');}},{key:'pageEditor',value:function pageEditor(){_reactDom2.default.render(_react2.default.createElement(_PageEditor2.default,null),document.getElementById('PageEditor'));}},{key:'pageInventory',value:function pageInventory(){_reactDom2.default.render(_react2.default.createElement(_PageInventory2.default,null),document.getElementById('PageInventory'));}}]);return Routes;}();Routes.homeRoute='home';exports.default=Routes;

},{"../Utils/Utils":17,"../Views/PageEditor":18,"../Views/PageInventory":19,"path":1,"react":"react","react-dom":"react-dom"}],17:[function(require,module,exports){
'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./Constants');var _humaneJs=require('humane-js');var _humaneJs2=_interopRequireDefault(_humaneJs);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Utils=function(){function Utils(){_classCallCheck(this,Utils);}_createClass(Utils,null,[{key:'getJSONP',value:function getJSONP(url,callback){var ref=window.document.getElementsByTagName('script')[0];var script=window.document.createElement('script');script.src=url+(url.indexOf('?')+1?'&':'?')+'callback='+callback;ref.parentNode.insertBefore(script,ref);script.onload=function(){this.remove();};}},{key:'quoteRegex',value:function quoteRegex(regex){return regex.replace(/([()[{*+.$^\\|?])/g,'\\$1');}},{key:'trimChar',value:function trimChar(str,chr){chr=Utils.quoteRegex(chr);return str.replace(new RegExp('^'+chr+'+|'+chr+'+$','g'),"");}},{key:'toQueryString',value:function toQueryString(obj,prefix){var str=[];for(var p in obj){if(obj.hasOwnProperty(p)){var k=prefix?prefix+"["+p+"]":p,v=obj[p];str.push((typeof v==='undefined'?'undefined':_typeof(v))=="object"?Utils.toQueryString(v,k):encodeURIComponent(k)+"="+encodeURIComponent(v));}}return str.join("&");}},{key:'isEmpty',value:function isEmpty(obj){if(obj==null)return true;if(obj.length>0)return false;if(obj.length===0)return true;if(Object.getOwnPropertyNames(obj).length>0)return false;return true;}},{key:'cleanForUrl',value:function cleanForUrl(str){return str.replace(/(^\-+|[^a-zA-Z0-9\/_| -]+|\-+$)/g,'').toLowerCase().replace(/[\/_| -]+/g,'-');}}]);return Utils;}();Utils.showMessage=_humaneJs2.default.spawn({addnCls:'bg-info text-info',waitForMove:true});Utils.showSuccess=_humaneJs2.default.spawn({addnCls:'bg-success text-success',waitForMove:true});Utils.showError=_humaneJs2.default.spawn({addnCls:'bg-danger text-danger',timeout:5000,clickToClose:true,waitForMove:true});exports.default=Utils;

},{"./Constants":14,"humane-js":3}],18:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _moment=require('moment');var _moment2=_interopRequireDefault(_moment);var _reactMediumEditor=require('react-medium-editor');var _reactMediumEditor2=_interopRequireDefault(_reactMediumEditor);var _reactBootstrapDatetimepicker=require('react-bootstrap-datetimepicker');var _reactBootstrapDatetimepicker2=_interopRequireDefault(_reactBootstrapDatetimepicker);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);var _SRDropzone=require('../Components/SRDropzone');var _SRDropzone2=_interopRequireDefault(_SRDropzone);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PageEditor=function(_React$Component){_inherits(PageEditor,_React$Component);function PageEditor(props){_classCallCheck(this,PageEditor);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(PageEditor).call(this,props));_this.postTimestamp=null;_this.hasCustomUri=false;_this.state={authorized:true,publishing:false,processing:false,user:_this.props.user,article:"",uri:"",pageId:null};_this._onSubmitPage=_this._onSubmitPage.bind(_this);_this._onPublish=_this._onPublish.bind(_this);_this._onPostDateChange=_this._onPostDateChange.bind(_this);_this._onUpdatePageUri=_this._onUpdatePageUri.bind(_this);_this._onChangeUri=_this._onChangeUri.bind(_this);_this._onBlurUri=_this._onBlurUri.bind(_this);_this._onArticleChange=_this._onArticleChange.bind(_this);_this._onUserChange=_this._onUserChange.bind(_this);return _this;}_createClass(PageEditor,[{key:'componentWillMount',value:function componentWillMount(){this.stopUserSubscribe=_CurrentUser2.default.listen(this._onUserChange);var user=_CurrentUser2.default.get();this.setState({authorized:!!user.id,user:user});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopUserSubscribe();}},{key:'renderProgressBar',value:function renderProgressBar(){var barClassName=this.state.publishing?'progress-bar-success':'progress-bar-info';return _react2.default.createElement('div',{className:'progress',style:{height:"auto"}},_react2.default.createElement('div',{className:"progress-bar "+barClassName+" progress-bar-striped active",role:'progressbar','aria-valuenow':'100','aria-valuemin':'0','aria-valuemax':'100',style:styles.progressBar},this.state.publishing?'Publishing...':'Saving...'));}},{key:'renderSubmitButton',value:function renderSubmitButton(){if(this.state.processing){return this.renderProgressBar();}return _react2.default.createElement('div',null,_react2.default.createElement('button',{type:'submit',className:'btn btn-lg btn-info',style:styles.button},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign'}),' Save Page'),_react2.default.createElement('button',{type:'button',className:'btn btn-lg btn-success',style:styles.button,onClick:this._onPublish},_react2.default.createElement('span',{className:'glyphicon glyphicon-ok-sign'}),' Publish Page'));}},{key:'render',value:function render(){var _this2=this;if(!this.state.authorized)return _react2.default.createElement('h4',null,'Must be logged in :(');var imageButton={name:'image',action:'image',aria:'image',tagNames:['img'],contentDefault:'<i class="glyphicon glyphicon-picture"></i>',contentFA:'<i class="fa fa-picture-o"></i>'};var editorOptions={placeholder:{text:"Article body..."},toolbar:{buttons:['bold','italic','anchor','h2','h3','quote','unorderedlist',imageButton]}};var categories=["Reviews","Recipes","How To's","Friday Food Fight","Where To Find..."];return _react2.default.createElement('form',{ref:'addNewPage',className:'',role:'form',onSubmit:function onSubmit(e){return _this2._onSubmitPage(e);}},_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-12'},_react2.default.createElement('h1',null,'Page Editor'))),_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-4'},_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Data about data:'))),_react2.default.createElement('div',{className:'col-xs-8'},_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Spit your knowledge game:')))),_react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-4'},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement(_reactBootstrapDatetimepicker2.default,{size:'lg',defaultText:'',inputProps:{placeholder:"Article Date/Time"},format:'x',inputFormat:'YYYY-MM-DD hh:mm A',onChange:this._onPostDateChange})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'pageUri',type:'text',className:'form-control input-lg',placeholder:'Custom-Page-Url',value:this.state.uri,onChange:this._onChangeUri,onBlur:this._onBlurUri})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('select',{ref:'pageCategory',className:'form-control input-lg'},_react2.default.createElement('option',{value:''},'— Choose Category —'),categories.map(function(category,index){return _react2.default.createElement('option',{key:'category-'+category},category);}))),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'previewImage',className:'form-control input-lg',type:'text',placeholder:'Preview Image URL'})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'metaTitle',className:'form-control input-lg',type:'text',placeholder:'Enter meta title'})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('textarea',{ref:'metaDescription',className:'form-control input-lg',rows:'2',placeholder:'Enter meta description'})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'metaKeywords',className:'form-control input-lg',type:'text',placeholder:'Enter meta keywords'}))),_react2.default.createElement('div',{className:'col-xs-8'},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'pageTitle',className:'form-control input-lg',type:'text',placeholder:'Headline',onChange:this._onUpdatePageUri})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement(_reactMediumEditor2.default,{style:styles.editor,className:'form-control input-lg',text:this.state.article,onChange:this._onArticleChange,options:editorOptions})),this.renderSubmitButton(),_react2.default.createElement('input',{ref:'pageId',type:'hidden',name:'pageId',value:this.state.pageId}))),_react2.default.createElement('div',{className:'row',style:styles.uploaderRow},_react2.default.createElement('div',{className:'col-xs-12'},_react2.default.createElement(_SRDropzone2.default,{style:styles.previewImage,activeStyle:styles.dragActive,multiple:false}))));}},{key:'_onPostDateChange',value:function _onPostDateChange(datetime){this.postTimestamp=datetime;this._onUpdatePageUri();}},{key:'_getPostDateFormat',value:function _getPostDateFormat(){var format=arguments.length<=0||arguments[0]===undefined?"YYYY-MM-DD HH:mm:00":arguments[0];var dateFormat=_moment2.default.unix(this.postTimestamp/1000).format(format);if(dateFormat=='Invalid date'){return "";}return dateFormat;}},{key:'_getPageData',value:function _getPageData(){var publish=arguments.length<=0||arguments[0]===undefined?false:arguments[0];return {title:this.refs.pageTitle.value,article:this.state.article,uri:this.state.uri||this.refs.pageUri.value,category:this.refs.pageCategory.value,preview_image:this.refs.previewImage.value,meta_title:this.refs.metaTitle.value,meta_description:this.refs.metaDescription.value,meta_keywords:this.refs.metaKeywords.value,post_date:this.postTimestamp?this._getPostDateFormat():null,publish:publish};}},{key:'_onPublish',value:function _onPublish(e){this._onSubmitPage(e,true);}},{key:'_onSubmitPage',value:function _onSubmitPage(e){var _this3=this;var publish=arguments.length<=1||arguments[1]===undefined?false:arguments[1];e.preventDefault();if(this.state.processing)return;var endpoint=this.state.pageId?'/pages/'+this.state.pageId:'/pages';this.setState({processing:true,publishing:publish});_ApiRequest2.default.post(endpoint).data(this._getPageData(publish)).send(function(res){var page=res.data,message=publish?'Page published!':'Page saved!';_Utils2.default.showSuccess(message);_this3.setState({processing:false,pageId:page.id});});}},{key:'_clearForm',value:function _clearForm(){this.refs.addNewPage.reset();this.postTimestamp=null;this.hasCustomUri=false;this.setState({processing:false,article:"",uri:""});}},{key:'_getUriFromTitle',value:function _getUriFromTitle(){var headline=this.refs.pageTitle.value||'untitled',postDate=this.postTimestamp?this._getPostDateFormat("-YYYY-MM-DD"):"";return _Utils2.default.cleanForUrl(headline+postDate);}},{key:'_onBlurUri',value:function _onBlurUri(e){if(!e.target.value){this.hasCustomUri=false;this._onUpdatePageUri();}}},{key:'_onChangeUri',value:function _onChangeUri(e){this.hasCustomUri=true;this.setState({uri:this.refs.pageUri.value});return true;}},{key:'_onUpdatePageUri',value:function _onUpdatePageUri(){if(this.hasCustomUri)return;this.setState({uri:this._getUriFromTitle()});}},{key:'_onArticleChange',value:function _onArticleChange(article,medium){this.setState({article:article});}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({authorized:!!user.id});}}]);return PageEditor;}(_react2.default.Component);PageEditor.propTypes={};PageEditor.defaultProps={};exports.default=PageEditor;var styles={button:{width:'48%',margin:'0 1%'},editor:{height:"auto",minHeight:"20em"},previewImage:{color:"rgb(150,150,150)",borderWidth:2,borderColor:"rgba(150,150,150,.8)",borderStyle:"dashed",fontWeight:"bold",textAlign:"center",padding:"40px 0"},dragActive:{borderColor:'rgb(120,120,120)'},progressBar:{fontSize:"18px",padding:"10px 0",width:"100%"},uploaderRow:{marginTop:"15px"}};

},{"../Api/ApiRequest":6,"../Components/SRDropzone":9,"../Stores/CurrentUser":12,"../Utils/Utils":17,"moment":"moment","react":"react","react-bootstrap-datetimepicker":"react-bootstrap-datetimepicker","react-medium-editor":"react-medium-editor"}],19:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PageInventory=function(_React$Component){_inherits(PageInventory,_React$Component);function PageInventory(props){_classCallCheck(this,PageInventory);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(PageInventory).call(this,props));_this.state={loading:true,authorized:true,user:_this.props.user,pages:[]};_this._onUserChange=_this._onUserChange.bind(_this);return _this;}_createClass(PageInventory,[{key:'componentWillMount',value:function componentWillMount(){this.stopUserSubscribe=_CurrentUser2.default.listen(this._onUserChange);this._loadPages();var user=_CurrentUser2.default.get();this.setState({authorized:!!user.id,user:user});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopUserSubscribe();}},{key:'renderRow',value:function renderRow(page,index){return _react2.default.createElement('tr',{key:'page-'+index},_react2.default.createElement('td',null,page.id),_react2.default.createElement('td',null,page.title));}},{key:'render',value:function render(){if(this.state.loading)return _react2.default.createElement('h4',null,'Loading...');if(!this.state.authorized)return _react2.default.createElement('h4',null,'Must be logged in :(');if(this.state.pages.length===0){return _react2.default.createElement('h4',null,'No pages available :(');}return _react2.default.createElement('table',{className:'table table-striped table-hover'},_react2.default.createElement('tr',null,_react2.default.createElement('th',null,'ID'),_react2.default.createElement('th',null,'Title')),this.state.pages.map(this.renderRow.bind(this)));}},{key:'_loadPages',value:function _loadPages(){var _this2=this;_ApiRequest2.default.get('/pages').send(function(res){_this2.setState({loading:false,pages:res.data});},function(){return _this2.setState({loading:false});});}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({authorized:!!user.id});}}]);return PageInventory;}(_react2.default.Component);PageInventory.propTypes={};PageInventory.defaultProps={};exports.default=PageInventory;var styles={container:{}};

},{"../Api/ApiRequest":6,"../Stores/CurrentUser":12,"../Utils/Utils":17,"react":"react"}],20:[function(require,module,exports){
'use strict';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Initialize=require('./Utils/Initialize');var _Initialize2=_interopRequireDefault(_Initialize);var _Routes=require('./Utils/Routes');var _Routes2=_interopRequireDefault(_Routes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_Initialize2.default.onLoad();_Routes2.default.current(window.location.pathname);

},{"./Utils/Initialize":15,"./Utils/Routes":16,"react":"react","react-dom":"react-dom"}]},{},[20])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvcGF0aC1icm93c2VyaWZ5L2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9odW1hbmUtanMvaHVtYW5lLmpzIiwibm9kZV9tb2R1bGVzL2tleU1pcnJvci9pbmRleC5qcyIsInJlc291cmNlcy9qcy9BcGkvQWNjZXNzVG9rZW4uanMiLCJyZXNvdXJjZXMvanMvQXBpL0FwaVJlcXVlc3QuanMiLCJyZXNvdXJjZXMvanMvQXBpL0FwaVV0aWxzLmpzIiwicmVzb3VyY2VzL2pzL0NvbXBvbmVudHMvTG9naW5Gb3JtLmpzIiwicmVzb3VyY2VzL2pzL0NvbXBvbmVudHMvU1JEcm9wem9uZS5qcyIsInJlc291cmNlcy9qcy9Db21wb25lbnRzL1VzZXJNZW51LmpzIiwicmVzb3VyY2VzL2pzL0NvbXBvbmVudHMvVXNlck5hdi5qcyIsInJlc291cmNlcy9qcy9TdG9yZXMvQ3VycmVudFVzZXIuanMiLCJyZXNvdXJjZXMvanMvVXRpbHMvQWN0aW9ucy5qcyIsInJlc291cmNlcy9qcy9VdGlscy9Db25zdGFudHMuanMiLCJyZXNvdXJjZXMvanMvVXRpbHMvSW5pdGlhbGl6ZS5qcyIsInJlc291cmNlcy9qcy9VdGlscy9Sb3V0ZXMuanMiLCJyZXNvdXJjZXMvanMvVXRpbHMvVXRpbHMuanMiLCJyZXNvdXJjZXMvanMvVmlld3MvUGFnZUVkaXRvci5qcyIsInJlc291cmNlcy9qcy9WaWV3cy9QYWdlSW52ZW50b3J5LmpzIiwicmVzb3VyY2VzL2pzL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDaE9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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LENBQVcsS0FBWCxDQUFpQixNQUFqQixHQUE0QixDQUE1QixDQUErQixDQUNqQyxPQUFPLGdFQUFQLENBRGlDLENBQW5DLE9BS0UsdUNBQU8sVUFBVSxpQ0FBVixDQUFQLENBQ0Usd0NBQ0UsNkNBREYsQ0FFRSxnREFGRixDQURGLENBS0csS0FBSyxLQUFMLENBQVcsS0FBWCxDQUFpQixHQUFqQixDQUFxQixLQUFLLFNBQUwsQ0FBZSxJQUFmLENBQW9CLElBQXBCLENBQXJCLENBTEgsQ0FERixDQVJPLGdEQW1CSSxpQkFDWCxxQkFBVyxHQUFYLENBQWUsUUFBZixFQUNHLElBREgsQ0FDUSxhQUFPLENBQ1gsT0FBSyxRQUFMLENBQWMsQ0FDWixRQUFTLEtBQVQsQ0FDQSxNQUFPLElBQUksSUFBSixDQUZULEVBRFcsQ0FBUCxDQUtILGtCQUFNLE9BQUssUUFBTCxDQUFjLENBQUMsUUFBUyxLQUFULENBQWYsR0FBTixDQU5MLENBRFcscURBVUMsS0FBTSxDQUNsQixLQUFLLFFBQUwsQ0FBYyxDQUFDLFdBQVksQ0FBQyxDQUFFLEtBQUssRUFBTCxDQUE5QixFQURrQixZQXRFRCxnQkFBc0IsZ0JBQU0sU0FBTixFQUF0QixjQUNaLFVBQVksR0FEQSxjQUVaLGFBQWUsbUJBRkgsY0E0RXJCLElBQUksT0FBUyxDQUNYLFVBQVcsRUFBWCxDQURFOzs7aWJDM0VKLHFCQUFXLE1BQVgsR0FHQSxpQkFBTyxPQUFQLENBQWUsT0FBTyxRQUFQLENBQWdCLFFBQWhCLENBQWYiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIHJlc29sdmVzIC4gYW5kIC4uIGVsZW1lbnRzIGluIGEgcGF0aCBhcnJheSB3aXRoIGRpcmVjdG9yeSBuYW1lcyB0aGVyZVxuLy8gbXVzdCBiZSBubyBzbGFzaGVzLCBlbXB0eSBlbGVtZW50cywgb3IgZGV2aWNlIG5hbWVzIChjOlxcKSBpbiB0aGUgYXJyYXlcbi8vIChzbyBhbHNvIG5vIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHNsYXNoZXMgLSBpdCBkb2VzIG5vdCBkaXN0aW5ndWlzaFxuLy8gcmVsYXRpdmUgYW5kIGFic29sdXRlIHBhdGhzKVxuZnVuY3Rpb24gbm9ybWFsaXplQXJyYXkocGFydHMsIGFsbG93QWJvdmVSb290KSB7XG4gIC8vIGlmIHRoZSBwYXRoIHRyaWVzIHRvIGdvIGFib3ZlIHRoZSByb290LCBgdXBgIGVuZHMgdXAgPiAwXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBwYXJ0cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIHZhciBsYXN0ID0gcGFydHNbaV07XG4gICAgaWYgKGxhc3QgPT09ICcuJykge1xuICAgICAgcGFydHMuc3BsaWNlKGksIDEpO1xuICAgIH0gZWxzZSBpZiAobGFzdCA9PT0gJy4uJykge1xuICAgICAgcGFydHMuc3BsaWNlKGksIDEpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIC8vIGlmIHRoZSBwYXRoIGlzIGFsbG93ZWQgdG8gZ28gYWJvdmUgdGhlIHJvb3QsIHJlc3RvcmUgbGVhZGluZyAuLnNcbiAgaWYgKGFsbG93QWJvdmVSb290KSB7XG4gICAgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgICBwYXJ0cy51bnNoaWZ0KCcuLicpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJ0cztcbn1cblxuLy8gU3BsaXQgYSBmaWxlbmFtZSBpbnRvIFtyb290LCBkaXIsIGJhc2VuYW1lLCBleHRdLCB1bml4IHZlcnNpb25cbi8vICdyb290JyBpcyBqdXN0IGEgc2xhc2gsIG9yIG5vdGhpbmcuXG52YXIgc3BsaXRQYXRoUmUgPVxuICAgIC9eKFxcLz98KShbXFxzXFxTXSo/KSgoPzpcXC57MSwyfXxbXlxcL10rP3wpKFxcLlteLlxcL10qfCkpKD86W1xcL10qKSQvO1xudmFyIHNwbGl0UGF0aCA9IGZ1bmN0aW9uKGZpbGVuYW1lKSB7XG4gIHJldHVybiBzcGxpdFBhdGhSZS5leGVjKGZpbGVuYW1lKS5zbGljZSgxKTtcbn07XG5cbi8vIHBhdGgucmVzb2x2ZShbZnJvbSAuLi5dLCB0bylcbi8vIHBvc2l4IHZlcnNpb25cbmV4cG9ydHMucmVzb2x2ZSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgcmVzb2x2ZWRQYXRoID0gJycsXG4gICAgICByZXNvbHZlZEFic29sdXRlID0gZmFsc2U7XG5cbiAgZm9yICh2YXIgaSA9IGFyZ3VtZW50cy5sZW5ndGggLSAxOyBpID49IC0xICYmICFyZXNvbHZlZEFic29sdXRlOyBpLS0pIHtcbiAgICB2YXIgcGF0aCA9IChpID49IDApID8gYXJndW1lbnRzW2ldIDogcHJvY2Vzcy5jd2QoKTtcblxuICAgIC8vIFNraXAgZW1wdHkgYW5kIGludmFsaWQgZW50cmllc1xuICAgIGlmICh0eXBlb2YgcGF0aCAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50cyB0byBwYXRoLnJlc29sdmUgbXVzdCBiZSBzdHJpbmdzJyk7XG4gICAgfSBlbHNlIGlmICghcGF0aCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgcmVzb2x2ZWRQYXRoID0gcGF0aCArICcvJyArIHJlc29sdmVkUGF0aDtcbiAgICByZXNvbHZlZEFic29sdXRlID0gcGF0aC5jaGFyQXQoMCkgPT09ICcvJztcbiAgfVxuXG4gIC8vIEF0IHRoaXMgcG9pbnQgdGhlIHBhdGggc2hvdWxkIGJlIHJlc29sdmVkIHRvIGEgZnVsbCBhYnNvbHV0ZSBwYXRoLCBidXRcbiAgLy8gaGFuZGxlIHJlbGF0aXZlIHBhdGhzIHRvIGJlIHNhZmUgKG1pZ2h0IGhhcHBlbiB3aGVuIHByb2Nlc3MuY3dkKCkgZmFpbHMpXG5cbiAgLy8gTm9ybWFsaXplIHRoZSBwYXRoXG4gIHJlc29sdmVkUGF0aCA9IG5vcm1hbGl6ZUFycmF5KGZpbHRlcihyZXNvbHZlZFBhdGguc3BsaXQoJy8nKSwgZnVuY3Rpb24ocCkge1xuICAgIHJldHVybiAhIXA7XG4gIH0pLCAhcmVzb2x2ZWRBYnNvbHV0ZSkuam9pbignLycpO1xuXG4gIHJldHVybiAoKHJlc29sdmVkQWJzb2x1dGUgPyAnLycgOiAnJykgKyByZXNvbHZlZFBhdGgpIHx8ICcuJztcbn07XG5cbi8vIHBhdGgubm9ybWFsaXplKHBhdGgpXG4vLyBwb3NpeCB2ZXJzaW9uXG5leHBvcnRzLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgdmFyIGlzQWJzb2x1dGUgPSBleHBvcnRzLmlzQWJzb2x1dGUocGF0aCksXG4gICAgICB0cmFpbGluZ1NsYXNoID0gc3Vic3RyKHBhdGgsIC0xKSA9PT0gJy8nO1xuXG4gIC8vIE5vcm1hbGl6ZSB0aGUgcGF0aFxuICBwYXRoID0gbm9ybWFsaXplQXJyYXkoZmlsdGVyKHBhdGguc3BsaXQoJy8nKSwgZnVuY3Rpb24ocCkge1xuICAgIHJldHVybiAhIXA7XG4gIH0pLCAhaXNBYnNvbHV0ZSkuam9pbignLycpO1xuXG4gIGlmICghcGF0aCAmJiAhaXNBYnNvbHV0ZSkge1xuICAgIHBhdGggPSAnLic7XG4gIH1cbiAgaWYgKHBhdGggJiYgdHJhaWxpbmdTbGFzaCkge1xuICAgIHBhdGggKz0gJy8nO1xuICB9XG5cbiAgcmV0dXJuIChpc0Fic29sdXRlID8gJy8nIDogJycpICsgcGF0aDtcbn07XG5cbi8vIHBvc2l4IHZlcnNpb25cbmV4cG9ydHMuaXNBYnNvbHV0ZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLyc7XG59O1xuXG4vLyBwb3NpeCB2ZXJzaW9uXG5leHBvcnRzLmpvaW4gPSBmdW5jdGlvbigpIHtcbiAgdmFyIHBhdGhzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTtcbiAgcmV0dXJuIGV4cG9ydHMubm9ybWFsaXplKGZpbHRlcihwYXRocywgZnVuY3Rpb24ocCwgaW5kZXgpIHtcbiAgICBpZiAodHlwZW9mIHAgIT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudHMgdG8gcGF0aC5qb2luIG11c3QgYmUgc3RyaW5ncycpO1xuICAgIH1cbiAgICByZXR1cm4gcDtcbiAgfSkuam9pbignLycpKTtcbn07XG5cblxuLy8gcGF0aC5yZWxhdGl2ZShmcm9tLCB0bylcbi8vIHBvc2l4IHZlcnNpb25cbmV4cG9ydHMucmVsYXRpdmUgPSBmdW5jdGlvbihmcm9tLCB0bykge1xuICBmcm9tID0gZXhwb3J0cy5yZXNvbHZlKGZyb20pLnN1YnN0cigxKTtcbiAgdG8gPSBleHBvcnRzLnJlc29sdmUodG8pLnN1YnN0cigxKTtcblxuICBmdW5jdGlvbiB0cmltKGFycikge1xuICAgIHZhciBzdGFydCA9IDA7XG4gICAgZm9yICg7IHN0YXJ0IDwgYXJyLmxlbmd0aDsgc3RhcnQrKykge1xuICAgICAgaWYgKGFycltzdGFydF0gIT09ICcnKSBicmVhaztcbiAgICB9XG5cbiAgICB2YXIgZW5kID0gYXJyLmxlbmd0aCAtIDE7XG4gICAgZm9yICg7IGVuZCA+PSAwOyBlbmQtLSkge1xuICAgICAgaWYgKGFycltlbmRdICE9PSAnJykgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKHN0YXJ0ID4gZW5kKSByZXR1cm4gW107XG4gICAgcmV0dXJuIGFyci5zbGljZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTtcbiAgfVxuXG4gIHZhciBmcm9tUGFydHMgPSB0cmltKGZyb20uc3BsaXQoJy8nKSk7XG4gIHZhciB0b1BhcnRzID0gdHJpbSh0by5zcGxpdCgnLycpKTtcblxuICB2YXIgbGVuZ3RoID0gTWF0aC5taW4oZnJvbVBhcnRzLmxlbmd0aCwgdG9QYXJ0cy5sZW5ndGgpO1xuICB2YXIgc2FtZVBhcnRzTGVuZ3RoID0gbGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGZyb21QYXJ0c1tpXSAhPT0gdG9QYXJ0c1tpXSkge1xuICAgICAgc2FtZVBhcnRzTGVuZ3RoID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHZhciBvdXRwdXRQYXJ0cyA9IFtdO1xuICBmb3IgKHZhciBpID0gc2FtZVBhcnRzTGVuZ3RoOyBpIDwgZnJvbVBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgb3V0cHV0UGFydHMucHVzaCgnLi4nKTtcbiAgfVxuXG4gIG91dHB1dFBhcnRzID0gb3V0cHV0UGFydHMuY29uY2F0KHRvUGFydHMuc2xpY2Uoc2FtZVBhcnRzTGVuZ3RoKSk7XG5cbiAgcmV0dXJuIG91dHB1dFBhcnRzLmpvaW4oJy8nKTtcbn07XG5cbmV4cG9ydHMuc2VwID0gJy8nO1xuZXhwb3J0cy5kZWxpbWl0ZXIgPSAnOic7XG5cbmV4cG9ydHMuZGlybmFtZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgdmFyIHJlc3VsdCA9IHNwbGl0UGF0aChwYXRoKSxcbiAgICAgIHJvb3QgPSByZXN1bHRbMF0sXG4gICAgICBkaXIgPSByZXN1bHRbMV07XG5cbiAgaWYgKCFyb290ICYmICFkaXIpIHtcbiAgICAvLyBObyBkaXJuYW1lIHdoYXRzb2V2ZXJcbiAgICByZXR1cm4gJy4nO1xuICB9XG5cbiAgaWYgKGRpcikge1xuICAgIC8vIEl0IGhhcyBhIGRpcm5hbWUsIHN0cmlwIHRyYWlsaW5nIHNsYXNoXG4gICAgZGlyID0gZGlyLnN1YnN0cigwLCBkaXIubGVuZ3RoIC0gMSk7XG4gIH1cblxuICByZXR1cm4gcm9vdCArIGRpcjtcbn07XG5cblxuZXhwb3J0cy5iYXNlbmFtZSA9IGZ1bmN0aW9uKHBhdGgsIGV4dCkge1xuICB2YXIgZiA9IHNwbGl0UGF0aChwYXRoKVsyXTtcbiAgLy8gVE9ETzogbWFrZSB0aGlzIGNvbXBhcmlzb24gY2FzZS1pbnNlbnNpdGl2ZSBvbiB3aW5kb3dzP1xuICBpZiAoZXh0ICYmIGYuc3Vic3RyKC0xICogZXh0Lmxlbmd0aCkgPT09IGV4dCkge1xuICAgIGYgPSBmLnN1YnN0cigwLCBmLmxlbmd0aCAtIGV4dC5sZW5ndGgpO1xuICB9XG4gIHJldHVybiBmO1xufTtcblxuXG5leHBvcnRzLmV4dG5hbWUgPSBmdW5jdGlvbihwYXRoKSB7XG4gIHJldHVybiBzcGxpdFBhdGgocGF0aClbM107XG59O1xuXG5mdW5jdGlvbiBmaWx0ZXIgKHhzLCBmKSB7XG4gICAgaWYgKHhzLmZpbHRlcikgcmV0dXJuIHhzLmZpbHRlcihmKTtcbiAgICB2YXIgcmVzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZih4c1tpXSwgaSwgeHMpKSByZXMucHVzaCh4c1tpXSk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5cbi8vIFN0cmluZy5wcm90b3R5cGUuc3Vic3RyIC0gbmVnYXRpdmUgaW5kZXggZG9uJ3Qgd29yayBpbiBJRThcbnZhciBzdWJzdHIgPSAnYWInLnN1YnN0cigtMSkgPT09ICdiJ1xuICAgID8gZnVuY3Rpb24gKHN0ciwgc3RhcnQsIGxlbikgeyByZXR1cm4gc3RyLnN1YnN0cihzdGFydCwgbGVuKSB9XG4gICAgOiBmdW5jdGlvbiAoc3RyLCBzdGFydCwgbGVuKSB7XG4gICAgICAgIGlmIChzdGFydCA8IDApIHN0YXJ0ID0gc3RyLmxlbmd0aCArIHN0YXJ0O1xuICAgICAgICByZXR1cm4gc3RyLnN1YnN0cihzdGFydCwgbGVuKTtcbiAgICB9XG47XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcblxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgc2V0VGltZW91dChkcmFpblF1ZXVlLCAwKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8qKlxuICogaHVtYW5lLmpzXG4gKiBIdW1hbml6ZWQgTWVzc2FnZXMgZm9yIE5vdGlmaWNhdGlvbnNcbiAqIEBhdXRob3IgTWFyYyBIYXJ0ZXIgKEB3YXZkZWQpXG4gKiBAZXhhbXBsZVxuICogICBodW1hbmUubG9nKCdoZWxsbyB3b3JsZCcpO1xuICogQGxpY2Vuc2UgTUlUXG4gKiBTZWUgbW9yZSB1c2FnZSBleGFtcGxlcyBhdDogaHR0cDovL3dhdmRlZC5naXRodWIuY29tL2h1bWFuZS1qcy9cbiAqL1xuXG47IWZ1bmN0aW9uIChuYW1lLCBjb250ZXh0LCBkZWZpbml0aW9uKSB7XG4gICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIG1vZHVsZS5leHBvcnRzID0gZGVmaW5pdGlvbihuYW1lLCBjb250ZXh0KVxuICAgZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCAgPT09ICdvYmplY3QnKSBkZWZpbmUoZGVmaW5pdGlvbilcbiAgIGVsc2UgY29udGV4dFtuYW1lXSA9IGRlZmluaXRpb24obmFtZSwgY29udGV4dClcbn0oJ2h1bWFuZScsIHRoaXMsIGZ1bmN0aW9uIChuYW1lLCBjb250ZXh0KSB7XG4gICB2YXIgd2luID0gd2luZG93XG4gICB2YXIgZG9jID0gZG9jdW1lbnRcblxuICAgdmFyIEVOViA9IHtcbiAgICAgIG9uOiBmdW5jdGlvbiAoZWwsIHR5cGUsIGNiKSB7XG4gICAgICAgICAnYWRkRXZlbnRMaXN0ZW5lcicgaW4gd2luID8gZWwuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLGNiLGZhbHNlKSA6IGVsLmF0dGFjaEV2ZW50KCdvbicrdHlwZSxjYilcbiAgICAgIH0sXG4gICAgICBvZmY6IGZ1bmN0aW9uIChlbCwgdHlwZSwgY2IpIHtcbiAgICAgICAgICdyZW1vdmVFdmVudExpc3RlbmVyJyBpbiB3aW4gPyBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsY2IsZmFsc2UpIDogZWwuZGV0YWNoRXZlbnQoJ29uJyt0eXBlLGNiKVxuICAgICAgfSxcbiAgICAgIGJpbmQ6IGZ1bmN0aW9uIChmbiwgY3R4KSB7XG4gICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgeyBmbi5hcHBseShjdHgsYXJndW1lbnRzKSB9XG4gICAgICB9LFxuICAgICAgaXNBcnJheTogQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgQXJyYXldJyB9LFxuICAgICAgY29uZmlnOiBmdW5jdGlvbiAocHJlZmVycmVkLCBmYWxsYmFjaykge1xuICAgICAgICAgcmV0dXJuIHByZWZlcnJlZCAhPSBudWxsID8gcHJlZmVycmVkIDogZmFsbGJhY2tcbiAgICAgIH0sXG4gICAgICB0cmFuc1N1cHBvcnQ6IGZhbHNlLFxuICAgICAgdXNlRmlsdGVyOiAvbXNpZSBbNjc4XS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksIC8vIHNuaWZmLCBzbmlmZlxuICAgICAgX2NoZWNrVHJhbnNpdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgdmFyIGVsID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgICB2YXIgdmVuZG9ycyA9IHsgd2Via2l0OiAnd2Via2l0JywgTW96OiAnJywgTzogJ28nLCBtczogJ01TJyB9XG5cbiAgICAgICAgIGZvciAodmFyIHZlbmRvciBpbiB2ZW5kb3JzKVxuICAgICAgICAgICAgaWYgKHZlbmRvciArICdUcmFuc2l0aW9uJyBpbiBlbC5zdHlsZSkge1xuICAgICAgICAgICAgICAgdGhpcy52ZW5kb3JQcmVmaXggPSB2ZW5kb3JzW3ZlbmRvcl1cbiAgICAgICAgICAgICAgIHRoaXMudHJhbnNTdXBwb3J0ID0gdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgfVxuICAgfVxuICAgRU5WLl9jaGVja1RyYW5zaXRpb24oKVxuXG4gICB2YXIgSHVtYW5lID0gZnVuY3Rpb24gKG8pIHtcbiAgICAgIG8gfHwgKG8gPSB7fSlcbiAgICAgIHRoaXMucXVldWUgPSBbXVxuICAgICAgdGhpcy5iYXNlQ2xzID0gby5iYXNlQ2xzIHx8ICdodW1hbmUnXG4gICAgICB0aGlzLmFkZG5DbHMgPSBvLmFkZG5DbHMgfHwgJydcbiAgICAgIHRoaXMudGltZW91dCA9ICd0aW1lb3V0JyBpbiBvID8gby50aW1lb3V0IDogMjUwMFxuICAgICAgdGhpcy53YWl0Rm9yTW92ZSA9IG8ud2FpdEZvck1vdmUgfHwgZmFsc2VcbiAgICAgIHRoaXMuY2xpY2tUb0Nsb3NlID0gby5jbGlja1RvQ2xvc2UgfHwgZmFsc2VcbiAgICAgIHRoaXMudGltZW91dEFmdGVyTW92ZSA9IG8udGltZW91dEFmdGVyTW92ZSB8fCBmYWxzZVxuICAgICAgdGhpcy5jb250YWluZXIgPSBvLmNvbnRhaW5lclxuXG4gICAgICB0cnkgeyB0aGlzLl9zZXR1cEVsKCkgfSAvLyBhdHRlbXB0IHRvIHNldHVwIGVsZW1lbnRzXG4gICAgICBjYXRjaCAoZSkge1xuICAgICAgICBFTlYub24od2luLCdsb2FkJyxFTlYuYmluZCh0aGlzLl9zZXR1cEVsLCB0aGlzKSkgLy8gZG9tIHdhc24ndCByZWFkeSwgd2FpdCB0aWxsIHJlYWR5XG4gICAgICB9XG4gICB9XG5cbiAgIEh1bWFuZS5wcm90b3R5cGUgPSB7XG4gICAgICBjb25zdHJ1Y3RvcjogSHVtYW5lLFxuICAgICAgX3NldHVwRWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgIHZhciBlbCA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICAgZWwuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICAgaWYgKCF0aGlzLmNvbnRhaW5lcil7XG4gICAgICAgICAgIGlmKGRvYy5ib2R5KSB0aGlzLmNvbnRhaW5lciA9IGRvYy5ib2R5O1xuICAgICAgICAgICBlbHNlIHRocm93ICdkb2N1bWVudC5ib2R5IGlzIG51bGwnXG4gICAgICAgICB9XG4gICAgICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZChlbClcbiAgICAgICAgIHRoaXMuZWwgPSBlbFxuICAgICAgICAgdGhpcy5yZW1vdmVFdmVudCA9IEVOVi5iaW5kKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB2YXIgdGltZW91dEFmdGVyTW92ZSA9IEVOVi5jb25maWcodGhpcy5jdXJyZW50TXNnLnRpbWVvdXRBZnRlck1vdmUsdGhpcy50aW1lb3V0QWZ0ZXJNb3ZlKVxuICAgICAgICAgICAgaWYgKCF0aW1lb3V0QWZ0ZXJNb3ZlKXtcbiAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlKClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICBzZXRUaW1lb3V0KEVOVi5iaW5kKHRoaXMucmVtb3ZlLHRoaXMpLHRpbWVvdXRBZnRlck1vdmUpXG4gICAgICAgICAgICB9XG4gICAgICAgICB9LHRoaXMpXG5cbiAgICAgICAgIHRoaXMudHJhbnNFdmVudCA9IEVOVi5iaW5kKHRoaXMuX2FmdGVyQW5pbWF0aW9uLHRoaXMpXG4gICAgICAgICB0aGlzLl9ydW4oKVxuICAgICAgfSxcbiAgICAgIF9hZnRlclRpbWVvdXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgIGlmICghRU5WLmNvbmZpZyh0aGlzLmN1cnJlbnRNc2cud2FpdEZvck1vdmUsdGhpcy53YWl0Rm9yTW92ZSkpIHRoaXMucmVtb3ZlKClcblxuICAgICAgICAgZWxzZSBpZiAoIXRoaXMucmVtb3ZlRXZlbnRzU2V0KSB7XG4gICAgICAgICAgICBFTlYub24oZG9jLmJvZHksJ21vdXNlbW92ZScsdGhpcy5yZW1vdmVFdmVudClcbiAgICAgICAgICAgIEVOVi5vbihkb2MuYm9keSwnY2xpY2snLHRoaXMucmVtb3ZlRXZlbnQpXG4gICAgICAgICAgICBFTlYub24oZG9jLmJvZHksJ2tleXByZXNzJyx0aGlzLnJlbW92ZUV2ZW50KVxuICAgICAgICAgICAgRU5WLm9uKGRvYy5ib2R5LCd0b3VjaHN0YXJ0Jyx0aGlzLnJlbW92ZUV2ZW50KVxuICAgICAgICAgICAgdGhpcy5yZW1vdmVFdmVudHNTZXQgPSB0cnVlXG4gICAgICAgICB9XG4gICAgICB9LFxuICAgICAgX3J1bjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgaWYgKHRoaXMuX2FuaW1hdGluZyB8fCAhdGhpcy5xdWV1ZS5sZW5ndGggfHwgIXRoaXMuZWwpIHJldHVyblxuXG4gICAgICAgICB0aGlzLl9hbmltYXRpbmcgPSB0cnVlXG4gICAgICAgICBpZiAodGhpcy5jdXJyZW50VGltZXIpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLmN1cnJlbnRUaW1lcilcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFRpbWVyID0gbnVsbFxuICAgICAgICAgfVxuXG4gICAgICAgICB2YXIgbXNnID0gdGhpcy5xdWV1ZS5zaGlmdCgpXG4gICAgICAgICB2YXIgY2xpY2tUb0Nsb3NlID0gRU5WLmNvbmZpZyhtc2cuY2xpY2tUb0Nsb3NlLHRoaXMuY2xpY2tUb0Nsb3NlKVxuXG4gICAgICAgICBpZiAoY2xpY2tUb0Nsb3NlKSB7XG4gICAgICAgICAgICBFTlYub24odGhpcy5lbCwnY2xpY2snLHRoaXMucmVtb3ZlRXZlbnQpXG4gICAgICAgICAgICBFTlYub24odGhpcy5lbCwndG91Y2hzdGFydCcsdGhpcy5yZW1vdmVFdmVudClcbiAgICAgICAgIH1cblxuICAgICAgICAgdmFyIHRpbWVvdXQgPSBFTlYuY29uZmlnKG1zZy50aW1lb3V0LHRoaXMudGltZW91dClcblxuICAgICAgICAgaWYgKHRpbWVvdXQgPiAwKVxuICAgICAgICAgICAgdGhpcy5jdXJyZW50VGltZXIgPSBzZXRUaW1lb3V0KEVOVi5iaW5kKHRoaXMuX2FmdGVyVGltZW91dCx0aGlzKSwgdGltZW91dClcblxuICAgICAgICAgaWYgKEVOVi5pc0FycmF5KG1zZy5odG1sKSkgbXNnLmh0bWwgPSAnPHVsPjxsaT4nK21zZy5odG1sLmpvaW4oJzxsaT4nKSsnPC91bD4nXG5cbiAgICAgICAgIHRoaXMuZWwuaW5uZXJIVE1MID0gbXNnLmh0bWxcbiAgICAgICAgIHRoaXMuY3VycmVudE1zZyA9IG1zZ1xuICAgICAgICAgdGhpcy5lbC5jbGFzc05hbWUgPSB0aGlzLmJhc2VDbHNcbiAgICAgICAgIGlmIChFTlYudHJhbnNTdXBwb3J0KSB7XG4gICAgICAgICAgICB0aGlzLmVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snXG4gICAgICAgICAgICBzZXRUaW1lb3V0KEVOVi5iaW5kKHRoaXMuX3Nob3dNc2csdGhpcyksNTApXG4gICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fc2hvd01zZygpXG4gICAgICAgICB9XG5cbiAgICAgIH0sXG4gICAgICBfc2V0T3BhY2l0eTogZnVuY3Rpb24gKG9wYWNpdHkpIHtcbiAgICAgICAgIGlmIChFTlYudXNlRmlsdGVyKXtcbiAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgIHRoaXMuZWwuZmlsdGVycy5pdGVtKCdEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5BbHBoYScpLk9wYWNpdHkgPSBvcGFjaXR5KjEwMFxuICAgICAgICAgICAgfSBjYXRjaChlcnIpe31cbiAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmVsLnN0eWxlLm9wYWNpdHkgPSBTdHJpbmcob3BhY2l0eSlcbiAgICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBfc2hvd01zZzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgdmFyIGFkZG5DbHMgPSBFTlYuY29uZmlnKHRoaXMuY3VycmVudE1zZy5hZGRuQ2xzLHRoaXMuYWRkbkNscylcbiAgICAgICAgIGlmIChFTlYudHJhbnNTdXBwb3J0KSB7XG4gICAgICAgICAgICB0aGlzLmVsLmNsYXNzTmFtZSA9IHRoaXMuYmFzZUNscysnICcrYWRkbkNscysnICcrdGhpcy5iYXNlQ2xzKyctYW5pbWF0ZSdcbiAgICAgICAgIH1cbiAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIG9wYWNpdHkgPSAwXG4gICAgICAgICAgICB0aGlzLmVsLmNsYXNzTmFtZSA9IHRoaXMuYmFzZUNscysnICcrYWRkbkNscysnICcrdGhpcy5iYXNlQ2xzKyctanMtYW5pbWF0ZSdcbiAgICAgICAgICAgIHRoaXMuX3NldE9wYWNpdHkoMCkgLy8gcmVzZXQgdmFsdWUgc28gaG92ZXIgc3RhdGVzIHdvcmtcbiAgICAgICAgICAgIHRoaXMuZWwuc3R5bGUuZGlzcGxheSA9ICdibG9jaydcblxuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgICAgICAgICB2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgaWYgKG9wYWNpdHkgPCAxKSB7XG4gICAgICAgICAgICAgICAgICBvcGFjaXR5ICs9IDAuMVxuICAgICAgICAgICAgICAgICAgaWYgKG9wYWNpdHkgPiAxKSBvcGFjaXR5ID0gMVxuICAgICAgICAgICAgICAgICAgc2VsZi5fc2V0T3BhY2l0eShvcGFjaXR5KVxuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgZWxzZSBjbGVhckludGVydmFsKGludGVydmFsKVxuICAgICAgICAgICAgfSwgMzApXG4gICAgICAgICB9XG4gICAgICB9LFxuICAgICAgX2hpZGVNc2c6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgIHZhciBhZGRuQ2xzID0gRU5WLmNvbmZpZyh0aGlzLmN1cnJlbnRNc2cuYWRkbkNscyx0aGlzLmFkZG5DbHMpXG4gICAgICAgICBpZiAoRU5WLnRyYW5zU3VwcG9ydCkge1xuICAgICAgICAgICAgdGhpcy5lbC5jbGFzc05hbWUgPSB0aGlzLmJhc2VDbHMrJyAnK2FkZG5DbHNcbiAgICAgICAgICAgIEVOVi5vbih0aGlzLmVsLEVOVi52ZW5kb3JQcmVmaXggPyBFTlYudmVuZG9yUHJlZml4KydUcmFuc2l0aW9uRW5kJyA6ICd0cmFuc2l0aW9uZW5kJyx0aGlzLnRyYW5zRXZlbnQpXG4gICAgICAgICB9XG4gICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBvcGFjaXR5ID0gMVxuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgICAgICAgICB2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgaWYob3BhY2l0eSA+IDApIHtcbiAgICAgICAgICAgICAgICAgIG9wYWNpdHkgLT0gMC4xXG4gICAgICAgICAgICAgICAgICBpZiAob3BhY2l0eSA8IDApIG9wYWNpdHkgPSAwXG4gICAgICAgICAgICAgICAgICBzZWxmLl9zZXRPcGFjaXR5KG9wYWNpdHkpO1xuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICBzZWxmLmVsLmNsYXNzTmFtZSA9IHNlbGYuYmFzZUNscysnICcrYWRkbkNsc1xuICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAgICAgICAgICAgICAgICAgIHNlbGYuX2FmdGVyQW5pbWF0aW9uKClcbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDMwKVxuICAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIF9hZnRlckFuaW1hdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgaWYgKEVOVi50cmFuc1N1cHBvcnQpIEVOVi5vZmYodGhpcy5lbCxFTlYudmVuZG9yUHJlZml4ID8gRU5WLnZlbmRvclByZWZpeCsnVHJhbnNpdGlvbkVuZCcgOiAndHJhbnNpdGlvbmVuZCcsdGhpcy50cmFuc0V2ZW50KVxuXG4gICAgICAgICBpZiAodGhpcy5jdXJyZW50TXNnLmNiKSB0aGlzLmN1cnJlbnRNc2cuY2IoKVxuICAgICAgICAgdGhpcy5lbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG5cbiAgICAgICAgIHRoaXMuX2FuaW1hdGluZyA9IGZhbHNlXG4gICAgICAgICB0aGlzLl9ydW4oKVxuICAgICAgfSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgIHZhciBjYiA9IHR5cGVvZiBlID09ICdmdW5jdGlvbicgPyBlIDogbnVsbFxuXG4gICAgICAgICBFTlYub2ZmKGRvYy5ib2R5LCdtb3VzZW1vdmUnLHRoaXMucmVtb3ZlRXZlbnQpXG4gICAgICAgICBFTlYub2ZmKGRvYy5ib2R5LCdjbGljaycsdGhpcy5yZW1vdmVFdmVudClcbiAgICAgICAgIEVOVi5vZmYoZG9jLmJvZHksJ2tleXByZXNzJyx0aGlzLnJlbW92ZUV2ZW50KVxuICAgICAgICAgRU5WLm9mZihkb2MuYm9keSwndG91Y2hzdGFydCcsdGhpcy5yZW1vdmVFdmVudClcbiAgICAgICAgIEVOVi5vZmYodGhpcy5lbCwnY2xpY2snLHRoaXMucmVtb3ZlRXZlbnQpXG4gICAgICAgICBFTlYub2ZmKHRoaXMuZWwsJ3RvdWNoc3RhcnQnLHRoaXMucmVtb3ZlRXZlbnQpXG4gICAgICAgICB0aGlzLnJlbW92ZUV2ZW50c1NldCA9IGZhbHNlXG5cbiAgICAgICAgIGlmIChjYiAmJiB0aGlzLmN1cnJlbnRNc2cpIHRoaXMuY3VycmVudE1zZy5jYiA9IGNiXG4gICAgICAgICBpZiAodGhpcy5fYW5pbWF0aW5nKSB0aGlzLl9oaWRlTXNnKClcbiAgICAgICAgIGVsc2UgaWYgKGNiKSBjYigpXG4gICAgICB9LFxuICAgICAgbG9nOiBmdW5jdGlvbiAoaHRtbCwgbywgY2IsIGRlZmF1bHRzKSB7XG4gICAgICAgICB2YXIgbXNnID0ge31cbiAgICAgICAgIGlmIChkZWZhdWx0cylcbiAgICAgICAgICAgZm9yICh2YXIgb3B0IGluIGRlZmF1bHRzKVxuICAgICAgICAgICAgICAgbXNnW29wdF0gPSBkZWZhdWx0c1tvcHRdXG5cbiAgICAgICAgIGlmICh0eXBlb2YgbyA9PSAnZnVuY3Rpb24nKSBjYiA9IG9cbiAgICAgICAgIGVsc2UgaWYgKG8pXG4gICAgICAgICAgICBmb3IgKHZhciBvcHQgaW4gbykgbXNnW29wdF0gPSBvW29wdF1cblxuICAgICAgICAgbXNnLmh0bWwgPSBodG1sXG4gICAgICAgICBpZiAoY2IpIG1zZy5jYiA9IGNiXG4gICAgICAgICB0aGlzLnF1ZXVlLnB1c2gobXNnKVxuICAgICAgICAgdGhpcy5fcnVuKClcbiAgICAgICAgIHJldHVybiB0aGlzXG4gICAgICB9LFxuICAgICAgc3Bhd246IGZ1bmN0aW9uIChkZWZhdWx0cykge1xuICAgICAgICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGh0bWwsIG8sIGNiKSB7XG4gICAgICAgICAgICBzZWxmLmxvZy5jYWxsKHNlbGYsaHRtbCxvLGNiLGRlZmF1bHRzKVxuICAgICAgICAgICAgcmV0dXJuIHNlbGZcbiAgICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBjcmVhdGU6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBuZXcgSHVtYW5lKG8pIH1cbiAgIH1cbiAgIHJldHVybiBuZXcgSHVtYW5lKClcbn0pO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE0IEZhY2Vib29rLCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvbnN0cnVjdHMgYW4gZW51bWVyYXRpb24gd2l0aCBrZXlzIGVxdWFsIHRvIHRoZWlyIHZhbHVlLlxuICpcbiAqIEZvciBleGFtcGxlOlxuICpcbiAqICAgdmFyIENPTE9SUyA9IGtleU1pcnJvcih7Ymx1ZTogbnVsbCwgcmVkOiBudWxsfSk7XG4gKiAgIHZhciBteUNvbG9yID0gQ09MT1JTLmJsdWU7XG4gKiAgIHZhciBpc0NvbG9yVmFsaWQgPSAhIUNPTE9SU1tteUNvbG9yXTtcbiAqXG4gKiBUaGUgbGFzdCBsaW5lIGNvdWxkIG5vdCBiZSBwZXJmb3JtZWQgaWYgdGhlIHZhbHVlcyBvZiB0aGUgZ2VuZXJhdGVkIGVudW0gd2VyZVxuICogbm90IGVxdWFsIHRvIHRoZWlyIGtleXMuXG4gKlxuICogICBJbnB1dDogIHtrZXkxOiB2YWwxLCBrZXkyOiB2YWwyfVxuICogICBPdXRwdXQ6IHtrZXkxOiBrZXkxLCBrZXkyOiBrZXkyfVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqL1xudmFyIGtleU1pcnJvciA9IGZ1bmN0aW9uKG9iaikge1xuICB2YXIgcmV0ID0ge307XG4gIHZhciBrZXk7XG4gIGlmICghKG9iaiBpbnN0YW5jZW9mIE9iamVjdCAmJiAhQXJyYXkuaXNBcnJheShvYmopKSkge1xuICAgIHRocm93IG5ldyBFcnJvcigna2V5TWlycm9yKC4uLik6IEFyZ3VtZW50IG11c3QgYmUgYW4gb2JqZWN0LicpO1xuICB9XG4gIGZvciAoa2V5IGluIG9iaikge1xuICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICByZXRba2V5XSA9IGtleTtcbiAgfVxuICByZXR1cm4gcmV0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBrZXlNaXJyb3I7XG4iLCJpbXBvcnQgQXBpUmVxdWVzdCBmcm9tICcuL0FwaVJlcXVlc3QnO1xuaW1wb3J0IHtDb25maWd9IGZyb20gJy4uL1V0aWxzL0NvbnN0YW50cyc7XG5cbi8qKlxuICogQXBwbGljYXRpb24td2lkZSBhY2Nlc3NfdG9rZW4gc3RvcmFnZS9yZXRyaWV2YWxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWNjZXNzVG9rZW4ge1xuICAvKipcbiAgICogR2V0IHRoZSBBY2Nlc3NUb2tlbiBhbmQgbG9jYWxseSBjYWNoZSBpdCB0byBhdm9pZCB1bmVjY2Vzc2FyeSBmZXRjaGVzLlxuICAgKiBAcmV0dXJucyBQcm9taXNlXG4gICAqL1xuICBzdGF0aWMgZ2V0KHZlcmlmeSkge1xuICAgIGlmICh0eXBlb2YgdmVyaWZ5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmVyaWZ5ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmIChBY2Nlc3NUb2tlbi5fYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUoQWNjZXNzVG9rZW4uX2FjY2Vzc1Rva2VuKTtcbiAgICAgIH1cblxuICAgICAgbGV0IGFjY2Vzc190b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKENvbmZpZy5TdG9yYWdlLkFDQ0VTU19UT0tFTik7XG5cbiAgICAgIGlmIChhY2Nlc3NfdG9rZW4gPT09IG51bGwpIHtcbiAgICAgICAgQWNjZXNzVG9rZW4uY2xlYXIoKTtcbiAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgRXJyb3Ioe2NvZGU6IDQwMywgbWVzc2FnZTogJ1VuYXV0aG9yaXplZCd9KSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGlmICh2ZXJpZnkpIHtcbiAgICAgIC8vICAgQXBpUmVxdWVzdC5wb3N0KCcvc2Vzc2lvbi92ZXJpZnknKVxuICAgICAgLy8gICAgIC5zZXRIYW5kbGVFcnJvcnMoZmFsc2UpXG4gICAgICAvLyAgICAgLnNldElnbm9yZU5ldHdvcmtFcnJvcih0cnVlKVxuICAgICAgLy8gICAgIC5zZW5kKCgpID0+IHtcbiAgICAgIC8vICAgICAgIEFjY2Vzc1Rva2VuLnNldChhY2Nlc3NfdG9rZW4sIHRydWUpLnRoZW4ocmVzb2x2ZSk7XG4gICAgICAvLyAgICAgfSwgKGVycikgPT4ge1xuICAgICAgLy8gICAgICAgY29uc29sZS5sb2coJ1Rva2VuIFZlcmlmaWNhdGlvbiBFcnJvcjogJywgZXJyKTtcbiAgICAgIC8vICAgICAgIEFjY2Vzc1Rva2VuLmNsZWFyKCk7XG4gICAgICAvLyAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIC8vICAgICB9KTtcbiAgICAgIC8vIH1cblxuICAgICAgQWNjZXNzVG9rZW4uc2V0KGFjY2Vzc190b2tlbiwgdHJ1ZSkudGhlbihyZXNvbHZlKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGFjY2Vzc190b2tlbiBpbiB0aGUgbG9jYWwgY2FjaGUsIGFuZCAoYnkgZGVmYXVsdCkgaW4gbG9jYWxTdG9yYWdlLlxuICAgKiBAcGFyYW0gYWNjZXNzX3Rva2VuXG4gICAqIEBwYXJhbSBkb250VXBkYXRlU3RvcmFnZVxuICAgKi9cbiAgc3RhdGljIHNldChhY2Nlc3NfdG9rZW4sIGRvbnRVcGRhdGVTdG9yYWdlKSB7XG4gICAgQWNjZXNzVG9rZW4uX2FjY2Vzc1Rva2VuID0gYWNjZXNzX3Rva2VuO1xuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmICghIGRvbnRVcGRhdGVTdG9yYWdlKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKENvbmZpZy5TdG9yYWdlLkFDQ0VTU19UT0tFTiwgYWNjZXNzX3Rva2VuKTtcbiAgICAgIH1cblxuICAgICAgcmVzb2x2ZShhY2Nlc3NfdG9rZW4pO1xuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogQ2xlYXJzIHRoZSBhY2Nlc3NfdG9rZW4gZnJvbSBsb2NhbCBjYWNoZSBhbmQgbG9jYWxTdG9yYWdlXG4gICAqIEByZXR1cm5zIHsqfVxuICAgKi9cbiAgc3RhdGljIGNsZWFyKCkge1xuICAgIEFjY2Vzc1Rva2VuLl9hY2Nlc3NUb2tlbiA9IG51bGw7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKENvbmZpZy5TdG9yYWdlLkFDQ0VTU19UT0tFTik7XG4gIH1cbn0iLCJpbXBvcnQgVXRpbHMgZnJvbSAnLi4vVXRpbHMvVXRpbHMnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQgQXBpVXRpbHMgZnJvbSAnLi9BcGlVdGlscyc7XG5pbXBvcnQgQWNjZXNzVG9rZW4gZnJvbSAnLi9BY2Nlc3NUb2tlbic7XG5pbXBvcnQgUmVxdWVzdCBmcm9tICdzdXBlcmFnZW50JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpUmVxdWVzdCB7XG5cbiAgc3RhdGljIGFjdGl2ZVJlcXVlc3RzID0gMDtcblxuICBzdGF0aWMgdXBkYXRlTmV0d29ya0luZGljYXRvcihkaXIgPSAnLScpIHtcbiAgICBpZiAoZGlyID09PSAnKycpIHtcbiAgICAgIEFwaVJlcXVlc3QuYWN0aXZlUmVxdWVzdHMrKztcbiAgICB9IGVsc2Uge1xuICAgICAgQXBpUmVxdWVzdC5hY3RpdmVSZXF1ZXN0cy0tO1xuICAgIH1cblxuICAgIGlmIChBcGlSZXF1ZXN0LmFjdGl2ZVJlcXVlc3RzIDw9IDApIHtcbiAgICAgIEFwaVJlcXVlc3QuYWN0aXZlUmVxdWVzdHMgPSAwO1xuICAgICAgLy8gaGlkZSBuZXR3b3JrIGFjdGl2aXR5IGluZGljYXRvclxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBzaG93IG5ldHdvcmsgYWN0aXZpdHkgaW5kaWNhdG9yXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhbiBBUEkgUmVxdWVzdCBPYmplY3RcbiAgICogQHBhcmFtIG1ldGhvZCB7c3RyaW5nfSBnZXR8cG9zdHxwdXR8ZGVsfGhlYWR8b3B0aW9ucyAob3B0aW9uYWwsIGRlZmF1bHQ6IGdldClcbiAgICogQHBhcmFtIGVuZHBvaW50IHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgY3JlYXRlKG1ldGhvZCwgZW5kcG9pbnQpIHtcbiAgICByZXR1cm4gbmV3IHRoaXMobWV0aG9kLCBlbmRwb2ludCk7XG4gIH1cblxuICBzdGF0aWMgY3JlYXRlQW5vbihtZXRob2QsIGVuZHBvaW50KSB7XG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgdGhpcyhtZXRob2QsIGVuZHBvaW50KTtcbiAgICByZXF1ZXN0LnNldEFub255bW91cyh0cnVlKTtcblxuICAgIHJldHVybiByZXF1ZXN0O1xuICB9XG5cbiAgc3RhdGljIGdldChlbmRwb2ludCkge1xuICAgIHJldHVybiBuZXcgdGhpcygnZ2V0JywgZW5kcG9pbnQpO1xuICB9XG5cbiAgc3RhdGljIHBvc3QoZW5kcG9pbnQpIHtcbiAgICByZXR1cm4gbmV3IHRoaXMoJ3Bvc3QnLCBlbmRwb2ludCk7XG4gIH1cblxuICBzdGF0aWMgcHV0KGVuZHBvaW50KSB7XG4gICAgcmV0dXJuIG5ldyB0aGlzKCdwdXQnLCBlbmRwb2ludCk7XG4gIH1cblxuICBzdGF0aWMgZGVsZXRlKGVuZHBvaW50KSB7XG4gICAgcmV0dXJuIG5ldyB0aGlzKCdkZWxldGUnLCBlbmRwb2ludCk7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihtZXRob2QsIGVuZHBvaW50KSB7XG4gICAgaWYgKGVuZHBvaW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVuZHBvaW50ID0gbWV0aG9kO1xuICAgICAgbWV0aG9kID0gJ2dldCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1ldGhvZCA9IG1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIGlmIChlbmRwb2ludC5pbmRleE9mKCc/JykgIT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtdXN0IHNldCBxdWVyeSBzdHJpbmcgZGF0YSB2aWEgdGhlIGBxdWVyeWAgZnVuY3Rpb24nKTtcbiAgICB9XG5cbiAgICB0aGlzLmlzQW5vbnltb3VzID0gZmFsc2U7XG4gICAgdGhpcy5oYW5kbGVFcnJvcnMgPSB0cnVlO1xuICAgIHRoaXMuaWdub3JlTmV0d29ya0Vycm9yID0gZmFsc2U7XG4gICAgdGhpcy51cmwgPSBBcGlVdGlscy5idWlsZFVybChlbmRwb2ludCk7XG4gICAgdGhpcy5fc2V0dXBSZXF1ZXN0KG1ldGhvZCk7XG4gIH1cblxuICBzZXRBbm9ueW1vdXMoaXNBbm9ueW1vdXMpIHtcbiAgICB0aGlzLmlzQW5vbnltb3VzID0gaXNBbm9ueW1vdXM7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHNldEhhbmRsZUVycm9ycyhoYW5kbGVFcnJvcnMpIHtcbiAgICB0aGlzLmhhbmRsZUVycm9ycyA9IGhhbmRsZUVycm9ycztcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgc2V0SWdub3JlTmV0d29ya0Vycm9yKGlnbm9yZU5ldHdvcmtFcnJvcikge1xuICAgIHRoaXMuaWdub3JlTmV0d29ya0Vycm9yID0gaWdub3JlTmV0d29ya0Vycm9yO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBjb25maWd1cmUoY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayh0aGlzLnJlcXVlc3QpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzZW5kKGNhbGxiYWNrLCBlcnJDYWxsYmFjaykge1xuICAgIGlmICh0aGlzLmlzQW5vbnltb3VzKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2VuZEl0KGNhbGxiYWNrLCBlcnJDYWxsYmFjayk7XG4gICAgfVxuXG4gICAgLy8gU2VuZCB3aXRoIHByb3BlciBhdXRoZW50aWNhdGlvbjpcbiAgICBBY2Nlc3NUb2tlbi5nZXQoKVxuICAgICAgLnRoZW4odG9rZW4gPT4ge1xuICAgICAgICB0aGlzLnF1ZXJ5KHt0b2tlbn0pO1xuICAgICAgICB0aGlzLl9zZW5kSXQoY2FsbGJhY2ssIGVyckNhbGxiYWNrKTtcbiAgICAgIH0pXG4gICAgICAvLyAuY2F0Y2goKCkgPT4gQWN0aW9ucy5sb2dvdXQoKSk7XG4gIH1cblxuICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgKiBIZWxwZXIvV3JhcHBlciBGdW5jdGlvbnMgKlxuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICBkYXRhKGRhdGEpIHtcbiAgICB0aGlzLnJlcXVlc3RCb2R5ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHF1ZXJ5KGRhdGEpIHtcbiAgICB0aGlzLnF1ZXJ5RGF0YSA9IE9iamVjdC5hc3NpZ24odGhpcy5xdWVyeURhdGEsIGRhdGEpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBoZWFkZXIoaGVhZGVyLCB2YWx1ZSkge1xuICAgIHRoaXMucmVxdWVzdEhlYWRlcnNbaGVhZGVyXSA9IHZhbHVlO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBoZWFkZXJzKGhlYWRlcnMpIHtcbiAgICB0aGlzLnJlcXVlc3RIZWFkZXJzID0gT2JqZWN0LmFzc2lnbih0aGlzLnJlcXVlc3RIZWFkZXJzLCBoZWFkZXJzKVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBfc2V0dXBSZXF1ZXN0KG1ldGhvZCkge1xuICAgIHRoaXMucmVxdWVzdE1ldGhvZCA9ICghIG1ldGhvZCkgPyAnZ2V0JyA6IG1ldGhvZDtcbiAgICB0aGlzLnJlcXVlc3RIZWFkZXJzID0ge1xuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgfTtcblxuICAgIHRoaXMucXVlcnlEYXRhID0ge307XG4gICAgdGhpcy5yZXF1ZXN0Qm9keSA9IHt9O1xuICAgIHRoaXMucmVxdWVzdCA9IG51bGw7XG4gIH1cblxuICBfc2VuZEl0KGNhbGxiYWNrLCBlcnJDYWxsYmFjaykge1xuICAgIEFwaVJlcXVlc3QudXBkYXRlTmV0d29ya0luZGljYXRvcignKycpO1xuXG4gICAgdGhpcy5yZXF1ZXN0ID0gUmVxdWVzdFt0aGlzLnJlcXVlc3RNZXRob2RdKHRoaXMudXJsKTtcblxuICAgIGlmICghIFV0aWxzLmlzRW1wdHkodGhpcy5xdWVyeURhdGEpKSB7XG4gICAgICB0aGlzLnJlcXVlc3QucXVlcnkodGhpcy5xdWVyeURhdGEpO1xuICAgIH1cblxuICAgIGlmICghIFV0aWxzLmlzRW1wdHkodGhpcy5yZXF1ZXN0SGVhZGVycykpIHtcbiAgICAgIHRoaXMucmVxdWVzdC5zZXQodGhpcy5yZXF1ZXN0SGVhZGVycyk7XG4gICAgfVxuXG4gICAgdGhpcy5yZXF1ZXN0XG4gICAgICAuc2VuZCh0aGlzLnJlcXVlc3RCb2R5KVxuICAgICAgLy8ud2l0aENyZWRlbnRpYWxzKClcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIEFwaVJlcXVlc3QudXBkYXRlTmV0d29ya0luZGljYXRvcigpO1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgLy8gSSBrbm93IHdoZW4gdGhhdCBob3QgbGluZSBibGluZzpcbiAgICAgICAgICBjYWxsYmFjayhyZXMuYm9keSk7XG4gICAgICAgIH0gZWxzZSBpZiAocmVzLnVuYXV0aG9yaXplZCkge1xuICAgICAgICAgIC8vIFVuYXV0aG9yaXplZCByZXF1ZXN0OlxuICAgICAgICAgIEFjY2Vzc1Rva2VuLmNsZWFyKCk7XG4gICAgICAgICAgQWN0aW9ucy5ub2F1dGgoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3QgT0s6XG4gICAgICAgICAgaWYgKHRoaXMuaGFuZGxlRXJyb3JzKSB7XG4gICAgICAgICAgICBBcGlVdGlscy5oYW5kbGVFcnJvcihyZXMuYm9keS5lcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIENhbGwgdGhlIGVycm9yIGNhbGxiYWNrIHNvIHZpZXdzIGNhbiByZXNwb25kOlxuICAgICAgICAgIGlmIChlcnJDYWxsYmFjaykgZXJyQ2FsbGJhY2socmVzLmJvZHkuZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxufSIsImltcG9ydCBVdGlscyBmcm9tICcuLi9VdGlscy9VdGlscyc7XG5pbXBvcnQge0NvbmZpZ30gZnJvbSAnLi4vVXRpbHMvQ29uc3RhbnRzJztcblxuY29uc3QgREVGQVVMVF9FUlJPUiA9ICdUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggeW91ciByZXF1ZXN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpVXRpbHMge1xuXG4gIHN0YXRpYyBoYW5kbGVFcnJvcihlcnIpIHtcbiAgICBjb25zb2xlLndhcm4oZXJyKTtcbiAgICBVdGlscy5zaG93RXJyb3IoZXJyLm1lc3NhZ2UgfHwgREVGQVVMVF9FUlJPUik7XG4gIH1cblxuICBzdGF0aWMgaGFuZGxlTmV0d29ya0Vycm9yKGVycikge1xuICAgIGNvbnNvbGUud2FybihlcnIpO1xuICAgIC8vIHNob3cgb2ZmbGluZSBtb2RlXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIGVuZHBvaW50XG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgYnVpbGRVcmwoZW5kcG9pbnQpIHtcbiAgICAgIGVuZHBvaW50ID0gVXRpbHMudHJpbUNoYXIoZW5kcG9pbnQsICcvJyk7XG5cbiAgICAgIGlmIChlbmRwb2ludC5pbmRleE9mKENvbmZpZy5hcGlfcm9vdCkgPT09IC0xKSB7XG4gICAgICAgICAgZW5kcG9pbnQgPSBDb25maWcuYXBpX3Jvb3QgKyBlbmRwb2ludDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGVuZHBvaW50O1xuICB9XG5cbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQgQXBpUmVxdWVzdCBmcm9tICcuLi9BcGkvQXBpUmVxdWVzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2luRm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7fTtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHt9O1xuXG4gICAgdGhpcy5vblN1Ym1pdCA9IHRoaXMub25TdWJtaXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGZvcm0gY2xhc3NOYW1lPVwibmF2YmFyLWZvcm0gbmF2YmFyLXJpZ2h0XCIgcm9sZT1cImZvcm1cIiBvblN1Ym1pdD17dGhpcy5vblN1Ym1pdH0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiIHN0eWxlPXtzdHlsZXMuZm9ybUZpZWxkfT5cbiAgICAgICAgICA8aW5wdXQgcmVmPVwidXNlcm5hbWVcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwidXNlcm5hbWVcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwXCIgc3R5bGU9e3N0eWxlcy5mb3JtRmllbGR9PlxuICAgICAgICAgIDxpbnB1dCByZWY9XCJwYXNzd29yZFwiIHR5cGU9XCJwYXNzd29yZFwiIHBsYWNlaG9sZGVyPVwicGFzc3dvcmRcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1kZWZhdWx0XCI+U2lnbiBpbjwvYnV0dG9uPlxuICAgICAgPC9mb3JtPlxuICAgICk7XG4gIH1cblxuICBvblN1Ym1pdChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgdXNlcm5hbWU6IHRoaXMucmVmcy51c2VybmFtZS52YWx1ZSxcbiAgICAgIHBhc3N3b3JkOiB0aGlzLnJlZnMucGFzc3dvcmQudmFsdWUsXG4gICAgfTtcblxuICAgIEFjdGlvbnMubG9naW4oZGF0YSk7XG4gIH1cbn1cblxudmFyIHN0eWxlcyA9IHtcbiAgZm9ybUZpZWxkOiB7XG4gICAgbWFyZ2luOiAzLFxuICB9LFxufTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IERyb3B6b25lIGZyb20gJ2Ryb3B6b25lJztcbmltcG9ydCB7Q29uZmlnfSBmcm9tICcuLi9VdGlscy9Db25zdGFudHMnO1xuaW1wb3J0IFV0aWxzIGZyb20gJy4uL1V0aWxzL1V0aWxzJztcbmltcG9ydCBBcGlVdGlscyBmcm9tICcuLi9BcGkvQXBpVXRpbHMnO1xuaW1wb3J0IEFjY2Vzc1Rva2VuIGZyb20gJy4uL0FwaS9BY2Nlc3NUb2tlbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNSRHJvcHpvbmUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHN0eWxlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LFxuICAgIGFjdGl2ZVN0eWxlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LFxuICAgIG11bHRpcGxlOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgfTtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzdHlsZToge30sXG4gICAgYWN0aXZlU3R5bGU6IHt9LFxuICAgIG11bHRpcGxlOiB0cnVlLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5kcm9wem9uZSA9IG51bGw7XG5cbiAgICB0aGlzLnN0YXRlID0ge307XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBBY2Nlc3NUb2tlbi5nZXQoKVxuICAgICAgLnRoZW4odG9rZW4gPT4ge1xuICAgICAgICBsZXQgZHpPcHRpb25zID0ge1xuICAgICAgICAgIHVybDogQXBpVXRpbHMuYnVpbGRVcmwoJy91cGxvYWQtZmlsZT90b2tlbj0nK3Rva2VuKSxcbiAgICAgICAgICBkaWN0RGVmYXVsdE1lc3NhZ2U6IFwiRHJhZ29uIERyb3AgSW1hZ2VzIG9yIENsaWNrIHRvIFVwbG9hZFwiLFxuICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICB0aGlzLm9uKFwic3VjY2Vzc1wiLCAoZmlsZSwgcmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coZmlsZSwgcmVzcG9uc2UpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMub24oXCJhZGRlZGZpbGVcIiwgZmlsZSA9PiB7XG4gICAgICAgICAgICAgIC8vIEFwcGVuZCBiYXNlVXJsIHRvIHRoZSBmaWxlIHByZXZpZXcgZWxlbWVudC5cbiAgICAgICAgICAgICAgbGV0IGR6TmFtZSA9IGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtZHotbmFtZV0nKVxuICAgICAgICAgICAgICBkek5hbWUuaW5uZXJIVE1MID0gQ29uZmlnLnVwbG9hZHNfZGlyICsgZmlsZS5uYW1lO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmRyb3B6b25lID0gbmV3IERyb3B6b25lKHRoaXMucmVmcy5kcm9wem9uZSwgZHpPcHRpb25zKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHJlZj1cImRyb3B6b25lXCIgc3R5bGU9e3RoaXMucHJvcHMuc3R5bGV9IGNsYXNzTmFtZT1cImRyb3B6b25lXCI+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQWN0aW9ucyBmcm9tICcuLi9VdGlscy9BY3Rpb25zJztcbmltcG9ydCBDdXJyZW50VXNlciBmcm9tICcuLi9TdG9yZXMvQ3VycmVudFVzZXInO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyTWVudSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgdXNlcjogUmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcbiAgfTtcblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIHVzZXI6IHt9LFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHVzZXI6IHRoaXMucHJvcHMudXNlcixcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHRoaXMuc3RvcExpc3RlbmluZyA9IEN1cnJlbnRVc2VyLmxpc3Rlbih0aGlzLl9vblVzZXJDaGFuZ2UuYmluZCh0aGlzKSk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHt1c2VyOiBDdXJyZW50VXNlci5nZXQoKX0pO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5zdG9wTGlzdGVuaW5nKCk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDx1bCBjbGFzc05hbWU9XCJuYXYgbmF2YmFyLW5hdiBuYXZiYXItcmlnaHRcIj5cbiAgICAgICAgPGxpIGNsYXNzTmFtZT1cImRyb3Bkb3duXCI+XG4gICAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzc05hbWU9XCJkcm9wZG93bi10b2dnbGVcIiBkYXRhLXRvZ2dsZT1cImRyb3Bkb3duXCIgcm9sZT1cImJ1dHRvblwiIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XG4gICAgICAgICAgICB7dGhpcy5zdGF0ZS51c2VyLnVzZXJuYW1lfVxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2FyZXRcIj48L3NwYW4+XG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJkcm9wZG93bi1tZW51XCI+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCIvYWRtaW4vcGFnZS1lZGl0b3JcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJnbHlwaGljb24gZ2x5cGhpY29uLXBsdXMtc2lnblwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHN0eWxlPXtzdHlsZXMuaWNvbn0+PC9zcGFuPlxuICAgICAgICAgICAgICAgIEFkZCBQYWdlXG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCIvYWRtaW4vcGFnZS1pbnZlbnRvcnlcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJnbHlwaGljb24gZ2x5cGhpY29uLWVkaXRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT17c3R5bGVzLmljb259Pjwvc3Bhbj5cbiAgICAgICAgICAgICAgICBFZGl0IFNvbWV0aGluZ1xuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpIHJvbGU9XCJzZXBhcmF0b3JcIiBjbGFzc05hbWU9XCJkaXZpZGVyXCI+PC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJkcm9wZG93bi1oZWFkZXJcIj5NeSBBY2NvdW50PC9saT5cbiAgICAgICAgICAgIDxsaT48YSBocmVmPVwiI1wiIG9uQ2xpY2s9e3RoaXMuX29uTG9nb3V0UHJlc3N9PlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJnbHlwaGljb24gZ2x5cGhpY29uLWxvZy1vdXRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT17c3R5bGVzLmljb259Pjwvc3Bhbj5cbiAgICAgICAgICAgICAgU2lnbiBPdXRcbiAgICAgICAgICAgIDwvYT48L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgICk7XG4gIH1cblxuICBfb25Mb2dvdXRQcmVzcyhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIEFjdGlvbnMubG9nb3V0KCk7XG4gIH1cblxuICBfb25Vc2VyQ2hhbmdlKHVzZXIpIHtcbiAgICB0aGlzLnNldFN0YXRlKHt1c2VyfSk7XG4gIH1cbn1cblxudmFyIHN0eWxlcyA9IHtcbiAgaWNvbjoge1xuICAgIHBhZGRpbmdSaWdodDogJzVweCcsXG4gIH0sXG59OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQWN0aW9ucyBmcm9tICcuLi9VdGlscy9BY3Rpb25zJztcbmltcG9ydCBDdXJyZW50VXNlciBmcm9tICcuLi9TdG9yZXMvQ3VycmVudFVzZXInO1xuaW1wb3J0IExvZ2luRm9ybSBmcm9tICcuL0xvZ2luRm9ybSc7XG5pbXBvcnQgVXNlck1lbnUgZnJvbSAnLi9Vc2VyTWVudSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJOYXYgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge307XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7fTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgdXNlcjoge30sXG4gICAgfTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB0aGlzLnN0b3BMaXN0ZW5pbmcgPSBDdXJyZW50VXNlci5saXN0ZW4odGhpcy5fb25Vc2VyQ2hhbmdlLmJpbmQodGhpcykpO1xuICAgIHRoaXMuc3RvcEF1dGhMaXN0ZW4gPSBBY3Rpb25zLm5vYXV0aC5saXN0ZW4oKCkgPT4gdGhpcy5zZXRTdGF0ZSh7bG9hZGluZzogZmFsc2V9KSk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHt1c2VyOiBDdXJyZW50VXNlci5nZXQoKX0pO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5zdG9wTGlzdGVuaW5nKCk7XG4gICAgdGhpcy5zdG9wQXV0aExpc3RlbigpO1xuICB9XG5cbiAgcmVuZGVyTG9naW5Gb3JtKCkge1xuICAgIHJldHVybiA8TG9naW5Gb3JtIC8+O1xuICB9XG5cbiAgcmVuZGVyVXNlck1lbnUoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxVc2VyTWVudSB1c2VyPXt0aGlzLnN0YXRlLnVzZXJ9IC8+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5sb2FkaW5nKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICAgIHt0aGlzLnN0YXRlLnVzZXIuaWQgPyB0aGlzLnJlbmRlclVzZXJNZW51KCkgOiB0aGlzLnJlbmRlckxvZ2luRm9ybSgpfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIF9vblVzZXJDaGFuZ2UodXNlcikge1xuICAgIHRoaXMuc2V0U3RhdGUoe3VzZXIsIGxvYWRpbmc6IGZhbHNlfSk7XG4gIH1cblxufVxuXG52YXIgc3R5bGVzID0ge1xuICBjb250YWluZXI6IHtcbiAgICBoZWlnaHQ6ICc1NnB4JyxcbiAgfSxcbiAgdXNlcm5hbWU6IHtcbiAgICBtYXJnaW46IDMsXG4gICAgbGluZUhlaWdodDogJzQ0cHgnLFxuICAgIGNvbG9yOiAnd2hpdGUnLFxuICB9LFxufTsiLCJpbXBvcnQgUmVmbHV4IGZyb20gJ3JlZmx1eCc7XG5cbmltcG9ydCBBY3Rpb25zIGZyb20gJy4uL1V0aWxzL0FjdGlvbnMnO1xuaW1wb3J0IHtDb25maWd9IGZyb20gJy4uL1V0aWxzL0NvbnN0YW50cyc7XG5pbXBvcnQgQXBpUmVxdWVzdCBmcm9tICcuLi9BcGkvQXBpUmVxdWVzdCc7XG5pbXBvcnQgQXBpVXRpbHMgZnJvbSAnLi4vQXBpL0FwaVV0aWxzJztcbmltcG9ydCBBY2Nlc3NUb2tlbiBmcm9tICcuLi9BcGkvQWNjZXNzVG9rZW4nO1xuXG5jb25zdCBkZWZhdWx0VXNlciA9IHtcbiAgaWQ6IG51bGwsXG4gIHVzZXJuYW1lOiBudWxsLFxuICBzZXNzaW9uX2lkOiBudWxsLFxufTtcblxuLy8gY29weSBkZWZhdWx0VXNlciB0byBjdXJyZW50VXNlclxubGV0IGN1cnJlbnRVc2VyID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdFVzZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBSZWZsdXguY3JlYXRlU3RvcmUoe1xuICAvLyB0aGlzIHdpbGwgc2V0IHVwIGxpc3RlbmVycyB0byBhbGwgcHVibGlzaGVycyBpbiBBY3Rpb25zLCB1c2luZyBvbktleW5hbWUgKG9yIGtleW5hbWUpIGFzIGNhbGxiYWNrc1xuICBsaXN0ZW5hYmxlczogW0FjdGlvbnNdLFxuXG4gIC8vIEluaXRpYWwgc2V0dXBcbiAgaW5pdCgpIHtcbiAgICAvLyBubyBvcFxuICB9LFxuXG4gIGdldCgpIHtcbiAgICByZXR1cm4gY3VycmVudFVzZXI7XG4gIH0sXG5cbiAgdXBkYXRlKHVzZXJVcGRhdGVzKSB7XG4gICAgY3VycmVudFVzZXIgPSBPYmplY3QuYXNzaWduKHt9LCB1c2VyVXBkYXRlcyk7XG4gICAgdGhpcy50cmlnZ2VyKGN1cnJlbnRVc2VyKTtcbiAgfSxcblxuICAvLyBVc2VyIExvZ2luOlxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIG9uTG9naW4oY3JlZHMpIHtcbiAgICBBcGlSZXF1ZXN0LnBvc3QoJy9hY2NvdW50L2xvZ2luJylcbiAgICAgIC5kYXRhKGNyZWRzKVxuICAgICAgLnNldEFub255bW91cyh0cnVlKVxuICAgICAgLnNlbmQocmVzID0+IHtcbiAgICAgICAgQWNjZXNzVG9rZW4uc2V0KHJlcy5kYXRhLnNlc3Npb25faWQpXG4gICAgICAgICAgLnRoZW4oKCkgPT4gQWN0aW9ucy5sb2dpbi5jb21wbGV0ZWQocmVzKSk7XG4gICAgICB9LCBBY3Rpb25zLmxvZ2luLmZhaWxlZCk7XG4gIH0sXG4gIG9uTG9naW5Db21wbGV0ZWQocmVzcG9uc2UpIHtcbiAgICBsZXQgdXNlciA9IHJlc3BvbnNlLmRhdGE7XG4gICAgdGhpcy51cGRhdGUodXNlcik7XG4gIH0sXG5cbiAgLy8gVXNlciBMb2dvdXQ6XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgb25Mb2dvdXQoKSB7XG4gICAgQXBpUmVxdWVzdC5wb3N0KCcvYWNjb3VudC9sb2dvdXQnKVxuICAgICAgLnNldEhhbmRsZUVycm9ycyhmYWxzZSlcbiAgICAgIC5zZXRJZ25vcmVOZXR3b3JrRXJyb3IodHJ1ZSlcbiAgICAgIC5zZW5kKEFjdGlvbnMubG9nb3V0LmNvbXBsZXRlZCwgQWN0aW9ucy5sb2dvdXQuZmFpbGVkKTtcblxuICAgIC8vIHJlc2V0IGN1cnJlbnRVc2VyIHRvIGRlZmF1bHRcbiAgICB0aGlzLnVwZGF0ZShkZWZhdWx0VXNlcik7XG4gIH0sXG4gIG9uTG9nb3V0Q29tcGxldGVkKCkge1xuICAgIEFjY2Vzc1Rva2VuLmNsZWFyKCk7XG4gIH0sXG4gIG9uTG9nb3V0RmFpbGVkKCkge1xuICAgIEFjY2Vzc1Rva2VuLmNsZWFyKCk7XG4gIH0sXG5cbiAgLy8gTG9hZCBVc2VyOlxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIG9uTG9hZFVzZXIoKSB7XG4gICAgQXBpUmVxdWVzdC5nZXQoJy9hY2NvdW50JylcbiAgICAgIC5zZW5kKEFjdGlvbnMubG9hZFVzZXIuY29tcGxldGVkLCBBY3Rpb25zLmxvYWRVc2VyLmZhaWxlZCk7XG4gIH0sXG4gIG9uTG9hZFVzZXJDb21wbGV0ZWQocmVzcG9uc2UpIHtcbiAgICB0aGlzLnVwZGF0ZShyZXNwb25zZS5kYXRhKTtcbiAgfSxcbn0pOyIsImltcG9ydCBSZWZsdXggZnJvbSAncmVmbHV4JztcbmltcG9ydCBBY2Nlc3NUb2tlbiBmcm9tICcuLi9BcGkvQWNjZXNzVG9rZW4nO1xuaW1wb3J0IEFwaVJlcXVlc3QgZnJvbSAnLi4vQXBpL0FwaVJlcXVlc3QnO1xuXG4vLyBFYWNoIGFjdGlvbiBpcyBsaWtlIGFuIGV2ZW50IGNoYW5uZWwgZm9yIG9uZSBzcGVjaWZpYyBldmVudC4gQWN0aW9ucyBhcmUgY2FsbGVkIGJ5IGNvbXBvbmVudHMuXG4vLyBUaGUgc3RvcmUgaXMgbGlzdGVuaW5nIHRvIGFsbCBhY3Rpb25zLCBhbmQgdGhlIGNvbXBvbmVudHMgaW4gdHVybiBhcmUgbGlzdGVuaW5nIHRvIHRoZSBzdG9yZS5cbi8vIFRodXMgdGhlIGZsb3cgaXM6IFVzZXIgaW50ZXJhY3Rpb24gLT4gY29tcG9uZW50IGNhbGxzIGFjdGlvbiAtPiBzdG9yZSByZWFjdHMgYW5kIHRyaWdnZXJzIC0+IGNvbXBvbmVudHMgdXBkYXRlXG5cbnZhciBBY3Rpb25zID0gUmVmbHV4LmNyZWF0ZUFjdGlvbnMoW1xuICAvLyB1c2VyIGFjdGlvbnNcbiAgXCJhdXRoXCIsXG4gIFwidW5hdXRoXCIsXG4gIFwibm9hdXRoXCIsXG4gIHtcImxvZ2luXCI6IHthc3luY1Jlc3VsdDogdHJ1ZX19LFxuICB7XCJsb2dvdXRcIjoge2FzeW5jUmVzdWx0OiB0cnVlfX0sXG4gIHtcImxvYWRVc2VyXCI6IHthc3luY1Jlc3VsdDogdHJ1ZX19LFxuXSk7XG5cbi8qIFVzZXIgQWN0aW9uc1xuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuQWN0aW9ucy5hdXRoLmxpc3RlbigoKSA9PiB7XG4gIEFjY2Vzc1Rva2VuLmdldCh0cnVlKVxuICAgIC50aGVuKGFjY2Vzc1Rva2VuID0+IEFjdGlvbnMubG9hZFVzZXIoYWNjZXNzVG9rZW4pKVxuICAgIC5jYXRjaCgoKSA9PiBBY3Rpb25zLm5vYXV0aCgpKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBBY3Rpb25zOyIsInZhciBrZXlNaXJyb3IgPSByZXF1aXJlKCdrZXlNaXJyb3InKTtcblxuY29uc3QgSE9TVF9OQU1FID0gXCJjbGVmb29kYmxvZy5jb21cIjtcbmNvbnN0IEVOViA9ICh3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgPT09IEhPU1RfTkFNRSkgPyAncHJvZHVjdGlvbicgOiAnZGV2JztcblxudmFyIGlzUHJvZCAgICAgPSB0cnVlLFxuICAgIGFwaVZlcnNpb24gPSAndjEnLFxuICAgIGFwaUhvc3QgICAgPSAnaHR0cDovLycrSE9TVF9OQU1FKycvYXBpJyxcbiAgICBzaXRlUm9vdCAgID0gJ2h0dHA6Ly8nK0hPU1RfTkFNRTtcblxuc3dpdGNoIChFTlYpIHtcbiAgICBjYXNlICdkZXYnOlxuICAgICAgICBpc1Byb2QgICA9IGZhbHNlO1xuICAgICAgICBhcGlIb3N0ICA9ICdodHRwOi8vZGV2LicrSE9TVF9OQU1FKycvYXBpJztcbiAgICAgICAgc2l0ZVJvb3QgPSAnaHR0cDovL2Rldi4nK0hPU1RfTkFNRTtcbiAgICAgICAgYnJlYWs7XG59XG5cbmV4cG9ydCB2YXIgQ29uZmlnID0ge1xuICBFTlY6IEVOVixcbiAgYXBpX3Jvb3Q6IGFwaUhvc3QrJy8nLFxuICBzaXRlX3Jvb3Q6IHNpdGVSb290KycvJyxcbiAgdXBsb2Fkc19kaXI6IHNpdGVSb290KycvdXBsb2Fkcy8nLFxuXG4gIFN0b3JhZ2U6IGtleU1pcnJvcih7XG4gICAgQUNDRVNTX1RPS0VOOiBudWxsLFxuICB9KSxcbn07XG4iLCJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vVXRpbHMvQWN0aW9ucyc7XG5pbXBvcnQgVXNlck5hdiBmcm9tICcuLi9Db21wb25lbnRzL1VzZXJOYXYnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbml0aWFsaXplIHtcblxuICBzdGF0aWMgZ2xvYmFscygpIHtcbiAgICAvLyBFeHBvc2UgZ2xvYmFscyBsaWtlIGpRdWVyeVxuICAgIHdpbmRvdy5qUXVlcnkgPSAkO1xuICB9XG5cbiAgc3RhdGljIGJvb3RzdHJhcCgpIHtcbiAgICByZXF1aXJlKCdib290c3RyYXAnKTtcbiAgfVxuXG4gIHN0YXRpYyBvblJlYWR5KCkge1xuICAgIC8vIENsaWNrIG9uIGJpZyBidXR0b246XG4gICAgbGV0IGJhQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bkNvbWluZ1Nvb24nKTtcbiAgICBpZiAoYmFCdXR0b24pIHtcbiAgICAgIGJhQnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbigpe1xuICAgICAgICBpZiAoZ2EpIGdhKCdzZW5kJywgJ2V2ZW50JywgJ2J1dHRvbnMnLCAnY2xpY2snLCAnc3RheSB0dW5lZCcpO1xuICAgICAgICBjb25zb2xlLmxvZygnc2VuZCcsICdldmVudCcsICdidXR0b25zJywgJ2NsaWNrJywgJ3N0YXkgdHVuZWQnKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBTaG93IHRoYXQgdXNlciBuYXY6XG4gICAgUmVhY3RET00ucmVuZGVyKFxuICAgICAgPFVzZXJOYXYgLz4sXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnVXNlck5hdicpXG4gICAgKTtcbiAgfVxuXG4gIHN0YXRpYyBhdXRoVXNlcigpIHtcbiAgICBBY3Rpb25zLmF1dGgoKTtcbiAgfVxuXG4gIHN0YXRpYyBvbkxvYWQoKSB7XG4gICAgSW5pdGlhbGl6ZS5nbG9iYWxzKCk7XG4gICAgSW5pdGlhbGl6ZS5ib290c3RyYXAoKTtcbiAgICBJbml0aWFsaXplLm9uUmVhZHkoKTtcbiAgICBJbml0aWFsaXplLmF1dGhVc2VyKCk7XG4gIH1cbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IFV0aWxzIGZyb20gJy4uL1V0aWxzL1V0aWxzJztcbmltcG9ydCBQYWdlRWRpdG9yIGZyb20gJy4uL1ZpZXdzL1BhZ2VFZGl0b3InO1xuaW1wb3J0IFBhZ2VJbnZlbnRvcnkgZnJvbSAnLi4vVmlld3MvUGFnZUludmVudG9yeSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvdXRlcyB7XG5cbiAgc3RhdGljIGhvbWVSb3V0ZSA9ICdob21lJztcblxuICBzdGF0aWMgY3VycmVudChwYXRobmFtZSkge1xuICAgIHZhciBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWUocGF0aG5hbWUpIHx8IFJvdXRlcy5ob21lUm91dGU7XG4gICAgdmFyIGNhbWVsTmFtZSA9IGJhc2VuYW1lLnJlcGxhY2UoLy0oW2Etel0pL2csIGZ1bmN0aW9uIChnKSB7IHJldHVybiBnWzFdLnRvVXBwZXJDYXNlKCk7IH0pO1xuICAgIGlmICh0eXBlb2YgUm91dGVzW2NhbWVsTmFtZV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIFJvdXRlc1tjYW1lbE5hbWVdKCk7XG4gICAgfVxuICB9XG5cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEN1c3RvbSBSb3V0ZXM6XG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIHN0YXRpYyBob21lKCkge1xuICAgIGNvbnNvbGUubG9nKCdIb21lIHJvdXRlJyk7XG4gIH1cblxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQWRtaW4gUm91dGVzOlxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBzdGF0aWMgcGFnZUVkaXRvcigpIHtcbiAgICBSZWFjdERPTS5yZW5kZXIoXG4gICAgICA8UGFnZUVkaXRvciAvPixcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdQYWdlRWRpdG9yJylcbiAgICApO1xuICB9XG5cbiAgc3RhdGljIHBhZ2VJbnZlbnRvcnkoKSB7XG4gICAgUmVhY3RET00ucmVuZGVyKFxuICAgICAgPFBhZ2VJbnZlbnRvcnkgLz4sXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnUGFnZUludmVudG9yeScpXG4gICAgKTtcbiAgfVxuXG59XG4iLCJpbXBvcnQgeyBDb25maWcsIH0gZnJvbSAnLi9Db25zdGFudHMnO1xuaW1wb3J0IEh1bWFuZSBmcm9tICdodW1hbmUtanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVdGlscyB7XG5cbiAgc3RhdGljIHNob3dNZXNzYWdlID0gSHVtYW5lLnNwYXduKHtcbiAgICBhZGRuQ2xzOiAnYmctaW5mbyB0ZXh0LWluZm8nLFxuICAgIHdhaXRGb3JNb3ZlOiB0cnVlLFxuICB9KTtcblxuICBzdGF0aWMgc2hvd1N1Y2Nlc3MgPSBIdW1hbmUuc3Bhd24oe1xuICAgIGFkZG5DbHM6ICdiZy1zdWNjZXNzIHRleHQtc3VjY2VzcycsXG4gICAgd2FpdEZvck1vdmU6IHRydWUsXG4gIH0pO1xuXG4gIHN0YXRpYyBzaG93RXJyb3IgPSBIdW1hbmUuc3Bhd24oe1xuICAgIGFkZG5DbHM6ICdiZy1kYW5nZXIgdGV4dC1kYW5nZXInLFxuICAgIHRpbWVvdXQ6IDUwMDAsXG4gICAgY2xpY2tUb0Nsb3NlOiB0cnVlLFxuICAgIHdhaXRGb3JNb3ZlOiB0cnVlLFxuICB9KTtcblxuICAvKipcbiAgICogR2V0IEpTT04gZGF0YSBmcm9tIGFub3RoZXIgc2VydmVyLiBTdXBwb3J0ZWQgYmFjayB0byBJRTYuXG4gICAqIGNyZWRpdDogaHR0cDovL2dvbWFrZXRoaW5ncy5jb20vZGl0Y2hpbmctanF1ZXJ5XG4gICAqIEBwYXJhbSB1cmxcbiAgICogQHBhcmFtIGNhbGxiYWNrXG4gICAqL1xuICBzdGF0aWMgZ2V0SlNPTlAodXJsLCBjYWxsYmFjaykge1xuXG4gICAgLy8gQ3JlYXRlIHNjcmlwdCB3aXRoIHVybCBhbmQgY2FsbGJhY2sgKGlmIHNwZWNpZmllZClcbiAgICB2YXIgcmVmID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAnc2NyaXB0JyApWyAwIF07XG4gICAgdmFyIHNjcmlwdCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCAnc2NyaXB0JyApO1xuICAgIHNjcmlwdC5zcmMgPSB1cmwgKyAodXJsLmluZGV4T2YoICc/JyApICsgMSA/ICcmJyA6ICc/JykgKyAnY2FsbGJhY2s9JyArIGNhbGxiYWNrO1xuXG4gICAgLy8gSW5zZXJ0IHNjcmlwdCB0YWcgaW50byB0aGUgRE9NIChhcHBlbmQgdG8gPGhlYWQ+KVxuICAgIHJlZi5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggc2NyaXB0LCByZWYgKTtcblxuICAgIC8vIEFmdGVyIHRoZSBzY3JpcHQgaXMgbG9hZGVkIChhbmQgZXhlY3V0ZWQpLCByZW1vdmUgaXRcbiAgICBzY3JpcHQub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5yZW1vdmUoKTtcbiAgICB9O1xuXG4gIH1cblxuICAvKipcbiAgICogUXVvdGVzIHRoZSBnaXZlbiBzdHJpbmcgc28gaXQgY2FuIHNhZmVseSBiZSB1c2VkIGluIGEgUmVndWxhciBFeHByZXNzaW9uLlxuICAgKiBAcGFyYW0gcmVnZXhcbiAgICogQHJldHVybnMgeyp8c3RyaW5nfHZvaWR8WE1MfVxuICAgKi9cbiAgc3RhdGljIHF1b3RlUmVnZXgocmVnZXgpIHtcbiAgICAgIHJldHVybiByZWdleC5yZXBsYWNlKC8oWygpW3sqKy4kXlxcXFx8P10pL2csICdcXFxcJDEnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmltIHRoZSBnaXZlbiBjaGFyYWN0ZXIgZnJvbSBib3RoIGVuZHMgb2YgdGhlIGdpdmVuIHN0cmluZy5cbiAgICogQHBhcmFtIHN0clxuICAgKiBAcGFyYW0gY2hyXG4gICAqIEByZXR1cm5zIHsqfHN0cmluZ3x2b2lkfFhNTH1cbiAgICovXG4gIHN0YXRpYyB0cmltQ2hhcihzdHIsIGNocikge1xuICAgICAgY2hyID0gVXRpbHMucXVvdGVSZWdleChjaHIpO1xuICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKG5ldyBSZWdFeHAoJ14nICsgY2hyICsgJyt8JyArIGNociArICcrJCcsICdnJyksIFwiXCIpO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnQgYW4gb2JqZWN0IHRvIGEgcXVlcnkgc3RyaW5nLlxuICAgKiBjcmVkaXQ6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE3MTQ4OTlcbiAgICogQHBhcmFtIG9ialxuICAgKiBAcGFyYW0gcHJlZml4XG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgdG9RdWVyeVN0cmluZyhvYmosIHByZWZpeCkge1xuICAgIHZhciBzdHIgPSBbXTtcbiAgICBmb3IgKHZhciBwIGluIG9iaikge1xuICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwKSkge1xuICAgICAgICB2YXIgayA9IHByZWZpeCA/IHByZWZpeCArIFwiW1wiICsgcCArIFwiXVwiIDogcCwgdiA9IG9ialtwXTtcbiAgICAgICAgc3RyLnB1c2godHlwZW9mIHYgPT0gXCJvYmplY3RcIiA/XG4gICAgICAgICAgVXRpbHMudG9RdWVyeVN0cmluZyh2LCBrKSA6IGVuY29kZVVSSUNvbXBvbmVudChrKSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHYpKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN0ci5qb2luKFwiJlwiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyBvYmplY3QgZW1wdHk/XG4gICAqIEBwYXJhbSAgb2JqXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBzdGF0aWMgaXNFbXB0eShvYmopIHtcbiAgICBpZiAob2JqID09IG51bGwpIHJldHVybiB0cnVlO1xuICAgIGlmIChvYmoubGVuZ3RoID4gMCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChvYmoubGVuZ3RoID09PSAwKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKS5sZW5ndGggPiAwKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvKipcbiAgICogQ2xlYW4gc3RyaW5nIGZvciB1c2UgaW4gVVJMXG4gICAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gICAqIEByZXR1cm4ge3N0cmluZ30gdXJpXG4gICAqIENyZWRpdDogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTQ5NjIzNjkvNTc4MDM4NVxuICAgKi9cbiAgc3RhdGljIGNsZWFuRm9yVXJsKHN0cikge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvKF5cXC0rfFteYS16QS1aMC05XFwvX3wgLV0rfFxcLSskKS9nLCAnJylcbiAgICAgICAgICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgICAgLnJlcGxhY2UoL1tcXC9ffCAtXSsvZywgJy0nKTtcbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCBFZGl0b3IgZnJvbSAncmVhY3QtbWVkaXVtLWVkaXRvcic7XG5pbXBvcnQgRGF0ZVRpbWVJbnB1dCBmcm9tICdyZWFjdC1ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXInO1xuXG5pbXBvcnQgVXRpbHMgZnJvbSAnLi4vVXRpbHMvVXRpbHMnO1xuaW1wb3J0IEFwaVJlcXVlc3QgZnJvbSAnLi4vQXBpL0FwaVJlcXVlc3QnO1xuaW1wb3J0IEN1cnJlbnRVc2VyIGZyb20gJy4uL1N0b3Jlcy9DdXJyZW50VXNlcic7XG5pbXBvcnQgU1JEcm9wem9uZSBmcm9tICcuLi9Db21wb25lbnRzL1NSRHJvcHpvbmUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWdlRWRpdG9yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHt9O1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge307XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnBvc3RUaW1lc3RhbXAgPSBudWxsO1xuICAgIHRoaXMuaGFzQ3VzdG9tVXJpID0gZmFsc2U7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgYXV0aG9yaXplZDogdHJ1ZSxcbiAgICAgIHB1Ymxpc2hpbmc6IGZhbHNlLFxuICAgICAgcHJvY2Vzc2luZzogZmFsc2UsXG4gICAgICB1c2VyOiB0aGlzLnByb3BzLnVzZXIsXG4gICAgICBhcnRpY2xlOiBcIlwiLFxuICAgICAgdXJpOiBcIlwiLFxuICAgICAgcGFnZUlkOiBudWxsLFxuICAgIH07XG5cbiAgICB0aGlzLl9vblN1Ym1pdFBhZ2UgPSB0aGlzLl9vblN1Ym1pdFBhZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vblB1Ymxpc2ggPSB0aGlzLl9vblB1Ymxpc2guYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vblBvc3REYXRlQ2hhbmdlID0gdGhpcy5fb25Qb3N0RGF0ZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uVXBkYXRlUGFnZVVyaSA9IHRoaXMuX29uVXBkYXRlUGFnZVVyaS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uQ2hhbmdlVXJpID0gdGhpcy5fb25DaGFuZ2VVcmkuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vbkJsdXJVcmkgPSB0aGlzLl9vbkJsdXJVcmkuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vbkFydGljbGVDaGFuZ2UgPSB0aGlzLl9vbkFydGljbGVDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vblVzZXJDaGFuZ2UgPSB0aGlzLl9vblVzZXJDaGFuZ2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB0aGlzLnN0b3BVc2VyU3Vic2NyaWJlID0gQ3VycmVudFVzZXIubGlzdGVuKHRoaXMuX29uVXNlckNoYW5nZSk7XG5cbiAgICBsZXQgdXNlciA9IEN1cnJlbnRVc2VyLmdldCgpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgYXV0aG9yaXplZDogISEgdXNlci5pZCxcbiAgICAgIHVzZXIsXG4gICAgfSk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnN0b3BVc2VyU3Vic2NyaWJlKCk7XG4gIH1cblxuICByZW5kZXJQcm9ncmVzc0JhcigpIHtcbiAgICBsZXQgYmFyQ2xhc3NOYW1lID0gdGhpcy5zdGF0ZS5wdWJsaXNoaW5nID8gJ3Byb2dyZXNzLWJhci1zdWNjZXNzJyA6ICdwcm9ncmVzcy1iYXItaW5mbyc7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3NcIiBzdHlsZT17e2hlaWdodDogXCJhdXRvXCJ9fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wicHJvZ3Jlc3MtYmFyIFwiK2JhckNsYXNzTmFtZStcIiBwcm9ncmVzcy1iYXItc3RyaXBlZCBhY3RpdmVcIn0gcm9sZT1cInByb2dyZXNzYmFyXCIgYXJpYS12YWx1ZW5vdz1cIjEwMFwiIGFyaWEtdmFsdWVtaW49XCIwXCIgYXJpYS12YWx1ZW1heD1cIjEwMFwiIHN0eWxlPXtzdHlsZXMucHJvZ3Jlc3NCYXJ9PlxuICAgICAgICAgIHt0aGlzLnN0YXRlLnB1Ymxpc2hpbmcgPyAnUHVibGlzaGluZy4uLicgOiAnU2F2aW5nLi4uJ31cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyU3VibWl0QnV0dG9uKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLnByb2Nlc3NpbmcpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlclByb2dyZXNzQmFyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzTmFtZT1cImJ0biBidG4tbGcgYnRuLWluZm9cIiBzdHlsZT17c3R5bGVzLmJ1dHRvbn0+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1wbHVzLXNpZ25cIj48L3NwYW4+XG4gICAgICAgICAgeycgU2F2ZSBQYWdlJ31cbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tbGcgYnRuLXN1Y2Nlc3NcIiBzdHlsZT17c3R5bGVzLmJ1dHRvbn0gb25DbGljaz17dGhpcy5fb25QdWJsaXNofT5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJnbHlwaGljb24gZ2x5cGhpY29uLW9rLXNpZ25cIj48L3NwYW4+XG4gICAgICAgICAgeycgUHVibGlzaCBQYWdlJ31cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICghIHRoaXMuc3RhdGUuYXV0aG9yaXplZCkgcmV0dXJuIDxoND5NdXN0IGJlIGxvZ2dlZCBpbiA6KDwvaDQ+O1xuXG4gICAgbGV0IGltYWdlQnV0dG9uID0ge1xuICAgICAgbmFtZTogJ2ltYWdlJyxcbiAgICAgIGFjdGlvbjogJ2ltYWdlJyxcbiAgICAgIGFyaWE6ICdpbWFnZScsXG4gICAgICB0YWdOYW1lczogWydpbWcnXSxcbiAgICAgIGNvbnRlbnREZWZhdWx0OiAnPGkgY2xhc3M9XCJnbHlwaGljb24gZ2x5cGhpY29uLXBpY3R1cmVcIj48L2k+JyxcbiAgICAgIGNvbnRlbnRGQTogJzxpIGNsYXNzPVwiZmEgZmEtcGljdHVyZS1vXCI+PC9pPidcbiAgICB9O1xuICAgIGxldCBlZGl0b3JPcHRpb25zID0ge1xuICAgICAgcGxhY2Vob2xkZXI6IHt0ZXh0OiBcIkFydGljbGUgYm9keS4uLlwifSxcbiAgICAgIHRvb2xiYXI6IHtcbiAgICAgICAgYnV0dG9uczogWydib2xkJywgJ2l0YWxpYycsICdhbmNob3InLCAnaDInLCAnaDMnLCAncXVvdGUnLCAndW5vcmRlcmVkbGlzdCcsIGltYWdlQnV0dG9uXSxcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIGxldCBjYXRlZ29yaWVzID0gW1wiUmV2aWV3c1wiLCBcIlJlY2lwZXNcIiwgXCJIb3cgVG8nc1wiLCBcIkZyaWRheSBGb29kIEZpZ2h0XCIsIFwiV2hlcmUgVG8gRmluZC4uLlwiXTtcblxuICAgIC8vIGFkZCAuaGFzLXN1Y2Nlc3Mgb3IgLmhhcy1lcnJvclxuICAgIC8vIC5nbHlwaGljb24tb2sgb3IgLmdseXBoaWNvbi1yZW1vdmVcbiAgICByZXR1cm4gKFxuICAgICAgPGZvcm0gcmVmPVwiYWRkTmV3UGFnZVwiIGNsYXNzTmFtZT1cIlwiIHJvbGU9XCJmb3JtXCIgb25TdWJtaXQ9e2UgPT4gdGhpcy5fb25TdWJtaXRQYWdlKGUpfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC14cy0xMlwiPlxuICAgICAgICAgICAgPGgxPlBhZ2UgRWRpdG9yPC9oMT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtNFwiPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibGVhZFwiPjxlbT5EYXRhIGFib3V0IGRhdGE6PC9lbT48L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtOFwiPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibGVhZFwiPjxlbT5TcGl0IHlvdXIga25vd2xlZGdlIGdhbWU6PC9lbT48L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXhzLTRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8RGF0ZVRpbWVJbnB1dFxuICAgICAgICAgICAgICAgIHNpemU9eydsZyd9XG4gICAgICAgICAgICAgICAgZGVmYXVsdFRleHQ9eycnfVxuICAgICAgICAgICAgICAgIGlucHV0UHJvcHM9e3twbGFjZWhvbGRlcjogXCJBcnRpY2xlIERhdGUvVGltZVwifX1cbiAgICAgICAgICAgICAgICBmb3JtYXQ9eyd4J31cbiAgICAgICAgICAgICAgICBpbnB1dEZvcm1hdD17J1lZWVktTU0tREQgaGg6bW0gQSd9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuX29uUG9zdERhdGVDaGFuZ2V9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8aW5wdXQgcmVmPVwicGFnZVVyaVwiXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJDdXN0b20tUGFnZS1VcmxcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS51cml9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLl9vbkNoYW5nZVVyaX1cbiAgICAgICAgICAgICAgICAgICAgb25CbHVyPXt0aGlzLl9vbkJsdXJVcml9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8c2VsZWN0IHJlZj1cInBhZ2VDYXRlZ29yeVwiIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbCBpbnB1dC1sZ1wiPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj7igJQgQ2hvb3NlIENhdGVnb3J5IOKAlDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIHtjYXRlZ29yaWVzLm1hcCgoY2F0ZWdvcnksIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gKDxvcHRpb24ga2V5PXsnY2F0ZWdvcnktJytjYXRlZ29yeX0+e2NhdGVnb3J5fTwvb3B0aW9uPik7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgPGlucHV0IHJlZj1cInByZXZpZXdJbWFnZVwiIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbCBpbnB1dC1sZ1wiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJQcmV2aWV3IEltYWdlIFVSTFwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8aW5wdXQgcmVmPVwibWV0YVRpdGxlXCIgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIG1ldGEgdGl0bGVcIiAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgPHRleHRhcmVhIHJlZj1cIm1ldGFEZXNjcmlwdGlvblwiIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbCBpbnB1dC1sZ1wiIHJvd3M9XCIyXCIgcGxhY2Vob2xkZXI9XCJFbnRlciBtZXRhIGRlc2NyaXB0aW9uXCI+PC90ZXh0YXJlYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICAgIDxpbnB1dCByZWY9XCJtZXRhS2V5d29yZHNcIiBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2wgaW5wdXQtbGdcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgbWV0YSBrZXl3b3Jkc1wiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC14cy04XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXQgcmVmPVwicGFnZVRpdGxlXCIgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkhlYWRsaW5lXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLl9vblVwZGF0ZVBhZ2VVcml9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICA8RWRpdG9yXG4gICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5lZGl0b3J9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sIGlucHV0LWxnXCJcbiAgICAgICAgICAgICAgICB0ZXh0PXt0aGlzLnN0YXRlLmFydGljbGV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuX29uQXJ0aWNsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICBvcHRpb25zPXtlZGl0b3JPcHRpb25zfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7dGhpcy5yZW5kZXJTdWJtaXRCdXR0b24oKX1cbiAgICAgICAgICAgIDxpbnB1dCByZWY9XCJwYWdlSWRcIiB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInBhZ2VJZFwiIHZhbHVlPXt0aGlzLnN0YXRlLnBhZ2VJZH0gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCIgc3R5bGU9e3N0eWxlcy51cGxvYWRlclJvd30+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wteHMtMTJcIj5cbiAgICAgICAgICAgIDxTUkRyb3B6b25lXG4gICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMucHJldmlld0ltYWdlfVxuICAgICAgICAgICAgICBhY3RpdmVTdHlsZT17c3R5bGVzLmRyYWdBY3RpdmV9XG4gICAgICAgICAgICAgIG11bHRpcGxlPXtmYWxzZX0gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG4gICAgKTtcbiAgfVxuXG4gIF9vblBvc3REYXRlQ2hhbmdlKGRhdGV0aW1lKSB7XG4gICAgdGhpcy5wb3N0VGltZXN0YW1wID0gZGF0ZXRpbWU7XG4gICAgdGhpcy5fb25VcGRhdGVQYWdlVXJpKCk7XG4gIH1cblxuICBfZ2V0UG9zdERhdGVGb3JtYXQoZm9ybWF0ID0gXCJZWVlZLU1NLUREIEhIOm1tOjAwXCIpIHtcbiAgICBsZXQgZGF0ZUZvcm1hdCA9IG1vbWVudC51bml4KHRoaXMucG9zdFRpbWVzdGFtcCAvIDEwMDApLmZvcm1hdChmb3JtYXQpO1xuICAgIGlmIChkYXRlRm9ybWF0ID09ICdJbnZhbGlkIGRhdGUnKSB7XG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGVGb3JtYXQ7XG4gIH1cblxuICBfZ2V0UGFnZURhdGEocHVibGlzaCA9IGZhbHNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRpdGxlOiB0aGlzLnJlZnMucGFnZVRpdGxlLnZhbHVlLFxuICAgICAgYXJ0aWNsZTogdGhpcy5zdGF0ZS5hcnRpY2xlLCAvLyB0aGlzLnJlZnMucGFnZUFydGljbGUudmFsdWUsXG4gICAgICB1cmk6IHRoaXMuc3RhdGUudXJpIHx8IHRoaXMucmVmcy5wYWdlVXJpLnZhbHVlLFxuICAgICAgY2F0ZWdvcnk6IHRoaXMucmVmcy5wYWdlQ2F0ZWdvcnkudmFsdWUsXG4gICAgICBwcmV2aWV3X2ltYWdlOiB0aGlzLnJlZnMucHJldmlld0ltYWdlLnZhbHVlLFxuICAgICAgbWV0YV90aXRsZTogdGhpcy5yZWZzLm1ldGFUaXRsZS52YWx1ZSxcbiAgICAgIG1ldGFfZGVzY3JpcHRpb246IHRoaXMucmVmcy5tZXRhRGVzY3JpcHRpb24udmFsdWUsXG4gICAgICBtZXRhX2tleXdvcmRzOiB0aGlzLnJlZnMubWV0YUtleXdvcmRzLnZhbHVlLFxuICAgICAgcG9zdF9kYXRlOiB0aGlzLnBvc3RUaW1lc3RhbXAgPyB0aGlzLl9nZXRQb3N0RGF0ZUZvcm1hdCgpIDogbnVsbCxcbiAgICAgIHB1Ymxpc2g6IHB1Ymxpc2gsXG4gICAgfTtcbiAgfVxuXG4gIF9vblB1Ymxpc2goZSkge1xuICAgIHRoaXMuX29uU3VibWl0UGFnZShlLCB0cnVlKTtcbiAgfVxuXG4gIF9vblN1Ym1pdFBhZ2UoZSwgcHVibGlzaCA9IGZhbHNlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmICh0aGlzLnN0YXRlLnByb2Nlc3NpbmcpIHJldHVybjtcblxuICAgIGxldCBlbmRwb2ludCA9IHRoaXMuc3RhdGUucGFnZUlkID8gJy9wYWdlcy8nICsgdGhpcy5zdGF0ZS5wYWdlSWQgOiAnL3BhZ2VzJztcblxuICAgIHRoaXMuc2V0U3RhdGUoe3Byb2Nlc3Npbmc6IHRydWUsIHB1Ymxpc2hpbmc6IHB1Ymxpc2h9KTtcbiAgICBBcGlSZXF1ZXN0LnBvc3QoZW5kcG9pbnQpXG4gICAgICAuZGF0YSh0aGlzLl9nZXRQYWdlRGF0YShwdWJsaXNoKSlcbiAgICAgIC5zZW5kKHJlcyA9PiB7XG4gICAgICAgIGxldCBwYWdlID0gcmVzLmRhdGEsXG4gICAgICAgICAgICBtZXNzYWdlID0gcHVibGlzaCA/ICdQYWdlIHB1Ymxpc2hlZCEnIDogJ1BhZ2Ugc2F2ZWQhJztcbiAgICAgICAgVXRpbHMuc2hvd1N1Y2Nlc3MobWVzc2FnZSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHByb2Nlc3Npbmc6IGZhbHNlLFxuICAgICAgICAgIHBhZ2VJZDogcGFnZS5pZCxcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHRoaXMuX2NsZWFyRm9ybSgpO1xuICAgICAgfSk7XG4gIH1cblxuICBfY2xlYXJGb3JtKCkge1xuICAgIHRoaXMucmVmcy5hZGROZXdQYWdlLnJlc2V0KCk7XG4gICAgdGhpcy5wb3N0VGltZXN0YW1wID0gbnVsbDtcbiAgICB0aGlzLmhhc0N1c3RvbVVyaSA9IGZhbHNlO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgcHJvY2Vzc2luZzogZmFsc2UsXG4gICAgICBhcnRpY2xlOiBcIlwiLFxuICAgICAgdXJpOiBcIlwiLFxuICAgIH0pO1xuICB9XG5cbiAgX2dldFVyaUZyb21UaXRsZSgpIHtcbiAgICBsZXQgaGVhZGxpbmUgPSB0aGlzLnJlZnMucGFnZVRpdGxlLnZhbHVlIHx8ICd1bnRpdGxlZCcsXG4gICAgICAgIHBvc3REYXRlID0gdGhpcy5wb3N0VGltZXN0YW1wID8gdGhpcy5fZ2V0UG9zdERhdGVGb3JtYXQoXCItWVlZWS1NTS1ERFwiKSA6IFwiXCI7XG4gICAgcmV0dXJuIFV0aWxzLmNsZWFuRm9yVXJsKGhlYWRsaW5lK3Bvc3REYXRlKTtcbiAgfVxuXG4gIF9vbkJsdXJVcmkoZSkge1xuICAgIGlmICghIGUudGFyZ2V0LnZhbHVlKSB7XG4gICAgICB0aGlzLmhhc0N1c3RvbVVyaSA9IGZhbHNlO1xuICAgICAgdGhpcy5fb25VcGRhdGVQYWdlVXJpKCk7XG4gICAgfVxuICB9XG5cbiAgX29uQ2hhbmdlVXJpKGUpIHtcbiAgICB0aGlzLmhhc0N1c3RvbVVyaSA9IHRydWU7XG5cbiAgICB0aGlzLnNldFN0YXRlKHt1cmk6IHRoaXMucmVmcy5wYWdlVXJpLnZhbHVlfSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBfb25VcGRhdGVQYWdlVXJpKCkge1xuICAgIGlmICh0aGlzLmhhc0N1c3RvbVVyaSkgcmV0dXJuO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7dXJpOiB0aGlzLl9nZXRVcmlGcm9tVGl0bGUoKX0pO1xuICB9XG5cbiAgX29uQXJ0aWNsZUNoYW5nZShhcnRpY2xlLCBtZWRpdW0pIHtcbiAgICB0aGlzLnNldFN0YXRlKHthcnRpY2xlfSk7XG4gIH1cblxuICBfb25Vc2VyQ2hhbmdlKHVzZXIpIHtcbiAgICB0aGlzLnNldFN0YXRlKHthdXRob3JpemVkOiAhISB1c2VyLmlkfSk7XG4gIH1cbn1cblxuXG52YXIgc3R5bGVzID0ge1xuICBidXR0b246IHtcbiAgICB3aWR0aDogJzQ4JScsXG4gICAgbWFyZ2luOiAnMCAxJScsXG4gIH0sXG4gIGVkaXRvcjoge1xuICAgIGhlaWdodDogXCJhdXRvXCIsXG4gICAgbWluSGVpZ2h0OiBcIjIwZW1cIixcbiAgfSxcbiAgcHJldmlld0ltYWdlOiB7XG4gICAgY29sb3I6IFwicmdiKDE1MCwxNTAsMTUwKVwiLFxuICAgIGJvcmRlcldpZHRoOiAyLFxuICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMTUwLDE1MCwxNTAsLjgpXCIsXG4gICAgYm9yZGVyU3R5bGU6IFwiZGFzaGVkXCIsXG4gICAgZm9udFdlaWdodDogXCJib2xkXCIsXG4gICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgIHBhZGRpbmc6IFwiNDBweCAwXCIsXG4gIH0sXG4gIGRyYWdBY3RpdmU6IHtcbiAgICBib3JkZXJDb2xvcjogJ3JnYigxMjAsMTIwLDEyMCknLFxuICB9LFxuICBwcm9ncmVzc0Jhcjoge1xuICAgIGZvbnRTaXplOiBcIjE4cHhcIixcbiAgICBwYWRkaW5nOiBcIjEwcHggMFwiLFxuICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgfSxcbiAgdXBsb2FkZXJSb3c6IHtcbiAgICBtYXJnaW5Ub3A6IFwiMTVweFwiLFxuICB9LFxufTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgVXRpbHMgZnJvbSAnLi4vVXRpbHMvVXRpbHMnO1xuaW1wb3J0IEFwaVJlcXVlc3QgZnJvbSAnLi4vQXBpL0FwaVJlcXVlc3QnO1xuaW1wb3J0IEN1cnJlbnRVc2VyIGZyb20gJy4uL1N0b3Jlcy9DdXJyZW50VXNlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2VJbnZlbnRvcnkgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge307XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7fTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgYXV0aG9yaXplZDogdHJ1ZSxcbiAgICAgIHVzZXI6IHRoaXMucHJvcHMudXNlcixcbiAgICAgIHBhZ2VzOiBbXSxcbiAgICB9O1xuXG4gICAgdGhpcy5fb25Vc2VyQ2hhbmdlID0gdGhpcy5fb25Vc2VyQ2hhbmdlLmJpbmQodGhpcyk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdGhpcy5zdG9wVXNlclN1YnNjcmliZSA9IEN1cnJlbnRVc2VyLmxpc3Rlbih0aGlzLl9vblVzZXJDaGFuZ2UpO1xuICAgIHRoaXMuX2xvYWRQYWdlcygpO1xuXG4gICAgbGV0IHVzZXIgPSBDdXJyZW50VXNlci5nZXQoKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGF1dGhvcml6ZWQ6ICEhIHVzZXIuaWQsXG4gICAgICB1c2VyLFxuICAgIH0pO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5zdG9wVXNlclN1YnNjcmliZSgpO1xuICB9XG5cbiAgcmVuZGVyUm93KHBhZ2UsIGluZGV4KSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDx0ciBrZXk9eydwYWdlLScraW5kZXh9PlxuICAgICAgICA8dGQ+e3BhZ2UuaWR9PC90ZD5cbiAgICAgICAgPHRkPntwYWdlLnRpdGxlfTwvdGQ+XG4gICAgICA8L3RyPlxuICAgICk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUubG9hZGluZykgcmV0dXJuIDxoND5Mb2FkaW5nLi4uPC9oND47XG4gICAgaWYgKCEgdGhpcy5zdGF0ZS5hdXRob3JpemVkKSByZXR1cm4gPGg0Pk11c3QgYmUgbG9nZ2VkIGluIDooPC9oND47XG5cbiAgICBpZiAodGhpcy5zdGF0ZS5wYWdlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiA8aDQ+Tm8gcGFnZXMgYXZhaWxhYmxlIDooPC9oND47XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLWhvdmVyXCI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICA8dGg+SUQ8L3RoPlxuICAgICAgICAgIDx0aD5UaXRsZTwvdGg+XG4gICAgICAgIDwvdHI+XG4gICAgICAgIHt0aGlzLnN0YXRlLnBhZ2VzLm1hcCh0aGlzLnJlbmRlclJvdy5iaW5kKHRoaXMpKX1cbiAgICAgIDwvdGFibGU+XG4gICAgKTtcbiAgfVxuXG4gIF9sb2FkUGFnZXMoKSB7XG4gICAgQXBpUmVxdWVzdC5nZXQoJy9wYWdlcycpXG4gICAgICAuc2VuZChyZXMgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICBwYWdlczogcmVzLmRhdGEsXG4gICAgICAgIH0pO1xuICAgICAgfSwgKCkgPT4gdGhpcy5zZXRTdGF0ZSh7bG9hZGluZzogZmFsc2V9KSk7XG4gIH1cblxuICBfb25Vc2VyQ2hhbmdlKHVzZXIpIHtcbiAgICB0aGlzLnNldFN0YXRlKHthdXRob3JpemVkOiAhISB1c2VyLmlkfSk7XG4gIH1cbn1cblxuXG52YXIgc3R5bGVzID0ge1xuICBjb250YWluZXI6IHt9LFxufTsiLCIvLyBtYWluLmpzXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgSW5pdGlhbGl6ZSBmcm9tICcuL1V0aWxzL0luaXRpYWxpemUnO1xuaW1wb3J0IFJvdXRlcyBmcm9tICcuL1V0aWxzL1JvdXRlcyc7XG5cbi8vIFJ1biB0aGF0IGluaXQ6XG5Jbml0aWFsaXplLm9uTG9hZCgpO1xuXG4vLyBJbml0aWFsaXplIGN1cnJlbnQgcm91dGVcblJvdXRlcy5jdXJyZW50KHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSk7Il19
