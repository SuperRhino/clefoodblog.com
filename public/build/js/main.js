(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))

},{"_process":2}],2:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],3:[function(require,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

"use strict";

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  if (!(obj instanceof Object && !Array.isArray(obj))) {
    throw new Error('keyMirror(...): Argument must be an object.');
  }
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{}],4:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _ApiRequest=require('./ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var AccessToken=function(){function AccessToken(){_classCallCheck(this,AccessToken);}_createClass(AccessToken,null,[{key:'get',value:function get(verify){if(typeof verify==='undefined'){verify=false;}return new Promise(function(resolve,reject){if(AccessToken._accessToken){return resolve(AccessToken._accessToken);}var access_token=localStorage.getItem(_Constants.Config.Storage.ACCESS_TOKEN);if(access_token===null){AccessToken.clear();return reject(new Error({code:403,message:'Unauthorized'}));}AccessToken.set(access_token,true).then(resolve);});}},{key:'set',value:function set(access_token,dontUpdateStorage){AccessToken._accessToken=access_token;return new Promise(function(resolve,reject){if(!dontUpdateStorage){localStorage.setItem(_Constants.Config.Storage.ACCESS_TOKEN,access_token);}resolve(access_token);});}},{key:'clear',value:function clear(){AccessToken._accessToken=null;return localStorage.removeItem(_Constants.Config.Storage.ACCESS_TOKEN);}}]);return AccessToken;}();exports.default=AccessToken;

},{"../Utils/Constants":13,"./ApiRequest":5}],5:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiUtils=require('./ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('./AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _superagent=require('superagent');var _superagent2=_interopRequireDefault(_superagent);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var ApiRequest=function(){_createClass(ApiRequest,null,[{key:'updateNetworkIndicator',value:function updateNetworkIndicator(){var dir=arguments.length<=0||arguments[0]===undefined?'-':arguments[0];if(dir==='+'){ApiRequest.activeRequests++;}else {ApiRequest.activeRequests--;}if(ApiRequest.activeRequests<=0){ApiRequest.activeRequests=0;}else {}}},{key:'create',value:function create(method,endpoint){return new this(method,endpoint);}},{key:'createAnon',value:function createAnon(method,endpoint){var request=new this(method,endpoint);request.setAnonymous(true);return request;}},{key:'get',value:function get(endpoint){return new this('get',endpoint);}},{key:'post',value:function post(endpoint){return new this('post',endpoint);}},{key:'put',value:function put(endpoint){return new this('put',endpoint);}},{key:'delete',value:function _delete(endpoint){return new this('delete',endpoint);}}]);function ApiRequest(method,endpoint){_classCallCheck(this,ApiRequest);if(endpoint===undefined){endpoint=method;method='get';}else {method=method.toLowerCase();}if(endpoint.indexOf('?')!==-1){throw new Error('You must set query string data via the `query` function');}this.isAnonymous=false;this.handleErrors=true;this.ignoreNetworkError=false;this.url=_ApiUtils2.default.buildUrl(endpoint);this._setupRequest(method);}_createClass(ApiRequest,[{key:'setAnonymous',value:function setAnonymous(isAnonymous){this.isAnonymous=isAnonymous;return this;}},{key:'setHandleErrors',value:function setHandleErrors(handleErrors){this.handleErrors=handleErrors;return this;}},{key:'setIgnoreNetworkError',value:function setIgnoreNetworkError(ignoreNetworkError){this.ignoreNetworkError=ignoreNetworkError;return this;}},{key:'configure',value:function configure(callback){callback(this.request);return this;}},{key:'send',value:function send(callback,errCallback){var _this=this;if(this.isAnonymous){return this._sendIt(callback,errCallback);}_AccessToken2.default.get().then(function(token){_this.query({token:token});_this._sendIt(callback,errCallback);});}},{key:'data',value:function data(_data){this.requestBody=JSON.stringify(_data);return this;}},{key:'query',value:function query(data){this.queryData=Object.assign(this.queryData,data);return this;}},{key:'header',value:function header(_header,value){this.requestHeaders[_header]=value;return this;}},{key:'headers',value:function headers(_headers){this.requestHeaders=Object.assign(this.requestHeaders,_headers);return this;}},{key:'_setupRequest',value:function _setupRequest(method){this.requestMethod=!method?'get':method;this.requestHeaders={'Accept':'application/json','Content-Type':'application/json'};this.queryData={};this.requestBody={};this.request=null;}},{key:'_sendIt',value:function _sendIt(callback,errCallback){var _this2=this;ApiRequest.updateNetworkIndicator('+');this.request=_superagent2.default[this.requestMethod](this.url);if(!_Utils2.default.isEmpty(this.queryData)){this.request.query(this.queryData);}if(!_Utils2.default.isEmpty(this.requestHeaders)){this.request.set(this.requestHeaders);}this.request.send(this.requestBody).end(function(err,res){ApiRequest.updateNetworkIndicator();if(res.ok){callback(res.body);}else if(res.unauthorized){_AccessToken2.default.clear();_Actions2.default.noauth();}else {if(_this2.handleErrors){_ApiUtils2.default.handleError(res.body.error);}if(errCallback)errCallback(res.body.error);}});}}]);return ApiRequest;}();ApiRequest.activeRequests=0;exports.default=ApiRequest;

},{"../Utils/Actions":12,"../Utils/Utils":16,"./AccessToken":4,"./ApiUtils":6,"superagent":"superagent"}],6:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Constants=require('../Utils/Constants');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var DEFAULT_ERROR='There was a problem with your request';var ApiUtils=function(){function ApiUtils(){_classCallCheck(this,ApiUtils);}_createClass(ApiUtils,null,[{key:'handleError',value:function handleError(err){console.warn(err);_Utils2.default.alertError(err.message||DEFAULT_ERROR);}},{key:'handleNetworkError',value:function handleNetworkError(err){console.warn(err);}},{key:'buildUrl',value:function buildUrl(endpoint){endpoint=_Utils2.default.trimChar(endpoint,'/');if(endpoint.indexOf(_Constants.Config.api_root)===-1){endpoint=_Constants.Config.api_root+endpoint;}return endpoint;}}]);return ApiUtils;}();exports.default=ApiUtils;

},{"../Utils/Constants":13,"../Utils/Utils":16}],7:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var AddPageForm=function(_React$Component){_inherits(AddPageForm,_React$Component);function AddPageForm(props){_classCallCheck(this,AddPageForm);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(AddPageForm).call(this,props));_this.state={authorized:true,user:_this.props.user};_this._onSubmitEvent=_this._onSubmitEvent.bind(_this);_this._onSubmitPage=_this._onSubmitPage.bind(_this);_this._onUserChange=_this._onUserChange.bind(_this);return _this;}_createClass(AddPageForm,[{key:'componentWillMount',value:function componentWillMount(){this.stopUserSubscribe=_CurrentUser2.default.listen(this._onUserChange);var user=_CurrentUser2.default.get();this.setState({authorized:!!user.id,user:user});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopUserSubscribe();}},{key:'render',value:function render(){if(!this.state.authorized)return _react2.default.createElement('h4',null,'Must be logged in :(');var placeholderCopy="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi iaculis est lectus, posuere scelerisque massa rhoncus in. Vestibulum facilisis purus non velit porttitor, non imperdiet erat condimentum.";return _react2.default.createElement('div',{className:'row'},_react2.default.createElement('div',{className:'col-xs-4'},_react2.default.createElement('h1',null,'Add Event'),_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Add an event to the homepage.')),_react2.default.createElement('form',{className:'',role:'form',onSubmit:this._onSubmitEvent},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'eventTitle',className:'form-control input-lg',type:'text',placeholder:'Headline'})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('textarea',{ref:'eventDescription',className:'form-control input-lg',rows:'3',placeholder:'Enter short description'})),_react2.default.createElement('button',{type:'submit',className:'btn btn-lg btn-info',style:styles.button},_react2.default.createElement('span',{className:'glyphicon glyphicon-ok-sign'}),' Add Event'))),_react2.default.createElement('div',{className:'col-xs-8'},_react2.default.createElement('h1',null,'Add Page'),_react2.default.createElement('p',{className:'lead'},_react2.default.createElement('em',null,'Optionally add details page.')),_react2.default.createElement('form',{className:'',role:'form',onSubmit:this._onSubmitPage},_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('input',{ref:'pageTitle',className:'form-control input-lg',type:'text',placeholder:'Headline'})),_react2.default.createElement('div',{className:'form-group'},_react2.default.createElement('textarea',{ref:'pageDescription',className:'form-control input-lg',rows:'5',placeholder:placeholderCopy})),_react2.default.createElement('button',{type:'submit',className:'btn btn-lg btn-success',style:styles.button},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign'}),' Add Event + Page'))));}},{key:'_getEventData',value:function _getEventData(){return {title:this.refs.eventTitle.value,description:this.refs.eventDescription.value};}},{key:'_getPageData',value:function _getPageData(){return {title:this.refs.pageTitle.value,description:this.refs.pageDescription.value};}},{key:'_onSubmitPage',value:function _onSubmitPage(e){e.preventDefault();var data={event:this._getEventData(),page:this._getPageData()};console.log('_onSubmitPage',data);}},{key:'_onSubmitEvent',value:function _onSubmitEvent(e){e.preventDefault();var data=this._getEventData();console.log('_onSubmitEvent',data);}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({authorized:!!user.id});}}]);return AddPageForm;}(_react2.default.Component);AddPageForm.propTypes={};AddPageForm.defaultProps={};exports.default=AddPageForm;var styles={button:{width:'100%'}};

},{"../Stores/CurrentUser":11,"react":"react"}],8:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LoginForm=function(_React$Component){_inherits(LoginForm,_React$Component);function LoginForm(props){_classCallCheck(this,LoginForm);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(LoginForm).call(this,props));_this.state={};_this.onSubmit=_this.onSubmit.bind(_this);return _this;}_createClass(LoginForm,[{key:'render',value:function render(){return _react2.default.createElement('form',{className:'navbar-form navbar-right',role:'form',onSubmit:this.onSubmit},_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'username',type:'text',placeholder:'username',className:'form-control'})),_react2.default.createElement('div',{className:'form-group',style:styles.formField},_react2.default.createElement('input',{ref:'password',type:'password',placeholder:'password',className:'form-control'})),_react2.default.createElement('button',{type:'submit',className:'btn btn-default'},'Sign in'));}},{key:'onSubmit',value:function onSubmit(e){e.preventDefault();var data={username:this.refs.username.value,password:this.refs.password.value};_Actions2.default.login(data);}}]);return LoginForm;}(_react2.default.Component);LoginForm.propTypes={};LoginForm.defaultProps={};exports.default=LoginForm;var styles={formField:{margin:3}};

},{"../Api/ApiRequest":5,"../Utils/Actions":12,"react":"react"}],9:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserMenu=function(_React$Component){_inherits(UserMenu,_React$Component);function UserMenu(props){_classCallCheck(this,UserMenu);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserMenu).call(this,props));_this.state={user:_this.props.user};return _this;}_createClass(UserMenu,[{key:'componentWillMount',value:function componentWillMount(){this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();}},{key:'render',value:function render(){return _react2.default.createElement('ul',{className:'nav navbar-nav navbar-right'},_react2.default.createElement('li',{className:'dropdown'},_react2.default.createElement('a',{href:'#',className:'dropdown-toggle','data-toggle':'dropdown',role:'button','aria-haspopup':'true','aria-expanded':'false'},this.state.user.username,_react2.default.createElement('span',{className:'caret'})),_react2.default.createElement('ul',{className:'dropdown-menu'},_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'/add-page'},_react2.default.createElement('span',{className:'glyphicon glyphicon-plus-sign','aria-hidden':'true',style:styles.icon}),'Add Page')),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'#',onClick:this._onEditPress},_react2.default.createElement('span',{className:'glyphicon glyphicon-edit','aria-hidden':'true',style:styles.icon}),'Edit Something')),_react2.default.createElement('li',{role:'separator',className:'divider'}),_react2.default.createElement('li',{className:'dropdown-header'},'My Account'),_react2.default.createElement('li',null,_react2.default.createElement('a',{href:'#',onClick:this._onLogoutPress},_react2.default.createElement('span',{className:'glyphicon glyphicon-log-out','aria-hidden':'true',style:styles.icon}),'Sign Out')))));}},{key:'_onEditPress',value:function _onEditPress(e){e.preventDefault();console.log("_onEditPress");}},{key:'_onLogoutPress',value:function _onLogoutPress(e){e.preventDefault();_Actions2.default.logout();}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user});}}]);return UserMenu;}(_react2.default.Component);UserMenu.propTypes={user:_react2.default.PropTypes.object};UserMenu.defaultProps={user:{}};exports.default=UserMenu;var styles={icon:{paddingRight:'5px'}};

},{"../Stores/CurrentUser":11,"../Utils/Actions":12,"react":"react"}],10:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _CurrentUser=require('../Stores/CurrentUser');var _CurrentUser2=_interopRequireDefault(_CurrentUser);var _LoginForm=require('./LoginForm');var _LoginForm2=_interopRequireDefault(_LoginForm);var _UserMenu=require('./UserMenu');var _UserMenu2=_interopRequireDefault(_UserMenu);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var UserNav=function(_React$Component){_inherits(UserNav,_React$Component);function UserNav(props){_classCallCheck(this,UserNav);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(UserNav).call(this,props));_this.state={loading:true,user:{}};return _this;}_createClass(UserNav,[{key:'componentWillMount',value:function componentWillMount(){var _this2=this;this.stopListening=_CurrentUser2.default.listen(this._onUserChange.bind(this));this.stopAuthListen=_Actions2.default.noauth.listen(function(){return _this2.setState({loading:false});});this.setState({user:_CurrentUser2.default.get()});}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.stopListening();this.stopAuthListen();}},{key:'renderLoginForm',value:function renderLoginForm(){return _react2.default.createElement(_LoginForm2.default,null);}},{key:'renderUserMenu',value:function renderUserMenu(){return _react2.default.createElement(_UserMenu2.default,{user:this.state.user});}},{key:'render',value:function render(){if(this.state.loading){return null;}return _react2.default.createElement('div',{style:styles.container},this.state.user.id?this.renderUserMenu():this.renderLoginForm());}},{key:'_onUserChange',value:function _onUserChange(user){this.setState({user:user,loading:false});}}]);return UserNav;}(_react2.default.Component);UserNav.propTypes={};UserNav.defaultProps={};exports.default=UserNav;var styles={container:{height:'56px'},username:{margin:3,lineHeight:'44px',color:'white'}};

},{"../Stores/CurrentUser":11,"../Utils/Actions":12,"./LoginForm":8,"./UserMenu":9,"react":"react"}],11:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _Constants=require('../Utils/Constants');var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);var _ApiUtils=require('../Api/ApiUtils');var _ApiUtils2=_interopRequireDefault(_ApiUtils);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var defaultUser={id:null,username:null,session_id:null};var currentUser=Object.assign({},defaultUser);exports.default=_reflux2.default.createStore({listenables:[_Actions2.default],init:function init(){},get:function get(){return currentUser;},update:function update(userUpdates){currentUser=Object.assign({},userUpdates);this.trigger(currentUser);},onLogin:function onLogin(creds){_ApiRequest2.default.post('/account/login').data(creds).setAnonymous(true).send(function(res){_AccessToken2.default.set(res.data.session_id).then(function(){return _Actions2.default.login.completed(res);});},_Actions2.default.login.failed);},onLoginCompleted:function onLoginCompleted(response){var user=response.data;this.update(user);},onLogout:function onLogout(){_ApiRequest2.default.post('/account/logout').setHandleErrors(false).setIgnoreNetworkError(true).send(_Actions2.default.logout.completed,_Actions2.default.logout.failed);this.update(defaultUser);},onLogoutCompleted:function onLogoutCompleted(){_AccessToken2.default.clear();},onLogoutFailed:function onLogoutFailed(){_AccessToken2.default.clear();},onLoadUser:function onLoadUser(){_ApiRequest2.default.get('/account').send(_Actions2.default.loadUser.completed,_Actions2.default.loadUser.failed);},onLoadUserCompleted:function onLoadUserCompleted(response){this.update(response.data);}});

},{"../Api/AccessToken":4,"../Api/ApiRequest":5,"../Api/ApiUtils":6,"../Utils/Actions":12,"../Utils/Constants":13,"reflux":"reflux"}],12:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reflux=require('reflux');var _reflux2=_interopRequireDefault(_reflux);var _AccessToken=require('../Api/AccessToken');var _AccessToken2=_interopRequireDefault(_AccessToken);var _ApiRequest=require('../Api/ApiRequest');var _ApiRequest2=_interopRequireDefault(_ApiRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var Actions=_reflux2.default.createActions(["auth","unauth","noauth",{"login":{asyncResult:true}},{"logout":{asyncResult:true}},{"loadUser":{asyncResult:true}}]);Actions.auth.listen(function(){_AccessToken2.default.get(true).then(function(accessToken){return Actions.loadUser(accessToken);}).catch(function(){return Actions.noauth();});});exports.default=Actions;

},{"../Api/AccessToken":4,"../Api/ApiRequest":5,"reflux":"reflux"}],13:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var keyMirror=require('keyMirror');var HOST_NAME="clefoodblog.com";var ENV=window.location.hostname===HOST_NAME?'production':'dev';var isProd=true,apiVersion='v1',apiHost='http://'+HOST_NAME+'/api',siteRoot='http://'+HOST_NAME;switch(ENV){case 'dev':isProd=false;apiHost='http://dev.'+HOST_NAME+'/api';siteRoot='http://dev.'+HOST_NAME;break;}var Config=exports.Config={ENV:ENV,api_root:apiHost+'/',site_root:siteRoot+'/',Storage:keyMirror({ACCESS_TOKEN:null})};

},{"keyMirror":3}],14:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _jquery=require('jquery');var _jquery2=_interopRequireDefault(_jquery);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Actions=require('../Utils/Actions');var _Actions2=_interopRequireDefault(_Actions);var _UserNav=require('../Components/UserNav');var _UserNav2=_interopRequireDefault(_UserNav);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Initialize=function(){function Initialize(){_classCallCheck(this,Initialize);}_createClass(Initialize,null,[{key:'globals',value:function globals(){window.jQuery=_jquery2.default;}},{key:'bootstrap',value:function bootstrap(){require('bootstrap');}},{key:'onReady',value:function onReady(){var baButton=document.getElementById('btnComingSoon');if(baButton){baButton.onclick=function(){if(ga)ga('send','event','buttons','click','stay tuned');console.log('send','event','buttons','click','stay tuned');return false;};}_reactDom2.default.render(_react2.default.createElement(_UserNav2.default,null),document.getElementById('UserNav'));}},{key:'authUser',value:function authUser(){_Actions2.default.auth();}},{key:'onLoad',value:function onLoad(){Initialize.globals();Initialize.bootstrap();Initialize.onReady();Initialize.authUser();}}]);return Initialize;}();exports.default=Initialize;

},{"../Components/UserNav":10,"../Utils/Actions":12,"bootstrap":"bootstrap","jquery":"jquery","react":"react","react-dom":"react-dom"}],15:[function(require,module,exports){
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _path=require('path');var _path2=_interopRequireDefault(_path);var _Utils=require('../Utils/Utils');var _Utils2=_interopRequireDefault(_Utils);var _AddPageForm=require('../Components/AddPageForm');var _AddPageForm2=_interopRequireDefault(_AddPageForm);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Routes=function(){function Routes(){_classCallCheck(this,Routes);}_createClass(Routes,null,[{key:'current',value:function current(pathname){var basename=_path2.default.basename(pathname)||Routes.homeRoute;var camelName=basename.replace(/-([a-z])/g,function(g){return g[1].toUpperCase();});if(typeof Routes[camelName]==='function'){Routes[camelName]();}}},{key:'home',value:function home(){console.log('Home route');}},{key:'addPage',value:function addPage(){_reactDom2.default.render(_react2.default.createElement(_AddPageForm2.default,null),document.getElementById('AddPageForm'));}}]);return Routes;}();Routes.homeRoute='home';exports.default=Routes;

},{"../Components/AddPageForm":7,"../Utils/Utils":16,"path":1,"react":"react","react-dom":"react-dom"}],16:[function(require,module,exports){
'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./Constants');function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Utils=function(){function Utils(){_classCallCheck(this,Utils);}_createClass(Utils,null,[{key:'alertError',value:function alertError(message){alert(message);}},{key:'getJSONP',value:function getJSONP(url,callback){var ref=window.document.getElementsByTagName('script')[0];var script=window.document.createElement('script');script.src=url+(url.indexOf('?')+1?'&':'?')+'callback='+callback;ref.parentNode.insertBefore(script,ref);script.onload=function(){this.remove();};}},{key:'quoteRegex',value:function quoteRegex(regex){return regex.replace(/([()[{*+.$^\\|?])/g,'\\$1');}},{key:'trimChar',value:function trimChar(str,chr){chr=Utils.quoteRegex(chr);return str.replace(new RegExp('^'+chr+'+|'+chr+'+$','g'),"");}},{key:'toQueryString',value:function toQueryString(obj,prefix){var str=[];for(var p in obj){if(obj.hasOwnProperty(p)){var k=prefix?prefix+"["+p+"]":p,v=obj[p];str.push((typeof v==='undefined'?'undefined':_typeof(v))=="object"?Utils.toQueryString(v,k):encodeURIComponent(k)+"="+encodeURIComponent(v));}}return str.join("&");}},{key:'isEmpty',value:function isEmpty(obj){if(obj==null)return true;if(obj.length>0)return false;if(obj.length===0)return true;if(Object.getOwnPropertyNames(obj).length>0)return false;return true;}}]);return Utils;}();exports.default=Utils;

},{"./Constants":13}],17:[function(require,module,exports){
'use strict';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);var _Initialize=require('./Utils/Initialize');var _Initialize2=_interopRequireDefault(_Initialize);var _Routes=require('./Utils/Routes');var _Routes2=_interopRequireDefault(_Routes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_Initialize2.default.onLoad();_Routes2.default.current(window.location.pathname);

},{"./Utils/Initialize":14,"./Utils/Routes":15,"react":"react","react-dom":"react-dom"}]},{},[17])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
